/* The copyright in this software is being made available under the BSD
 * License, included below. This software may be subject to other third party
 * and contributor rights, including patent rights, and no such rights are
 * granted under this license.
 *
 * Copyright (c) 2010-2016, ITU/ISO/IEC
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *  * Neither the name of the ITU/ISO/IEC nor the names of its contributors may
 *    be used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

/** \file     TEncSearch.cpp
 \brief    encoder search class
 */

#include "TLibCommon/CommonDef.h"
#include "TLibCommon/TComRom.h"
#include "TLibCommon/TComMotionInfo.h"
#include "TEncSearch.h"
#include "TLibCommon/TComTU.h"
#include "TLibCommon/Debug.h"
#include <math.h>
#include <limits>
#include <fstream>
#include <iostream>
#include <algorithm>


// EMI: Parameters declaration

signed short MVX_HALF, MVX_QRTER, MVY_HALF, MVY_QRTER = 0;
float  C, H1, H2, V1, V2, U1, U2, U3, U4;
long int array_e[100000];

float IN[126] = {};
float X1[22] = {};
float X2[20] = {};
float OUT[49] = {};
int N, NN_out, index_ref, counter_i, PUHeight, PUWidth, PIdx, PAddr, xP, yP, nPSW, nPSH;

/*
The next group of variables are all 1D and 2D arrays. The reason why I declared them as std::array is because that
way they can be assigned in a cleaner manner. These arrays are assigned values in TEncSearch::init() function depending
on the chosen Quantization Parameter
https://stackoverflow.com/questions/16059781/2d-array-value-assign-after-declaration-in-c for more info on 2D array assignment
*/
std::array<std::array<float,4>,8> embs0, embs1;
std::array<std::array<float,50>,481> embs2;
std::array<std::array<float,50>,271> embs3;
std::array<std::array<float,2>,3> embs4;
std::array<std::array<float,7>,14> embs5;
std::array<int, 481> xArray;
std::array<int, 271> yArray;

std::array<std::array<float,126>,22> in_h1;
std::array<std::array<float,22>,20> h1_h2;
std::array<std::array<float,20>,49> h2_out;
std::array<float ,22> b1, BN_gamma_1, BN_beta_1;
std::array<float ,20> b2, BN_gamma_2, BN_beta_2;
std::array<float ,49> bout;
std::array<float ,9> BN_gamma_in, mean, stdev;

// Helper Functions

float relu(float x){
	if (x>0)	{	return x; }
	else { return 0; }
}

float sigmoid(float x){
  return (1 / (1 + std::exp(-x)));
}

//end of modification


//! \ingroup TLibEncoder
//! \{

static const TComMv s_acMvRefineH[9] =
{
  TComMv(  0,  0 ), // 0
  TComMv(  0, -1 ), // 1
  TComMv(  0,  1 ), // 2
  TComMv( -1,  0 ), // 3
  TComMv(  1,  0 ), // 4
  TComMv( -1, -1 ), // 5
  TComMv(  1, -1 ), // 6
  TComMv( -1,  1 ), // 7
  TComMv(  1,  1 )  // 8
};

static const TComMv s_acMvRefineQ[9] =
{
  TComMv(  0,  0 ), // 0
  TComMv(  0, -1 ), // 1
  TComMv(  0,  1 ), // 2
  TComMv( -1, -1 ), // 5
  TComMv(  1, -1 ), // 6
  TComMv( -1,  0 ), // 3
  TComMv(  1,  0 ), // 4
  TComMv( -1,  1 ), // 7
  TComMv(  1,  1 )  // 8
};

static Void offsetSubTUCBFs(TComTU &rTu, const ComponentID compID)
{
        TComDataCU *pcCU              = rTu.getCU();
  const UInt        uiTrDepth         = rTu.GetTransformDepthRel();
  const UInt        uiAbsPartIdx      = rTu.GetAbsPartIdxTU(compID);
  const UInt        partIdxesPerSubTU = rTu.GetAbsPartIdxNumParts(compID) >> 1;

  //move the CBFs down a level and set the parent CBF

  UChar subTUCBF[2];
  UChar combinedSubTUCBF = 0;

  for (UInt subTU = 0; subTU < 2; subTU++)
  {
    const UInt subTUAbsPartIdx = uiAbsPartIdx + (subTU * partIdxesPerSubTU);

    subTUCBF[subTU]   = pcCU->getCbf(subTUAbsPartIdx, compID, uiTrDepth);
    combinedSubTUCBF |= subTUCBF[subTU];
  }

  for (UInt subTU = 0; subTU < 2; subTU++)
  {
    const UInt subTUAbsPartIdx = uiAbsPartIdx + (subTU * partIdxesPerSubTU);
    const UChar compositeCBF = (subTUCBF[subTU] << 1) | combinedSubTUCBF;

    pcCU->setCbfPartRange((compositeCBF << uiTrDepth), compID, subTUAbsPartIdx, partIdxesPerSubTU);
  }
}


TEncSearch::TEncSearch()
: m_puhQTTempTrIdx(NULL)
, m_pcQTTempTComYuv(NULL)
, m_pcEncCfg (NULL)
, m_pcTrQuant (NULL)
, m_pcRdCost (NULL)
, m_pcEntropyCoder (NULL)
, m_iSearchRange (0)
, m_bipredSearchRange (0)
, m_motionEstimationSearchMethod (MESEARCH_FULL)
, m_pppcRDSbacCoder (NULL)
, m_pcRDGoOnSbacCoder (NULL)
, m_pTempPel (NULL)
, m_isInitialized (false)
{
  for (UInt ch=0; ch<MAX_NUM_COMPONENT; ch++)
  {
    m_ppcQTTempCoeff[ch]                           = NULL;
#if ADAPTIVE_QP_SELECTION
    m_ppcQTTempArlCoeff[ch]                        = NULL;
#endif
    m_puhQTTempCbf[ch]                             = NULL;
    m_phQTTempCrossComponentPredictionAlpha[ch]    = NULL;
    m_pSharedPredTransformSkip[ch]                 = NULL;
    m_pcQTTempTUCoeff[ch]                          = NULL;
#if ADAPTIVE_QP_SELECTION
    m_ppcQTTempTUArlCoeff[ch]                      = NULL;
#endif
    m_puhQTTempTransformSkipFlag[ch]               = NULL;
  }

  for (Int i=0; i<MAX_NUM_REF_LIST_ADAPT_SR; i++)
  {
    memset (m_aaiAdaptSR[i], 0, MAX_IDX_ADAPT_SR * sizeof (Int));
  }
  for (Int i=0; i<AMVP_MAX_NUM_CANDS+1; i++)
  {
    memset (m_auiMVPIdxCost[i], 0, (AMVP_MAX_NUM_CANDS+1) * sizeof (UInt) );
  }

  setWpScalingDistParam( NULL, -1, REF_PIC_LIST_X );
}


Void TEncSearch::destroy()
{
  assert (m_isInitialized);
  if ( m_pTempPel )
  {
    delete [] m_pTempPel;
    m_pTempPel = NULL;
  }

  if ( m_pcEncCfg )
  {
    const UInt uiNumLayersAllocated = m_pcEncCfg->getQuadtreeTULog2MaxSize()-m_pcEncCfg->getQuadtreeTULog2MinSize()+1;

    for (UInt ch=0; ch<MAX_NUM_COMPONENT; ch++)
    {
      for (UInt layer = 0; layer < uiNumLayersAllocated; layer++)
      {
        delete[] m_ppcQTTempCoeff[ch][layer];
#if ADAPTIVE_QP_SELECTION
        delete[] m_ppcQTTempArlCoeff[ch][layer];
#endif
      }
      delete[] m_ppcQTTempCoeff[ch];
      delete[] m_puhQTTempCbf[ch];
#if ADAPTIVE_QP_SELECTION
      delete[] m_ppcQTTempArlCoeff[ch];
#endif
    }

    for( UInt layer = 0; layer < uiNumLayersAllocated; layer++ )
    {
      m_pcQTTempTComYuv[layer].destroy();
    }
  }

  delete[] m_puhQTTempTrIdx;
  delete[] m_pcQTTempTComYuv;

  for (UInt ch=0; ch<MAX_NUM_COMPONENT; ch++)
  {
    delete[] m_pSharedPredTransformSkip[ch];
    delete[] m_pcQTTempTUCoeff[ch];
#if ADAPTIVE_QP_SELECTION
    delete[] m_ppcQTTempTUArlCoeff[ch];
#endif
    delete[] m_phQTTempCrossComponentPredictionAlpha[ch];
    delete[] m_puhQTTempTransformSkipFlag[ch];
  }
  m_pcQTTempTransformSkipTComYuv.destroy();

  m_tmpYuvPred.destroy();
  m_isInitialized = false;
}

TEncSearch::~TEncSearch()
{
  if (m_isInitialized)
  {
    destroy();
  }
}




Void TEncSearch::init(TEncCfg*       pcEncCfg,
                      TComTrQuant*   pcTrQuant,
                      Int            iSearchRange,
                      Int            bipredSearchRange,
                      MESearchMethod motionEstimationSearchMethod,
                      const UInt     maxCUWidth,
                      const UInt     maxCUHeight,
                      const UInt     maxTotalCUDepth,
                      TEncEntropy*   pcEntropyCoder,
                      TComRdCost*    pcRdCost,
                      TEncSbac***    pppcRDSbacCoder,
                      TEncSbac*      pcRDGoOnSbacCoder
                      )
{
  assert (!m_isInitialized);
  m_pcEncCfg                     = pcEncCfg;
  m_pcTrQuant                    = pcTrQuant;
  m_iSearchRange                 = iSearchRange;
  m_bipredSearchRange            = bipredSearchRange;
  m_motionEstimationSearchMethod = motionEstimationSearchMethod;
  m_pcEntropyCoder               = pcEntropyCoder;
  m_pcRdCost                     = pcRdCost;

  m_pppcRDSbacCoder              = pppcRDSbacCoder;
  m_pcRDGoOnSbacCoder            = pcRDGoOnSbacCoder;
  
  for (UInt iDir = 0; iDir < MAX_NUM_REF_LIST_ADAPT_SR; iDir++)
  {
    for (UInt iRefIdx = 0; iRefIdx < MAX_IDX_ADAPT_SR; iRefIdx++)
    {
      m_aaiAdaptSR[iDir][iRefIdx] = iSearchRange;
    }
  }

  // initialize motion cost
  for( Int iNum = 0; iNum < AMVP_MAX_NUM_CANDS+1; iNum++)
  {
    for( Int iIdx = 0; iIdx < AMVP_MAX_NUM_CANDS; iIdx++)
    {
      if (iIdx < iNum)
      {
        m_auiMVPIdxCost[iIdx][iNum] = xGetMvpIdxBits(iIdx, iNum);
      }
      else
      {
        m_auiMVPIdxCost[iIdx][iNum] = MAX_INT;
      }
    }
  }

  const ChromaFormat cform=pcEncCfg->getChromaFormatIdc();
  initTempBuff(cform);

  m_pTempPel = new Pel[maxCUWidth*maxCUHeight];

  const UInt uiNumLayersToAllocate = pcEncCfg->getQuadtreeTULog2MaxSize()-pcEncCfg->getQuadtreeTULog2MinSize()+1;
  const UInt uiNumPartitions = 1<<(maxTotalCUDepth<<1);
  for (UInt ch=0; ch<MAX_NUM_COMPONENT; ch++)
  {
    const UInt csx=::getComponentScaleX(ComponentID(ch), cform);
    const UInt csy=::getComponentScaleY(ComponentID(ch), cform);
    m_ppcQTTempCoeff[ch] = new TCoeff* [uiNumLayersToAllocate];
#if ADAPTIVE_QP_SELECTION
    m_ppcQTTempArlCoeff[ch]  = new TCoeff*[uiNumLayersToAllocate];
#endif
    m_puhQTTempCbf[ch] = new UChar  [uiNumPartitions];

    for (UInt layer = 0; layer < uiNumLayersToAllocate; layer++)
    {
      m_ppcQTTempCoeff[ch][layer] = new TCoeff[(maxCUWidth*maxCUHeight)>>(csx+csy)];
#if ADAPTIVE_QP_SELECTION
      m_ppcQTTempArlCoeff[ch][layer]  = new TCoeff[(maxCUWidth*maxCUHeight)>>(csx+csy) ];
#endif
    }

    m_phQTTempCrossComponentPredictionAlpha[ch]    = new SChar  [uiNumPartitions];
    m_pSharedPredTransformSkip[ch]                 = new Pel   [MAX_CU_SIZE*MAX_CU_SIZE];
    m_pcQTTempTUCoeff[ch]                          = new TCoeff[MAX_CU_SIZE*MAX_CU_SIZE];
#if ADAPTIVE_QP_SELECTION
    m_ppcQTTempTUArlCoeff[ch]                      = new TCoeff[MAX_CU_SIZE*MAX_CU_SIZE];
#endif
    m_puhQTTempTransformSkipFlag[ch]               = new UChar [uiNumPartitions];
  }
  m_puhQTTempTrIdx   = new UChar  [uiNumPartitions];
  m_pcQTTempTComYuv  = new TComYuv[uiNumLayersToAllocate];
  for( UInt ui = 0; ui < uiNumLayersToAllocate; ++ui )
  {
    m_pcQTTempTComYuv[ui].create( maxCUWidth, maxCUHeight, pcEncCfg->getChromaFormatIdc() );
  }
  m_pcQTTempTransformSkipTComYuv.create( maxCUWidth, maxCUHeight, pcEncCfg->getChromaFormatIdc() );
  m_tmpYuvPred.create(MAX_CU_SIZE, MAX_CU_SIZE, pcEncCfg->getChromaFormatIdc());
  m_isInitialized = true;

  // EMI: Weights and Bias Initialization based on QP

  xArray = {
    0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788, 792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844, 848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 960, 964, 968, 972, 976, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1092, 1096, 1100, 1104, 1108, 1112, 1116, 1120, 1124, 1128, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1180, 1184, 1188, 1192, 1196, 1200, 1204, 1208, 1212, 1216, 1220, 1224, 1228, 1232, 1236, 1240, 1244, 1248, 1252, 1256, 1260, 1264, 1268, 1272, 1276, 1280, 1284, 1288, 1292, 1296, 1300, 1304, 1308, 1312, 1316, 1320, 1324, 1328, 1332, 1336, 1340, 1344, 1348, 1352, 1356, 1360, 1364, 1368, 1372, 1376, 1380, 1384, 1388, 1392, 1396, 1400, 1404, 1408, 1412, 1416, 1420, 1424, 1428, 1432, 1436, 1440, 1444, 1448, 1452, 1456, 1460, 1464, 1468, 1472, 1476, 1480, 1484, 1488, 1492, 1496, 1500, 1504, 1508, 1512, 1516, 1520, 1524, 1528, 1532, 1536, 1540, 1544, 1548, 1552, 1556, 1560, 1564, 1568, 1572, 1576, 1580, 1584, 1588, 1592, 1596, 1600, 1604, 1608, 1612, 1616, 1620, 1624, 1628, 1632, 1636, 1640, 1644, 1648, 1652, 1656, 1660, 1664, 1668, 1672, 1676, 1680, 1684, 1688, 1692, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1724, 1728, 1732, 1736, 1740, 1744, 1748, 1752, 1756, 1760, 1764, 1768, 1772, 1776, 1780, 1784, 1788, 1792, 1796, 1800, 1804, 1808, 1812, 1816, 1820, 1824, 1828, 1832, 1836, 1840, 1844, 1848, 1852, 1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1900, 1904, 1908, 1912, 1916
  };

  yArray = {
    0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268, 272, 276, 280, 284, 288, 292, 296, 300, 304, 308, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788, 792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844, 848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 960, 964, 968, 972, 976, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076
  };

  if(m_pcEncCfg->getQP() == 27){
    
    embs0 = {{
      {{0.28226915,-0.3013882,0.2726443,0.09908676}},
      {{0.00022126742,-0.0042713634,0.013788432,0.00016589682}},
      {{0.0010037599,0.003740409,-0.0044264416,-0.00038688726}},
      {{-0.054586243,0.012640734,0.03842694,-0.06640733}},
      {{0.0008533101,-0.0068794484,-0.033910986,0.0005362762}},
      {{-0.060178135,-0.029313162,0.029440515,-0.10958095}},
      {{-0.07028606,0.012073138,-0.025192589,0.0067943917}},
      {{-0.13664949,-0.051337715,-0.027480468,0.034141697}}
    }};

    embs1 = {{
      {{-0.12863055,0.013502836,0.089277655,0.086814016}},
      {{-0.013142972,-0.002143063,-0.0007437665,0.0034178912}},
      {{0.004820742,0.0019660837,0.0037983481,-0.0031177648}},
      {{-0.04214557,-0.008129467,0.06945414,-0.0068204687}},
      {{0.03298121,0.002917829,0.0035158733,0.008332825}},
      {{-0.030023329,0.029603135,0.0642066,0.031445794}},
      {{0.058541935,-0.05254912,0.011047653,-0.009454259}},
      {{0.077901736,-0.13876036,0.009646339,0.020725114}}
    }};

    in_h1 = {{
      {{0.23720442,0.023522899,0.19724225,0.051848125,-0.18966103,0.15133342,-0.052141942,-0.0031572,-0.6588876,1.0215673,1.3051752,1.7918707,0.32819858,-3.1257224,-3.1658823,-0.08496778,2.5400388}},
      {{-0.007931642,0.010122783,-0.024115693,-0.014960281,0.03366466,0.001440467,0.026818462,-0.00856439,-0.1866711,1.3264632,-0.12548769,0.4153219,2.0133822,1.19668,-0.47690383,-2.8817375,-0.9536577}},
      {{0.005114516,0.0020660232,0.0015167459,0.0009045063,-0.0008187593,0.0016962212,0.0247495,0.00887137,-0.29282647,-0.11398509,0.61017996,0.33417192,-0.22047538,-0.08433203,1.7437308,0.43703407,-4.6453595}},
      {{0.000976779,0.009699465,-0.01453258,-0.010099582,0.0011433125,0.0051629315,0.018189281,-0.0034229218,-0.06886236,-6.318976,0.0506164,0.02456714,0.17993477,0.15742542,0.052364748,1.1011355,-0.2186689}},
      {{-0.15713893,0.12945807,-0.32165727,-0.06740415,0.3177715,0.021007301,0.035323806,-0.08436634,0.078667834,-0.5628731,0.28230944,0.5440949,-5.104387,1.1601133,-0.26779205,0.28947034,0.3368927}},
      {{0.02283751,-0.0048329267,-0.0540126,-0.0044612396,0.057108775,0.011071362,-0.012427872,0.005807339,-1.525515,-0.6237906,-1.2113509,-1.373642,-1.4696139,-0.9310276,-1.0166276,-0.21229298,-0.93364686}},
      {{-0.00065385713,0.009042579,-0.010882692,-0.003497508,0.006901105,0.009460624,0.032490402,-0.0010665702,-0.24304722,2.996799,-3.3376827,0.64728147,0.13125409,0.6132344,-0.43520942,0.37715563,0.5460783}},
      {{-0.019211255,0.014355245,-0.033841778,-0.013899747,0.040439997,0.0015478411,-0.0536859,-0.012631714,-0.20433858,0.48371604,0.14980812,0.57096887,1.0017391,-5.8496304,-1.0060886,0.41756135,-0.04687334}},
      {{-0.018979061,0.044319116,-0.07814774,-0.03879637,0.061992057,0.03298995,-0.013540687,-0.042746887,-0.2189551,1.4367061,-0.14360435,-3.4231937,2.186697,2.1650195,-0.2815019,0.23053764,-0.22742109}},
      {{-0.0021987867,-0.0009217518,-0.0059321327,0.0002605133,0.0057554,-0.0006013251,0.0012010644,0.0021900667,-0.73226315,1.4024848,-1.3982384,-0.38998345,2.9156609,-2.8647552,-1.9674066,-0.15640767,-2.311961}},
      {{-0.097479425,-0.0729206,-0.028319009,0.064808324,0.0257395,-0.09329763,-0.008181652,0.027199956,0.2254022,4.5920744,0.08536095,-0.8246281,-5.016751,3.043821,-1.438934,-1.1200621,0.50906074}},
      {{0.054161124,0.016006066,0.019673843,0.04361059,-0.014723103,0.022606283,-0.030964548,-0.021791454,-0.010367717,0.021667017,0.03869549,0.075950384,-5.553717,-0.010444025,0.013842317,0.0038505746,0.15617193}},
      {{-0.017878857,-0.009419586,-0.046093773,-0.01713693,0.07737308,0.01962058,-0.052372318,0.0067812353,0.099432744,-4.2573175,-1.947747,0.60119015,1.0702113,2.2730954,-1.7112485,-0.6121426,1.8162727}},
      {{-0.006835059,0.002855935,-0.010563094,-0.0072653973,0.018301785,-0.010417304,0.033668116,-0.0030164677,0.4467621,-1.4017375,0.16677445,-0.7980609,-0.37390205,4.8242116,-1.8627912,0.47746807,0.116871}},
      {{-0.077215016,0.07412322,-0.25014627,-0.22120187,-0.24030252,0.20793553,2.2288046,0.046785988,-0.7060805,2.9130044,0.17231004,-2.650716,1.5848074,-2.044808,-0.13386124,1.5032389,-0.31748626}},
      {{-0.1684965,0.099814504,-0.41473526,-0.25790286,0.40316835,0.03752054,-0.12270377,-0.13698184,-0.83148205,-5.8564277,-0.3947472,-0.48261088,3.1366267,0.9115832,3.3389878,-2.4959784,-1.11853}},
      {{-0.060280554,0.013189199,-0.079775676,-0.054577902,0.06414893,-0.03318865,-0.00493247,-0.012966446,2.7213986,-2.5083435,-0.03542431,1.2204767,-1.5210546,-1.9913036,-0.7754878,-0.10051322,0.60771376}},
      {{-0.008031677,0.002869096,-0.033904158,-0.019357303,0.0067341086,-0.0009625143,0.02268429,0.005214557,0.16631211,7.044424,-0.12851413,-0.099203005,-0.0044667562,-0.4859634,-0.052661132,-1.6363213,0.7790441}},
      {{-0.05120461,-0.16061656,0.11080006,0.09643523,0.0011718428,-0.15930763,-0.19796097,0.044887427,-0.23763783,-0.65930825,0.1550804,-1.1932822,-2.0270808,-0.24827628,2.9763453,2.8044028,0.16955984}},
      {{0.079403,0.01018962,0.013437157,-0.013008354,-0.038195696,0.103391975,0.03006673,0.007290962,2.4120457,-3.9764104,-0.512206,-1.201351,0.6443354,-0.64046633,2.0899312,-0.7650253,-1.2624494}},
      {{-0.10406923,0.034969553,-0.16947913,-0.094626985,0.141232,-0.008205534,-0.06025018,-0.034852978,-0.88228077,1.0308443,1.3625108,0.83885205,-1.532129,5.6815953,0.4356452,-0.47125587,-0.39821175}},
      {{-0.23010793,0.15172772,-0.5074094,-0.27257714,0.42124182,0.024747657,0.32578063,-0.11107159,-0.062991984,0.9978483,0.49428144,1.2900962,-1.826593,-5.9474845,-0.018516047,-0.13628383,1.5369316}}
    }};

    h1_h2 = {{
      {{0.15348276,1.3735784,0.2958113,0.30471593,3.4766088,-2.1146579,-0.13038021,0.61812586,0.9108676,6.3531585,0.21284619,4.017668,-1.4956278,-0.36320186,-0.85302675,0.4455098,-0.90160197,0.5382541,-0.32008466,0.047515154,-2.1393785,-1.1461748}},
      {{-1.9160762,0.07851796,0.3757962,-3.039597,0.38659352,0.91674155,-1.8772686,-1.3313162,-0.8697706,7.4451246,0.08843291,-0.06212106,-2.261535,-1.0318803,-0.37236908,1.1733278,-0.46787775,0.10880147,0.32828102,-0.5607003,1.4256957,0.2807987}},
      {{-1.9140997,-0.66190284,0.37751824,-0.59247106,0.022500262,-0.48849764,-0.52850807,3.939295,-0.9828863,-5.0880184,-0.038231153,-0.39317378,-0.119216144,-3.308286,-0.23210312,0.2391008,-0.4623724,0.5679628,-0.5056683,-0.7864365,-4.6760893,1.3529196}},
      {{-0.98187584,-1.4484869,-0.61045134,0.4495367,-0.018966407,-2.7039757,-0.10622565,0.6493505,-3.2351162,-3.262894,0.4703386,-0.2522438,-0.22988339,-0.4841898,-0.16502781,0.4366268,1.816454,-1.0060649,-0.5420715,-1.3993471,-0.72963387,0.8676828}},
      {{-0.8328583,-0.6341197,-1.5649406,-3.6148663,0.1491246,-1.1853582,-0.18067014,-1.1058569,-1.3728071,4.459879,-0.6222325,-0.5098414,0.97448313,-1.1542722,-0.3609881,1.4221258,1.160012,0.50261116,-0.9146049,-1.5928344,-0.25897887,1.0718087}},
      {{-1.5089022,-3.0087602,-0.027760927,-1.4672759,0.8598542,-0.5206525,-0.51380885,-0.709474,-0.34855676,-6.588205,-0.54846686,4.39452,-2.288357,1.3154463,-0.013584421,2.8823895,-0.09662703,-0.4393376,-0.03077488,-0.75236243,-0.7003584,1.9757441}},
      {{0.0053735133,0.23286127,0.40989938,-0.27555192,0.028906135,-4.741305,-0.9202164,-0.38613585,-4.24109,1.3125217,-2.259813,-0.724559,0.050224572,-8.218085,0.33977214,0.8841695,0.5841322,-0.037088778,-0.75311524,-0.7500083,-0.49806517,1.5098013}},
      {{-0.8190302,-0.3586672,0.050430123,-0.017751785,2.257862,-2.4802158,-0.6227679,-3.8016908,-1.5217022,-7.4687123,-0.079104334,5.0943155,-0.1364908,0.26491812,0.0026755887,0.41367915,-0.49587652,0.17070714,-0.7593142,-0.15481247,-0.58824325,0.8749379}},
      {{-1.0686055,0.65527207,1.273352,-0.70999694,0.13107276,-3.1910927,-2.2471304,-0.43473047,-0.67078733,-0.72045135,-1.442483,1.1266897,-0.7676236,1.2911853,-1.0741515,1.423653,0.40511492,0.6231206,-2.654861,-1.4056357,-1.182006,0.46488473}},
      {{-0.5294082,-2.4656343,-0.05665373,0.6754891,0.11193102,0.004552314,-4.3641663,0.57380533,-1.5734142,11.380287,-0.23447116,-1.0399948,-1.8872411,-0.40570608,-0.204329,1.9040773,0.033842087,-5.990855,-0.45095757,-1.1698426,0.60984755,2.2381527}},
      {{-1.0618976,-0.9586274,-0.48294613,0.7737645,0.43894225,-5.227489,-2.765173,-2.110887,-1.4109453,-2.952256,-1.6786814,0.69202924,-1.3819486,-0.30436662,0.2456742,0.6584109,-4.888731,-2.8267512,-0.770879,-7.0582614,0.7635327,1.6051195}},
      {{-0.016813798,0.04776739,0.026206668,-0.0077506695,0.023676284,-15.43851,0.009825209,0.075037874,-0.088134125,-16.05031,-0.004468927,-2.0600924,-0.6834753,9.3532726e-05,0.031444613,0.29720983,-0.035216253,-0.00022366097,-0.050605945,0.014925606,-0.0011377158,0.03261329}},
      {{-0.6309181,0.13994926,-10.92424,-1.616081,0.79273796,-5.9379115,-0.3979599,-0.3055321,-0.45085207,-1.4342066,-0.47662434,0.89003056,-0.32262874,1.5602063,0.77613693,1.9418318,0.5716117,0.54751235,-1.0709902,-1.4023232,-1.2546668,0.28616294}},
      {{-2.0392845,-0.512225,-0.050087925,-3.6300614,0.26390603,-1.6582297,-2.7381034,-3.198586,0.5226149,4.675773,-1.7904564,-0.73459727,-0.6524061,0.80037147,0.39565971,0.2756216,-0.53739595,0.76194066,-0.12116847,-1.2068979,-0.1401476,0.042736605}},
      {{-2.8018014,-2.6901643,-1.7860128,0.3663592,0.17558661,-4.2376313,-0.3547743,-2.524614,0.038501777,1.5587312,-0.5876519,-0.7668131,0.49103248,0.784339,0.19278216,1.1069891,1.4708883,-2.5831542,-0.83132315,-1.0594783,-0.72397107,0.35646856}},
      {{-1.7508475,0.6484532,-0.8484321,-0.032006554,0.29882392,-2.2764478,-1.6434679,-3.0829406,-1.7100955,-9.69125,-0.56980354,-0.9682039,0.20969272,0.8366717,0.09030318,0.4907158,-0.34661233,0.70830375,0.2605292,-0.50311536,0.9030334,-0.2138843}},
      {{-0.7566623,-3.007393,0.038855217,-2.5401962,0.58510226,-4.3659987,-0.36174336,-0.1586915,-0.23686863,-3.3158185,-0.0007668193,-0.5919425,-0.6661042,0.8344695,-1.4693837,1.7894675,0.9811267,-0.1689184,2.1571295,-1.1851039,-0.73766106,1.3492801}},
      {{-0.6738992,-1.6508086,-0.05526358,-10.549391,-0.031568583,-1.7800802,-0.6724291,0.7068311,-0.3369421,-3.6703954,-0.46930557,-0.93301713,-2.1326838,0.1656676,0.07065711,1.1423923,0.57962674,1.2805179,-0.49532613,-1.002052,0.12612227,1.4546365}},
      {{-1.04417,-0.18112746,-0.21428566,0.502736,-0.6914161,0.5312868,-0.15747853,-0.7861368,0.42419106,-5.520175,-0.47582427,-10.964157,-1.1396344,0.043860037,-0.2114929,1.9133542,0.18066813,0.49991277,-0.32745588,-0.36400038,0.20536444,0.23291074}},
      {{-1.3120236,0.7446476,-0.30917427,0.68494934,3.090556,-4.6032186,-0.95886564,-5.0423026,-3.7047102,-9.442905,-0.21433567,-1.7023779,0.07510149,-0.6272415,0.13079354,0.6226274,1.6906297,0.13303094,-0.7556714,-1.5916926,0.569758,-0.17380466}}
    }};

    h2_out = {{
      {{-1.9361204,0.07583711,-0.21869108,-3.8241727,-4.9559517,-2.2741084,-0.82874376,-0.2329723,0.1927154,-0.3374154,2.7678182,2.0473132,-3.1661057,0.1949921,-1.6129552,-1.255995,-2.179695,-3.0022879,-1.8608903,-5.347982}},
      {{-1.8922473,0.20808539,-1.5263704,-3.5602465,-4.463153,-3.5716472,-0.09275374,-2.036108,0.8174654,0.7821348,2.203972,1.5115542,-1.8077791,0.21131107,-1.1438947,1.0936133,-7.077546,-5.948678,-1.4807172,-1.6592021}},
      {{-1.6501964,-0.14678818,-1.4367,-1.1149006,-2.6979523,-4.632849,-0.47948042,-0.29458216,1.1604114,1.144057,1.2744013,1.7806568,-1.6094095,-0.0803688,-0.55532837,1.0149598,-8.381768,-9.49749,-2.124937,0.29965502}},
      {{-0.9781873,-0.45773843,-0.43894932,-0.1663607,-0.42015466,-1.8655351,-0.36098838,1.2017761,0.076288946,-0.45692855,0.06670727,0.59111273,-1.2755156,-1.0030348,0.26070932,0.4229183,-6.803957,-9.87026,-1.4106337,0.6204758}},
      {{-1.3803672,-5.1380415,-0.92435354,0.5025955,0.31680137,-4.5695815,0.6476429,-0.85673344,0.5860839,-0.79390836,-1.1555187,0.17346315,-0.25747856,-2.0341015,1.0851172,-0.005819946,-6.913978,-8.0809355,-1.3097132,0.44881403}},
      {{-1.5483891,-7.411447,-0.1307243,1.148637,0.82361454,-2.8811173,0.96205026,-3.627808,0.18408336,-3.0653534,-2.2555008,-0.41707373,0.3474997,-0.87289315,0.8240628,-0.4040653,-4.3963614,-6.1433287,-1.2648818,-1.6621137}},
      {{-1.6432184,-5.875678,1.3805286,0.4141601,0.4388207,-2.2572591,-0.6356292,-0.98439944,-1.2385484,-2.1982188,-2.6380165,0.9563483,1.164754,-1.9641789,0.18879837,-2.7623718,-1.9354279,-3.197279,-1.7433145,-4.51933}},
      {{-0.95339453,0.16188557,0.39083531,-5.3609867,-3.7362745,-1.1182715,-1.3662351,-2.2059677,-0.4979081,0.15891404,2.8270824,1.867096,-3.192117,0.21283609,-1.3812823,-1.5226235,0.19023769,-1.613487,0.9928732,-8.450262}},
      {{-0.4070734,0.26200807,-1.4399517,-4.0803704,-3.9979436,-2.7594364,-0.45377722,-1.5537249,-1.3818128,0.7332687,2.0679119,-0.6407966,-1.8830127,0.20057262,-0.46068892,1.0317415,-1.3848646,-3.0415485,0.78536826,-3.5015604}},
      {{-0.7432341,-0.22213756,-1.6293046,-1.553122,-3.175132,-3.5574238,-0.85020095,-1.6651194,-0.54137677,1.4157493,1.3435966,-0.15301247,-1.4181024,-1.1103871,0.3976109,0.8995216,-3.017105,-4.090146,0.633006,0.15771942}},
      {{0.028139796,-0.71501523,-1.1282929,-0.16587824,-1.1223044,-3.509918,-0.27924734,1.101042,0.073819175,1.1078112,0.08926312,-0.7615397,-0.90453553,-2.232232,0.89093256,0.14641045,-3.8452842,-6.629619,0.7290251,0.7232835}},
      {{-0.4198606,-2.7410069,-0.5906204,1.0323501,0.01445428,-2.7270072,0.39829674,-2.0162878,-1.0760336,0.39278165,-0.7982286,-0.39166516,-0.8371645,-2.947053,0.8561672,-1.0496576,-2.4178069,-4.2878227,0.74306905,0.123567045}},
      {{-0.53332615,-3.7467186,0.87339544,1.322767,0.8612457,-1.5349262,0.68190825,-2.5031571,-0.9283692,-1.3143734,-1.8865714,0.0562429,-0.09019638,-1.9100914,0.2987997,-3.2929127,-0.93385786,-4.1330967,0.51712114,-2.6774004}},
      {{-0.76238805,-4.8973775,2.5532508,0.8183991,0.75091743,-0.7463707,-1.1723242,-2.6000674,-0.8523448,-1.5898651,-2.8641171,1.5798566,0.28133893,-1.2904342,0.14014934,-5.9249396,0.007605117,-2.056416,0.4683039,-6.6777563}},
      {{-0.35561353,0.07756844,0.71739215,-5.740809,-3.884615,0.80010766,-3.3995283,-4.9805584,-0.77667993,0.5050925,1.0575324,2.2576518,-2.155773,1.9432034,-1.01463,-1.7665644,0.21589853,-1.8405589,0.48197263,-9.479026}},
      {{-0.714339,0.15397942,-0.7916277,-4.260237,-3.063702,0.19057828,-2.1573012,-4.21581,-1.1309427,0.12472181,1.2882943,0.06713349,-1.5071946,1.6050993,0.067624405,1.0986037,0.36608842,-2.6409523,0.7925497,-4.356496}},
      {{-0.4140321,0.09806016,-1.4161752,-2.2263613,-2.1459289,-0.1888247,-1.0801607,-1.0203574,-0.46979475,0.5873378,0.65252423,-0.22082748,-1.1540369,-0.02178394,0.6502954,1.0257502,0.46314675,-1.8458762,0.0971302,0.16389674}},
      {{-0.08966538,-0.29580268,-0.69733113,-0.34147027,-0.42350614,-0.56743765,-0.5652474,1.1157712,-0.2356191,0.7994985,-0.009060653,-0.61282796,-1.0088115,-1.5232527,0.46686903,0.087262936,0.49641737,-2.3213084,-0.40611666,0.73463017}},
      {{-0.23769745,-1.5962809,-0.259054,0.44648615,0.650681,0.015657214,0.46570843,-1.1509839,-0.6417831,0.7471598,-0.5963827,-0.3599812,-0.7933172,-2.5326385,-0.004153891,-1.4670279,0.39650106,-1.5891942,-0.2477465,0.2939751}},
      {{-0.3339482,-2.8562222,1.5823094,1.1548796,0.93936735,0.21025386,1.0816581,-4.343214,-1.0083731,0.20776573,-1.5007815,0.5460831,-0.8842514,-1.7704966,-0.61385596,-3.7902603,0.18520316,-1.2744484,-0.11290029,-3.4487875}},
      {{-0.5696328,-3.2039058,3.295856,0.6135193,0.5909705,0.36564544,-0.6439054,-4.837849,-0.8569591,-0.1005557,-2.4643269,1.2569125,-0.35401535,-1.8359097,-0.88336414,-5.5469923,0.37355173,-0.2909737,-0.41804782,-7.1790657}},
      {{0.3806385,-0.5814539,0.809649,-4.785136,-1.9255116,0.8382449,-4.1397495,-2.6367497,-1.4452354,-0.105999,-0.38349968,1.4798667,-0.14809178,1.1916746,-0.05380719,-0.7491559,0.49759892,0.2129916,-0.9430602,-7.363152}},
      {{0.7811413,-0.18702805,-1.3656274,-3.8877082,-2.675116,0.695756,-2.3684986,-4.2765875,-1.8201505,-0.5291465,-0.41085175,-0.31722367,0.06938838,1.950539,0.6869208,0.98925513,0.5137208,-0.35389632,-0.22144568,-4.4502196}},
      {{0.9977964,0.10276243,-1.5486745,-1.3950815,-1.2891539,0.67716825,-1.7604228,-1.2851266,-1.030592,-0.37305006,-0.2149561,0.48435822,-0.15675853,1.2868514,0.39336944,0.8799076,0.66528136,-0.10180063,-0.9330794,0.14957094}},
      {{2.1340215,0.10693526,-0.9402748,-0.28462607,0.3234007,0.7266851,-0.61208904,1.2188,-1.3042747,-0.007541274,-0.34901318,-2.0270436,-0.8144289,0.0018622222,-0.424844,-0.040298156,0.5788004,0.15025802,-1.7586378,0.5850138}},
      {{0.8177631,-0.33387136,0.20502,-0.07313905,0.7670095,0.58299774,0.72943664,-1.2183553,-0.7305005,0.4904314,-0.4216503,0.37315816,-0.7577868,-1.2519953,-1.2165948,-1.6420461,0.6931867,0.19875194,-1.2191231,0.22491573}},
      {{0.52419245,-0.8766574,2.097178,0.16295698,0.67442393,0.69484484,1.5303273,-4.2930474,-0.2883754,0.406715,-0.77563477,0.67935604,-0.97651196,-1.5342623,-2.466289,-5.4077635,0.584929,0.23997697,-1.1767495,-3.7628384}},
      {{-0.23092145,-0.8031454,3.1513767,-0.9796745,-0.20185772,0.78531367,0.1067454,-1.9054585,-0.9549887,-0.0014866946,-0.94492495,0.8123033,-0.84054196,-0.8871568,-2.3279145,-4.876115,0.538146,0.24567989,-1.156611,-5.889552}},
      {{-0.35265648,-2.0994937,0.056469295,-3.344081,-0.80279,0.55648816,-4.9030056,-5.616618,-0.4585869,-1.7007468,-1.2581273,1.5240915,1.2381953,1.4227215,0.58653134,-1.7913363,0.24730933,0.5452971,-0.18852426,-7.281416}},
      {{-0.7864842,-1.5244298,-1.2951105,-2.336804,-1.1482898,-0.095958546,-3.072341,-4.5259857,0.12846611,-1.6920817,-1.155145,-0.8340439,1.1607578,2.0033612,0.46446002,0.7944923,0.23550904,0.47258833,-0.028683005,-3.192165}},
      {{-0.4778732,-0.13626193,-1.2062687,-0.6965102,-0.15814759,-0.7776251,-1.6494415,-1.1445396,-0.35821494,-1.9679639,-0.6952973,-0.7532007,0.5930015,1.4072437,-0.39691734,0.75403327,0.20660807,0.61669433,-0.24027725,0.23122546}},
      {{-0.22784889,0.22950922,-0.2529655,-1.2955661,1.0382105,-1.0008798,-0.19078383,1.1188693,-0.42115396,-1.3036696,-0.15094112,-0.8208371,-0.5271821,0.4920554,-1.4028282,0.03983057,0.021302609,0.68971545,-0.29201964,0.6815755}},
      {{-0.65037465,0.1548421,0.57645035,-1.1371797,0.86895627,-0.66631055,1.2125032,-0.96841574,0.23157394,-0.45785284,-0.06601467,-0.48530346,-0.99338937,0.0469951,-2.9170763,-1.4361391,0.12175695,0.6893148,-0.09161344,0.26187545}},
      {{-0.77771276,-0.23073563,1.9637852,-0.9873199,0.39373,-0.41680896,1.845956,-4.1209307,1.3251704,0.067906685,-0.32026386,0.7206299,-2.3220575,-0.7116963,-3.69668,-4.483258,0.33702034,0.6597127,-0.25020635,-3.5817986}},
      {{-0.9614923,-0.17550501,3.53512,-2.5742888,-0.29373223,0.29316756,1.0378301,-4.3791323,0.5727138,0.17870927,0.3690363,1.8496107,-2.9823987,-0.59112245,-4.525158,-5.851133,0.34459364,0.53866136,0.047755595,-7.6229053}},
      {{-1.2430536,-4.0890727,0.22514321,-1.0181198,-0.70611936,-0.64393544,-4.625364,-3.4249947,1.5529841,-2.3441274,-2.7113936,1.0936053,1.9746695,1.622164,0.1966263,-2.070846,-0.7012077,0.6471998,-0.4225021,-5.269164}},
      {{-1.112755,-3.3521125,-1.207867,-0.6080027,-0.2635705,-1.9938236,-3.0107656,-3.1026373,1.6282591,-2.8527486,-1.8583913,-0.85758895,1.9422414,1.9452487,-0.09336137,0.45327818,-1.356989,0.59735733,-0.5972391,-2.650647}},
      {{-1.1176507,-1.1214428,-1.176614,-1.2550093,0.752858,-3.4453914,-1.148339,-2.1821272,1.1549461,-3.143828,-1.2401462,0.009418828,1.2728548,1.3923342,-1.4174237,0.6599773,-3.1855078,0.7605677,-0.11607645,0.42131922}},
      {{-0.16663626,0.20835103,-0.89796984,-1.9178624,1.2711746,-3.412198,0.13684233,1.1000077,0.9506473,-2.7822573,-0.41651624,-0.15462987,-0.27305543,0.40934804,-2.2608294,0.21468046,-4.917577,0.62469923,0.43130198,0.6989058}},
      {{-0.81748444,0.32159066,0.070320584,-2.3486528,0.7301634,-3.773644,1.336627,-1.9582659,1.5771464,-1.6265662,-0.23521312,0.7898207,-1.789905,0.399945,-3.8821692,-0.8343138,-2.7854714,0.75726026,0.3544972,0.35360348}},
      {{-1.167703,0.27623582,1.3917956,-2.4267128,-0.5330915,-2.5163476,1.7612665,-1.5449642,2.1380239,-0.467719,0.23601553,0.3120675,-2.817511,0.24643457,-4.5426674,-3.0405316,-1.2925341,0.6445094,-0.004546424,-2.6339705}},
      {{-1.486615,0.20243648,2.6448503,-3.0223773,-1.2875032,-1.0061347,0.7506782,-2.0524144,2.1338282,-0.24022643,0.99044204,1.8967882,-4.1052585,0.45797318,-4.791186,-5.4564195,-0.27857116,0.5902024,0.3159026,-6.525028}},
      {{-2.0672753,-5.202173,-0.3901068,-0.60020167,-0.11698152,-2.240296,-3.318845,-1.3973423,1.2577276,-3.5854425,-2.3491452,0.87591857,2.0723765,1.5270153,-0.21286863,-1.7203791,-1.9526399,-0.35268983,-2.0661206,-4.0591245}},
      {{-1.9155627,-6.1236753,-2.2862632,0.046869777,0.18098189,-3.7805219,-1.8096279,-3.0799103,2.1716635,-3.865416,-1.8469915,-0.30601987,2.4412248,2.0968108,-0.37381554,0.40820456,-5.1216435,-0.5503051,-2.264332,-1.3813362}},
      {{-1.6444955,-3.0563533,-2.1748807,-1.5069617,1.1195599,-4.925861,-0.6158871,-0.8552594,1.8310404,-3.7679248,-1.5016278,0.26289326,1.6749625,0.89513826,-1.158028,0.5419902,-8.604765,-0.33366328,-2.5359657,0.6649476}},
      {{-0.6342847,-0.13588555,-1.0069835,-1.523727,0.8600457,-2.4676604,-0.18137498,1.183678,0.853588,-2.5610793,-0.62918,0.7465493,-0.92871016,0.14285375,-1.5668454,0.27806914,-10.11193,-0.9811178,-0.86729026,0.6409905}},
      {{-0.8490292,0.3856568,-0.79744536,-2.3380342,-0.76949257,-5.554136,1.2856319,-0.71475786,1.9048779,-1.8240552,-0.10551486,1.8498098,-3.1215155,0.6738776,-3.251503,-0.16824974,-9.969151,-0.8072854,-1.3781303,0.5476442}},
      {{-1.7100494,0.41046154,0.43299386,-2.4442775,-2.5802772,-3.3919637,1.7099838,-2.3715906,2.617292,-1.0621325,0.50827944,1.3747741,-3.7008836,-0.14911963,-4.5616546,-0.37589753,-3.8536646,-1.3216095,-1.7039734,-1.140391}},
      {{-1.9755075,0.22951302,1.6078569,-2.1728926,-2.901307,-2.1776643,0.44596013,-0.38213548,2.083692,-0.7281417,1.0424219,2.251483,-4.575052,0.57287717,-4.680173,-3.6168606,-2.1805997,-0.7621243,-1.9205668,-4.0993066}}
    }};

    b1 = {
      0.07319873, -0.20031491, -0.004790352, -0.020491587, -0.03352872, -0.65990305, -0.11987655, -0.073981516, -0.20762354, -0.4132745, -0.23313262, -0.19546632, -0.14736226, 0.031754814, -0.294366, -0.15925473, 0.33371288, 0.0026858475, 0.40137824, 0.049070824, 0.31495643, 0.03207288
    };

    b2 = {
      0.43676847, 0.043547515, -0.074307166, 0.00023891385, -0.009579195, -0.11595506, 0.04197894, -0.19012171, -0.0061142454, 0.10519897, -0.055357255, 0.5855401, -0.0011687742, -0.032717813, -0.00823498, 0.062378984, 0.055830237, -0.008531158, -0.23256278, 0.005484897
    };

    bout = {
      -2.9870582, -2.3119547, -1.9210625, -0.99593765, -1.4624437, -1.7795087, -2.5713668, -2.845775, -0.44485402, -0.42981678, 0.6918684, -0.2308339, -0.5022115, -2.4500127, -2.638215, -0.769771, 0.8073428, 1.3326411, 0.9398483, -0.61835414, -1.8889372, -1.7530228, 0.3690265, 1.0462825, 3.2416968, 1.032465, 0.10379861, -1.1714137, -2.2122037, -0.3781356, 0.8734101, 1.3227068, 0.7830178, -0.87594616, -2.3846204, -2.3127909, -0.5274007, -0.75176924, 0.28096822, -0.9339821, -0.8889557, -2.8682797, -2.5524082, -1.852707, -1.7154696, -1.1424373, -2.1528172, -2.2416747, -3.0902367
    };

    BN_gamma_in = {
      0.88892555, 0.1943633, 0.5888427, 0.8945928, 0.9471859, 0.24438542, 0.3986997, 0.8995282, 0.27419937
    };

    BN_gamma_1 = {
      3.8042057, 7.882902, 8.483495, 7.5864606, 4.184419, 29.596327, 10.725661, 3.9494252, 5.886112, 22.76438, 11.239269, 9.826693, 4.6393247, 4.886238, 3.9207451, -1.8525798, 2.488183, 5.8625474, 1.8649724, 4.713248, 2.7539713, 2.980408
    };

    BN_gamma_2 = {
      1.4233361, 1.9910127, 4.323991, 1.6547074, 2.750698, 1.6519068, 1.5228505, 2.6477308, 2.8095348, 1.4169037, 2.97183, 1.7880703, 2.2604039, 2.9004543, 2.4753313, 1.3474885, 0.7244029, 1.0996294, 2.2110915, 0.74094975
    };

    BN_beta_1 = {
      -0.037575085, -0.04926505, -0.011404137, -0.022446731, -0.10042657, -0.0018300808, -0.014159438, -0.06613139, -0.07619548, -0.004026887, -0.0054530334, -0.017184239, -0.060125776, -0.010784406, -0.0025621539, 0.21367863, -0.16451122, -0.013791994, -0.3675548, -0.011890049, -0.3845421, -0.11870573
    };

    BN_beta_2 = {
      -0.6025847, -0.12267424, -0.24315499, -0.14002095, -0.10109505, -0.059697248, -0.18138345, -0.04476527, -0.2481347, -0.18995917, -0.2030869, -0.89279914, -0.211857, -0.10795695, -0.17093669, -0.14614123, -0.07215314, -0.08007496, -0.07467785, -0.09638905
    };
    
    mean = {
      91828.1382794219,60064.72142260708,90913.46118018722,62702.406380507295,18218.69972661811,63914.468002958456,90067.63227849842,60305.95601229378,92705.90091554137
    };

    stdev = {
      633352.4849876252,526958.9776215982,628632.4605299984,529621.8678264711,437113.6842881952,530647.6781594356,628939.1984349521,527752.956509009,634525.8883418391
    };
  }

  else if(m_pcEncCfg->getQP() == 32){
    
    embs0 = {{
      {{0.010544926,0.32418105,-0.054017544,-0.01357609}},
      {{0.0059918663,-0.012747943,0.0016099362,0.00069630716}},
      {{-0.0055781356,0.004107,-0.0027217327,-0.0004950705}},
      {{0.062178552,-0.003372373,-0.014757037,-0.10967231}},
      {{-0.00015695664,0.026187446,0.01328009,0.00028739902}},
      {{0.06546475,0.0036986456,-0.014078438,-0.1503436}},
      {{0.03352909,0.07189542,-0.009277624,0.025731418}},
      {{0.20335418,0.13860096,-0.07373799,-0.05592698}}
    }};

    embs1 = {{
      {{0.1821566,0.36134854,-0.05732885,0.25514057}},
      {{0.0103732115,0.00081630284,-0.0029329828,-0.01029888}},
      {{-0.0066281552,-0.0013268343,0.0020408675,0.003035347}},
      {{-0.0170021,-0.02308644,-0.16405569,-0.010237381}},
      {{-0.0015038498,0.006553697,0.003398106,0.03145231}},
      {{-0.011865768,0.062314257,-0.17273872,-0.008790586}},
      {{0.022023909,-0.0043568457,-0.0024962209,0.09087925}},
      {{0.07579615,-0.06874565,0.004317907,0.17758305}}
    }};

    in_h1 = {{
      {{0.194529,-0.44395933,0.14118434,0.24812958,0.48702952,0.17502266,-0.48631063,-0.3295757,0.38055864,-2.2354057,4.010767,0.7511519,-0.24367835,0.43256322,0.38810238,-2.354644,0.41873977}},
      {{-0.016563559,-0.24607131,0.06881783,0.00057208375,0.034908775,0.068272755,0.08755866,-0.19677776,4.491796,-0.4955355,-2.9826753,0.8019549,-1.3032181,0.48123845,-0.6697076,-1.3595556,6.176601}},
      {{-0.022638138,-0.1155018,-0.009675225,0.012654417,0.02886183,-0.034925,0.061815582,-0.11608713,-2.0839689,0.070910074,2.9727561,-0.7956399,-0.17385547,-0.39590973,2.1329231,1.4348602,-3.4803278}},
      {{-0.31376177,-0.49946657,0.14701962,-0.068793304,-0.098617665,-0.05149782,-0.02653077,-0.59261626,-0.4006515,0.26217216,0.062016416,0.34179363,5.3669558,-0.4105365,0.10184255,-0.081056856,0.0035147108}},
      {{-0.012437419,0.048759677,0.014388821,0.02790312,-0.017204588,0.0024317065,0.0003382031,0.0455156,0.11683971,-0.030697241,0.09660166,0.06113649,-6.6447535,0.06497378,0.03045827,-0.04170798,0.056668896}},
      {{-0.0012283755,-0.0030967197,0.00014301826,-0.0015110744,-0.0008524618,0.002244161,-0.00050721323,-0.0032048232,4.3214116,0.6645987,-0.49987358,0.96765256,-7.115939,0.8738991,1.140016,2.246098,1.8874749}},
      {{0.007106285,0.011184829,0.020073364,0.009349842,-0.011104126,0.02402469,0.027062628,0.027495142,-1.1896405,-0.20872799,0.06379168,0.36295795,2.1883843,0.59136456,0.27608943,-5.195732,-3.6279004}},
      {{-0.04468772,0.27520338,0.05628103,0.05564807,-0.17010076,0.093607716,-0.10930459,0.2414471,0.35973227,0.2837755,-0.15063176,0.076482095,-8.013078,0.19027832,0.29506415,-0.52226955,0.025889637}},
      {{0.018042587,-0.014139239,0.012900233,0.014465761,0.026710546,-0.012735679,-0.011204394,-0.0018487899,1.0701678,0.45647147,-0.5454036,0.9325302,1.168298,-0.21199226,-2.535596,-3.493762,4.430775}},
      {{0.3585157,-0.3661543,0.24947502,0.14466515,0.80479616,0.3105534,0.77466464,-0.3598533,2.3150728,-0.7311112,0.05518434,1.1708729,1.4066141,1.3725685,0.26006705,-1.6731759,0.2372455}},
      {{-0.009545688,0.19528666,0.059799988,-0.03420409,-0.063926965,0.054725923,-0.09184841,0.16774543,-0.89267266,-2.3972461,2.9033012,0.82718396,-1.9130467,0.20558582,-0.67859524,4.9350715,-1.914427}},
      {{-0.028840145,0.11003756,-0.01552879,-0.0069679134,-0.049420673,0.013914154,0.03342866,0.08799405,0.48711583,0.41834182,-0.6681328,-2.5928166,3.7207463,-0.39106447,-1.0959642,1.7503008,1.06276}},
      {{0.51389277,1.3264012,0.36394104,0.09772931,0.042169675,0.017792644,-0.48589998,1.296556,-0.03182263,0.031720825,0.5090339,0.46993583,4.9174013,-0.14998129,0.49057522,0.83196294,0.93737864}},
      {{-0.0008652635,0.018248176,0.01987166,-0.0036836057,-0.010982116,0.020992937,-0.013648826,0.011231455,-0.31218645,0.28319004,-0.42101786,2.5066018,1.0154077,-3.1432989,0.034074694,0.12292501,-0.2922746}},
      {{-0.07633746,0.14078173,-0.032903038,-0.039771866,-0.16045834,0.013875716,-0.24802673,0.09933268,0.5559678,-0.6824585,1.1999745,1.0324074,-0.36277434,0.4428609,1.0716505,-6.1629896,-0.34582552}},
      {{0.4483878,-0.57462376,0.0070533943,0.34279528,0.5581162,0.15975961,-0.113467164,-0.4706961,-1.9892844,2.431248,-2.8217242,1.2934726,-4.0982857,1.1449466,-0.8987246,3.1517065,-1.3874229}},
      {{-0.01948792,0.032068737,0.011065782,-0.011716247,-0.020679053,0.005844518,0.014819385,0.00484479,3.046456,-1.6974682,-3.3021846,-0.37860924,1.5798581,0.5892553,0.11987446,0.45945936,0.9600822}},
      {{-0.0008308681,-0.0039468603,-0.005030169,0.00338726,-0.020001976,-0.016195325,-0.07108545,0.006318681,-3.7255487,-1.6297063,-0.48024285,0.45980957,-0.36874256,0.16631679,0.42549238,5.111385,0.43704173}},
      {{-0.01692854,0.044523735,-0.018993251,0.0036042393,-0.14251412,0.006172738,-0.290922,0.10356873,-0.32359302,0.6535371,-0.593696,3.64762,-0.8929642,-2.434466,-0.50500226,-0.051067777,2.0454407}},
      {{-0.07052842,-0.07563496,0.0016207099,-0.0051400242,-0.23770212,0.11176227,-0.49616808,0.015748251,2.2070198,0.30128518,-0.46214324,-2.0254002,0.7999839,1.2374176,-0.3727137,0.62198883,-0.5686395}},
      {{0.003377252,0.045773946,0.021453764,-0.009933644,-0.0053228,0.0028135085,-0.010473957,0.02901124,0.25211367,3.39779,0.04206702,-0.05833142,-2.3969862,0.12445765,0.04163618,-4.17573,-0.82956946}},
      {{0.10387459,-0.15798865,-0.021717386,0.10581671,0.15945947,0.038209002,-0.036127944,-0.052975826,6.271982,-0.92230976,2.42837,-1.7915677,0.6596289,-0.6009844,1.3781526,-0.45105085,-2.8585818}}
    }};

    h1_h2 = {{
      {{-0.3406377,0.064547695,0.38271374,0.29420194,0.3237212,0.8188653,0.20385207,-0.5561016,-0.11238258,-0.35920152,-0.6829031,0.21465677,-0.4490183,-0.14476708,-0.49679166,-0.33439943,-0.3475628,-0.15404305,0.31848514,-0.12446071,-0.62965417,-0.03689105}},
      {{-0.23817596,-1.068955,-1.1013027,0.5875591,0.30556536,20.886757,0.150949,-0.29076752,-0.17634706,-0.086900674,0.18222176,0.020965997,-0.13477229,0.9236276,-0.20860781,0.028320964,0.5153952,-0.09801192,0.19052893,0.17995238,-0.118057124,-0.07501097}},
      {{0.27412793,0.11594515,1.9675996,-2.477502,3.4468596,0.6035114,-0.8838087,1.0053769,-1.0260023,-8.579349,-0.6676723,-1.189099,-0.062260564,-0.80239004,-1.0731642,0.5142693,-0.11684836,0.0009279025,-0.31644836,-0.7101848,0.50283295,-0.30224895}},
      {{-0.05403604,-2.2386155,-3.1873186,-0.28513294,-0.76191556,-1.8054912,-1.8683556,1.5009259,-0.4684041,-0.09651406,-0.8739274,-0.09568878,-0.32205415,-0.24923876,-1.5714308,-1.4465907,0.5220749,-1.2204539,-0.7736565,0.4808414,-0.20793857,-1.8059978}},
      {{-0.45353022,-0.47170648,1.5054615,-1.4033982,-0.34696415,-1.8918811,-1.1933022,2.16807,0.7070739,-0.423933,0.38592955,0.31867325,0.5002208,0.14556487,-2.6940167,-1.9509788,-1.9766034,-3.2674541,-0.41780624,0.847946,-0.80003095,-1.8192141}},
      {{-1.1634669,-0.89995795,-0.6182944,-0.67456067,11.073114,-0.79717845,0.1923719,5.608754,0.15868744,0.45574084,1.1092744,-9.512792,-0.2454653,-0.78088,0.5642616,-1.0550385,-0.2624872,-0.24735308,-0.13428214,-0.91701937,0.36714515,-0.8692725}},
      {{-0.69710386,-0.35680225,0.22325107,-0.92459774,9.662852,0.010833558,-0.8265165,0.8706545,0.03938525,0.13419487,-0.50522935,0.5295034,-1.641097,0.028204951,-0.2006442,-0.056528874,-0.11310583,0.22015782,-0.26697487,-0.19217965,-0.06903034,-0.29578048}},
      {{-0.940156,-0.58892196,-0.051997386,-0.3020029,-6.3688846,-0.40837812,0.18144119,0.43431222,0.3817597,-0.24779657,2.1808019,-1.0579283,-0.24836554,-1.365546,0.21810234,-1.4201792,-0.8846914,-0.6629103,-2.7792623,-1.5116564,0.43925744,-0.6415145}},
      {{-0.21304205,0.11414138,0.668397,-0.69270456,-2.4175713,-0.9227871,-4.749908,0.7558259,2.5464406,-0.27032825,1.3861969,-0.7691757,0.26316682,0.12645943,-1.9529972,-1.4512755,0.303381,-1.0518479,-0.2959529,0.5716291,-1.6637416,-1.7220516}},
      {{0.24564941,1.5789884,-5.0129323,2.1522741,-2.6928403,13.266014,5.7670293,-0.7408017,-3.500189,-8.512102,-2.129048,2.0301728,-0.61542165,4.844662,-0.16030101,-1.2086668,0.5687295,3.4361718,2.2449877,-3.1970623,-2.025044,0.26705375}},
      {{-2.0412889,-0.2642946,-0.14379343,0.6069427,8.699491,1.0280488,0.60129565,2.78058,-0.90342736,0.046768386,5.130697,4.005143,-0.26937073,0.008926862,-2.2346363,0.2346254,1.279218,-4.492163,0.57536215,-0.00014420818,-1.2604362,1.6209898}},
      {{-0.4990193,-0.7330153,-0.973682,-10.176304,-0.1843778,-1.2405972,-3.3806415,6.1220775,1.0085399,-0.6042025,0.66590154,-0.13118957,-1.8725599,1.1020998,-1.0134807,-1.7836219,-1.4462442,0.4665921,-0.4680806,0.3429301,1.2378452,-1.7150816}},
      {{-0.6854613,-0.736237,1.8405443,-0.6314675,1.8359957,-0.28601158,-0.8154368,2.9532714,8.607073,0.071804225,1.572245,-2.6444588,-0.06386045,0.13902615,-0.12932423,-0.39826226,-5.8184533,-1.0577273,-0.11664912,-0.23418185,0.5239467,-1.8022218}},
      {{-1.0632387,-0.2929117,0.47862685,-0.22694497,-5.9335713,-0.8570152,0.7474237,-1.854158,-0.61951923,0.25126785,1.5328095,0.2565842,-0.16868024,-1.2326187,-0.043230146,-1.4015234,-1.9421641,-0.5129812,1.0320368,1.2308594,1.018072,-2.3208208}},
      {{-0.719778,-0.15887114,0.20977922,0.26907453,-2.660035,-0.020132208,-0.33670646,1.4819133,0.62177855,-0.12057312,2.8659377,-3.2279992,-0.1139249,-0.17831138,0.76061285,-1.1582367,1.8664986,-0.40827057,-0.17131355,-0.38366562,-12.302706,-1.2537317}},
      {{-0.5395805,-0.9203766,-0.82570255,0.05666592,-2.200953,0.0056948876,0.4741706,1.1612064,-1.4522799,-0.38407063,-1.2206804,-3.2631247,0.025347074,-0.09957076,3.1490185,-0.9397646,-0.8747465,-6.328976,0.12750351,0.3305285,0.77201617,-0.88776684}},
      {{-0.43483067,0.16975616,0.5344408,-1.098117,-6.908342,-0.26365778,-0.49314043,0.98101616,1.3615265,-0.03298024,-0.07961801,0.33866686,0.120668255,-8.442268,0.28180945,-0.7466373,0.045877807,-0.31202152,1.6790364,1.6131923,0.3392343,-1.238469}},
      {{-0.55939806,-1.7966897,-2.8294618,0.17855427,-0.77004445,-1.4812025,-0.07320645,1.3574754,-0.050382964,-0.38406312,1.092627,-3.3258994,0.2551672,-5.2378736,-0.3917529,-1.0796337,1.3099645,-0.9470073,1.2471191,0.5633561,-0.2020835,-0.46204352}},
      {{-0.6328888,0.008212672,0.34946072,-0.14209655,-12.569103,0.018750722,-0.6701961,-1.0611601,-0.14002758,0.11215602,0.84440494,0.36272153,-0.15145417,1.6262454,-0.8386817,-0.60081995,-0.46974564,-0.8159464,0.6053536,1.9213146,0.016196257,-0.5002923}},
      {{0.032288603,-0.3100435,0.17452358,-0.9341317,-3.8379674,-0.64225584,-3.9269786,0.91929,0.6843521,-0.16959016,-1.8756517,-0.42927006,0.27215546,0.4038726,0.05923058,-2.2621212,-4.107717,-3.4062839,-0.34028825,0.49370003,2.387721,-2.4250076}}
    }};

    h2_out = {{
      {{0.030977985,-5.961079,-2.4089422,-7.362662,-5.3336616,-2.4603453,-5.9636683,-0.8630446,-1.1003906,-2.6854773,-0.5726974,-0.7267918,1.1871284,-0.71003,0.55069953,-1.7261221,0.99969226,-2.7579956,0.83172226,-4.0926538}},
      {{0.03671133,-4.152407,-3.7084038,-6.5992365,-9.641322,-2.2267826,-3.6495388,-0.28963995,-1.2001494,-2.1851609,-0.84834373,-1.3482755,0.8438874,0.59080017,-1.2584075,-1.0364565,1.466495,-1.042927,-0.2249999,-6.71363}},
      {{0.014456272,-4.8021145,-4.777348,-4.8863373,-6.479745,-0.3283308,-4.3534226,-0.33222118,-1.3398534,-2.1084125,-0.6510879,-1.2024411,0.24909051,0.10351689,-2.4451675,-0.7449168,0.6835245,0.15523091,-0.72067004,-6.473035}},
      {{0.005148174,-5.6201296,-6.501752,-1.199838,-0.986673,0.42856097,-0.44612655,-0.18738541,-1.0752043,-2.2814305,0.13680227,-0.7089239,-0.3461367,-0.43948716,-1.606273,-0.34731528,-0.5875332,0.56927705,-0.1418471,-10.005318}},
      {{0.044942055,-4.5640607,-5.3887405,0.34318912,-6.1219263,-0.88746876,-5.8401694,0.18307832,-0.2611853,-2.3735712,-0.5502086,-3.184957,-2.8245885,-1.6536883,-2.8492904,-0.3485992,-0.733757,0.09315033,-0.4392478,-5.5133185}},
      {{0.013525045,-4.1708136,-4.3209615,1.3339664,-7.825249,-3.6253688,-5.28181,0.19009724,0.25095218,-2.4375343,-0.84837717,-3.4498768,-3.7275934,-2.6756866,-1.9774824,0.10843911,-1.6096199,-0.36356702,0.2447735,-4.563042}},
      {{0.05824517,-6.3452196,-4.5777807,0.93059343,-3.1114326,-3.1517236,-7.1412597,-1.442352,-0.015331556,-2.9504764,-0.4497012,-1.8546798,-3.9948583,-3.9365494,-0.31770846,-0.5761799,-1.5240821,-0.66635084,1.3237394,-2.8574946}},
      {{0.039616335,-4.746551,-2.0783713,-6.1053433,-2.3560126,-4.1135774,-5.286647,-1.8931811,0.7672191,-2.2562053,-0.46144724,-2.3752909,1.0981492,-0.27061105,0.86417985,-1.9692024,1.2851774,-4.5704546,0.34581882,-1.9953002}},
      {{0.009304139,2.339137,-2.7047694,-4.8698926,-3.245974,-2.7859561,0.47803712,-1.3790033,0.6152204,-1.4378783,-0.5484069,-3.1656597,0.9610872,0.59610146,-0.34178627,-1.2665193,1.3963675,-1.4716568,-0.16118227,-4.077961}},
      {{0.0040743006,1.1722383,-4.4039407,-3.1521177,-3.1916938,-0.57453436,-0.11138352,-0.5324691,0.67109156,-1.9177958,-0.67229545,-3.4390535,0.2832967,0.5383791,-1.6155794,-1.349255,0.5306087,0.119002275,-0.6920624,-3.6185546}},
      {{0.007412071,1.7037108,-4.3323407,-0.7818997,-2.702519,0.40767777,-0.22398558,0.11385079,0.70308626,-1.6981167,0.12681139,-2.432342,-0.31271112,-0.24102809,-1.8261842,-0.9736592,-0.5403027,0.6921047,-0.7253057,-5.617452}},
      {{0.0146199,1.2648422,-6.4265785,0.50631094,-2.7416146,-0.7766379,-0.7939048,0.5750858,1.2180092,-2.0478573,-0.84946024,-3.9401598,-1.6283598,-1.7741132,-1.5228248,-1.0012841,-1.116548,0.13782816,-0.37226793,-3.223728}},
      {{0.018580033,-1.6712823,-5.546985,1.2963892,-2.5070577,-4.728944,-3.1431289,0.1959831,1.4314613,-1.713872,-0.86662555,-3.0145662,-2.3162646,-3.9890435,-0.7448696,-0.22181316,-1.831846,-0.8755993,0.59047014,-3.1318326}},
      {{0.014901829,-4.769029,-5.779445,1.1836386,-1.4544227,-5.91915,-5.3364954,-1.7917308,1.3475451,-2.5197065,-0.6701217,-1.9895554,-2.9171743,-3.611352,0.3563498,-1.0748373,-1.7173958,-1.6696844,1.1573118,-1.1941609}},
      {{-0.014749426,-5.1271715,-1.8843105,-4.35919,-0.06748247,-7.6984844,-4.693524,-3.6877956,0.5201817,-2.1000314,-0.3395488,-1.2389107,0.6777107,-0.5762628,1.355713,-1.4144653,1.413369,-3.7564566,0.98312026,-1.5559702}},
      {{0.01981678,1.3359827,-2.4957864,-2.8998754,-0.18350418,-4.371501,0.5871901,-2.7157488,0.47168788,-1.6636763,-0.63226676,-2.048532,0.62855816,0.5874038,0.62896806,-1.1721488,1.4572192,-0.43418464,0.42419183,-1.9531534}},
      {{0.019723976,0.63827586,-2.042473,-1.0190487,-0.19182354,-0.27160645,-1.7930878,-0.5757241,0.4397082,-1.4241657,-0.7507604,-1.6797999,0.44722888,0.5013748,-0.11394368,-1.2177404,0.59391695,0.8107934,-0.47386816,-2.5702043}},
      {{0.011459272,0.42263064,-3.523768,-0.072218776,-0.03412086,0.40952927,-1.1136932,0.1919454,0.5546236,-1.6810329,-0.09808705,-0.6404886,0.19945364,-0.12965533,-0.7597391,-0.9024224,-0.5354362,0.74284655,-0.6749572,-2.6041644}},
      {{0.004060332,0.6289113,-4.13722,0.6417375,-0.066380985,-0.7546858,-2.9550185,0.81667906,0.75557256,-1.5689048,-0.9545955,-1.0101175,-0.34676787,-1.12524,-0.49721572,-0.55074567,-1.4019289,-0.23072778,-0.1251087,-1.832142}},
      {{-0.014578907,-2.0791252,-4.6863985,0.82938874,-0.067674525,-5.6958084,-2.7221055,0.6247608,0.9439532,-1.7800162,-1.2640505,-1.6716084,-0.989545,-3.7831776,-0.004534949,-0.46754065,-2.0877023,-1.9798789,1.1173925,-1.0434244}},
      {{0.031909216,-3.8972619,-5.826686,0.7277088,-0.00978169,-5.17458,-5.3516455,-1.1966801,0.9937444,-2.2591898,-0.7746614,-0.6895923,-1.4025352,-3.3223608,0.75818497,-0.81268823,-1.9639915,-4.9435196,1.5907387,-0.5116956}},
      {{0.03892116,-6.3438177,-1.858048,-1.3014326,0.6750471,-2.9674757,-1.5346265,-4.235018,-0.21993446,-2.185353,0.7681648,0.38945782,-0.42370647,-0.24036525,1.0061886,-1.0016023,1.0539842,-2.9363008,0.7731131,-0.8374073}},
      {{0.00875706,2.2781634,-1.7385997,-0.9471631,0.59870774,-5.0671954,1.6630679,-4.6618576,-0.26698807,-1.7139692,0.6576374,-0.38599864,-0.05586757,0.5626495,0.5923356,-0.5939146,1.4809976,0.2127321,0.5805174,-0.7725485}},
      {{-0.010576419,-0.5821721,-1.8212445,-0.094257295,0.6398978,-0.408877,-1.9922223,-1.3392504,-0.39812177,-1.6163095,-0.10478516,0.051684726,0.13860506,0.45317808,0.28785953,-0.5903435,0.8405394,0.6643724,-0.7753317,-0.6220532}},
      {{0.018079814,2.2199621,-1.8519313,0.016734183,0.67481285,0.43946847,1.4762568,0.00865331,-0.48832512,-1.3627717,0.98209363,0.93685937,0.21873608,-0.108182706,0.26314402,-0.5052906,-0.5773784,0.48343712,-2.1503284,-0.6114615}},
      {{0.019029103,-0.8499456,-1.8767159,0.3997426,0.6001197,-0.7859651,-2.9638476,0.88330257,-0.17376862,-1.7378219,-0.4608598,0.12994263,0.24973246,-0.792675,-0.116370186,-0.14703609,-1.5987515,-1.1764624,-0.32032788,-0.21955714}},
      {{0.030910533,-2.486963,-1.785453,0.22445643,0.56820697,-5.655808,-2.4266524,0.8939246,-0.165511,-1.5218287,-0.61814815,-0.2574794,0.118027665,-3.7365549,-0.167306,-0.17014804,-2.2457416,-4.2941356,1.194171,0.04199298}},
      {{-0.026647361,-3.793521,-1.8412906,-0.5426539,0.6522713,-3.5583763,-2.0639887,-0.64416975,-0.06188394,-2.242578,0.27675933,0.28522083,-0.25508696,-2.2877872,0.13685177,-0.2965643,-1.6678487,-7.802881,1.2429476,-0.3284973}},
      {{-0.009260245,-5.492302,-4.1962743,0.03097679,0.11235079,-4.1557107,-3.1428928,-4.573323,-1.0100368,-2.3543918,0.39573783,-0.6751179,-1.6475649,-0.17907453,2.1154933,-1.9744664,1.2215297,-1.9360434,1.4318805,0.20438345}},
      {{0.018334104,2.0415273,-3.9673142,0.0012666684,-0.29429203,-6.201598,1.1443725,-3.6754298,-1.1929746,-1.7302241,0.022132743,-1.5489277,-1.14485,0.6317965,1.1983674,-0.4763977,1.0052652,0.8040568,0.71643144,0.4196414}},
      {{0.011086576,1.0601543,-3.108125,0.25837973,-0.06993632,-0.49035713,-2.9345357,-1.2548302,-1.5733005,-1.5212615,-0.78542256,-0.68368363,-0.45978126,0.58833516,0.40099367,0.02281867,0.5696725,0.5770725,-0.83370775,0.55624133}},
      {{0.00068628346,0.22921468,-3.1183548,0.019298024,-0.01141233,0.42819992,-1.0196757,0.008169596,-2.0112224,-1.8345467,-0.23444013,-0.46780837,0.13179626,0.14406855,0.52916706,0.23905347,-0.30787253,0.04826296,-1.1767576,0.632094}},
      {{0.025600256,0.8492736,-2.1147666,-0.13506168,-0.15866427,-0.6455553,-2.3956118,0.96035945,-1.7089576,-1.6664002,-1.1982183,-1.6692398,0.5249271,-0.5709431,0.25747445,0.22582337,-0.7981597,-1.9108881,-0.25121215,0.6659633}},
      {{0.027321838,-1.6666893,-2.5101125,-1.1063274,-0.2260073,-4.6156235,-2.8794684,1.1151376,-1.3676054,-1.6626629,-1.519329,-2.1688402,0.8676974,-2.7416463,0.41765672,-0.038312748,-1.6288346,-4.5661397,1.0988421,0.71499044}},
      {{0.055000633,-4.4860673,-2.0467942,-3.6425807,-0.012453865,-5.973493,-6.286934,-0.43254593,-0.5976613,-2.1902122,-0.8138221,-1.2610195,0.93441635,-3.4679823,0.7171889,-0.58989984,-1.5061425,-8.51213,1.6158824,0.85675824}},
      {{0.0007893652,-5.4055986,-5.603472,0.85626537,-2.0506256,-6.4074206,-3.5243351,-3.5147235,-1.1846752,-2.4782455,0.53211945,-2.0298326,-3.2112112,0.35608906,2.1722958,-1.0327257,-0.20624484,-0.41343582,1.1696594,0.67652464}},
      {{0.016607359,-1.755467,-5.3156815,0.7005378,-2.6872382,-4.810926,-1.7987406,-3.460384,-2.0955772,-1.685597,0.044125028,-2.640535,-2.2521968,0.73917097,0.5781175,0.7041323,0.06720363,0.486144,0.48685205,0.58506316}},
      {{0.033712503,-2.6023004,-4.438473,0.057536278,-3.2408328,-0.80254495,-2.5659761,-1.1144556,-2.2945511,-1.8239923,-0.848061,-3.5360224,-1.6149472,0.6449306,0.88505054,1.1319628,0.29642615,0.22402574,-0.7948272,0.66918707}},
      {{0.008399792,-2.7255292,-4.703087,-0.5966691,-4.0482397,0.4351529,-0.774484,-0.13089435,-3.3308675,-1.4956243,-0.51444805,-2.513712,-0.14637549,-0.0077392585,0.6989296,1.2608868,-0.30607346,-0.22663115,-1.0812701,0.7556875}},
      {{0.044285588,-2.6431065,-3.7999713,-1.7117745,-2.473005,-0.7554874,-3.7944067,0.8708459,-3.0872622,-1.790095,-1.2692964,-4.942803,0.50166273,-0.40166858,0.84384614,1.2565066,-0.7049919,-2.1719065,-0.59836835,0.8371818}},
      {{0.012227295,-1.7665095,-2.7124581,-3.3216417,-1.8398135,-3.0129998,-2.9603994,1.1281158,-3.056515,-1.5759099,-1.2702916,-4.165337,1.2439579,-1.7421002,0.49436575,0.6682051,-0.94720066,-4.9312387,0.55223024,0.74876076}},
      {{-0.021351164,-4.5311956,-2.379314,-5.7768745,-1.5459813,-3.2705603,-5.496931,-0.02055391,-1.1803468,-2.3246055,-0.90013635,-3.046526,1.2916174,-2.2337224,1.3847294,-0.2728287,-0.7490512,-8.35686,1.0859252,0.82466465}},
      {{-0.04282825,-6.8335037,-3.9270284,0.7313905,-4.0174065,-3.8561308,-6.500565,-2.3437567,-1.8499539,-2.8641512,0.11010754,-1.6736056,-4.4037347,-0.23368357,1.5544791,-0.12534977,-0.1739095,-0.3372083,0.8357152,-1.3504393}},
      {{0.03917394,-4.2650013,-2.4893777,0.6378617,-7.5966578,-4.089638,-4.3666983,-1.8333223,-2.6888087,-2.4281604,-0.26206875,-2.613684,-4.2138867,0.7278805,-0.06592078,1.528434,0.13225482,0.43667,0.03449306,-1.4961754}},
      {{0.033449598,-4.795223,-2.7816384,-0.35478896,-7.8705244,-0.5973432,-5.9003773,-0.7379891,-3.1519856,-2.1555412,-0.6858072,-2.2611036,-2.9060147,0.33737314,0.36116847,2.0125675,0.13083863,0.36516044,-0.748003,-1.4368566}},
      {{0.016103387,-5.507445,-5.7036414,-1.1826941,-3.6418512,0.4298769,-0.40811032,-0.02629964,-5.0277276,-2.1616738,-0.23689286,-1.4285028,-0.3721985,-0.16736862,0.19880791,0.944372,-0.6403679,0.38697982,-0.19327222,-1.3406373}},
      {{-0.009657043,-4.9108763,-5.7483196,-3.7105396,-4.569297,-0.6066927,-5.3459907,0.6417396,-3.5819278,-2.156445,-1.2897168,-3.6348784,0.39033225,-0.5006541,0.20985247,1.8821769,-0.3878272,-1.8150983,-0.522808,-1.7308176}},
      {{0.031486377,-4.155102,-4.111661,-5.3377295,-3.5304532,-2.394995,-5.1483727,1.1370293,-4.20868,-2.2891145,-1.4211107,-3.1982954,1.051538,-0.7836346,0.20307069,1.3779522,-0.66157293,-3.3376231,0.3409004,-1.6006303}},
      {{-0.037350398,-5.3119645,-2.5942628,-7.214516,-2.9479876,-2.4429793,-6.8616753,0.09590293,-2.6558187,-2.7670777,-0.8546078,-2.2715337,1.2376467,-1.634901,0.6158084,0.0970656,-0.27604738,-6.0151634,0.9372759,-1.2591068}}
    }};

    b1 = {
      -0.0049955565, 0.10717612, 0.15114632, 0.10126317, -0.10553105, 0.39605942, -0.109165646, -0.025799735, -0.07216266, 0.23460741, 0.057850275, -0.19342746, 0.25126573, -0.061093632, 0.2043045, 0.052504558, -0.063302234, -0.011591376, 0.11921273, 0.011104563, 0.073517516, 0.066035405
    };

    b2 = {
      -0.41103315, -0.20223027, -0.37175557, -0.013068864, -0.20652032, -0.22951521, -0.06365492, 0.021193005, -0.081393346, -0.5340913, 1.8972214, -0.20313433, 0.1977613, 0.008707272, 0.18421975, 0.1432961, 0.0124573205, -0.013009959, 0.09757736, -0.1365599
    };

    bout = {
      -2.438158, -1.881084, -1.1758672, -0.5054431, -1.431543, -2.0051668, -2.4874482, -2.2333572, -0.36673674, -0.41133633, 0.5375187, -0.58888465, -0.95757663, -2.3547454, -1.8331339, -0.55587435, 0.6023997, 0.9480412, 0.5023698, -1.0291535, -1.827768, -0.88421863, 0.32450244, 0.96511483, 2.910525, 0.68699986, -0.22868581, -0.90516293, -2.0007129, -0.6790832, 0.6343906, 0.9355449, 0.37817848, -1.0069504, -2.1195629, -2.5741065, -0.83942294, -0.70036554, 0.25611362, -0.8848292, -0.94383115, -2.4823787, -2.5888357, -1.883544, -1.2985414, -0.6629248, -1.2679373, -1.8575569, -2.462722
    };

    BN_gamma_in = {
      0.22436851, 0.6119331, 0.31924367, 0.7875305, 0.46081686, 0.8254344, 0.5858978, 0.24713367, 0.16195321
    };

    BN_gamma_1 = {
      4.2801304, 3.8742063, 3.333941, 2.7943194, 8.076668, -5.7275276, 6.578163, 2.0909302, -6.6178937, 4.843705, 3.0946987, 6.451957, 2.3460631, 5.127021, 3.2064857, 4.930928, 6.014237, 6.438127, -3.0380588, 3.2222378, 4.531242, 4.72637
    };

    BN_gamma_2 = {
      0.5444534, 9.590407, 3.3743725, 1.3998222, 0.49318665, 0.72520787, 3.3065383, 1.3539441, 1.2718676, 7.6243067, 0.5435205, 1.1727779, 1.5160342, 0.8426641, -1.1726903, 1.494846, 2.019272, 0.9765218, 1.5951302, 0.8723333
    };

    BN_beta_1 = {
      -0.0010760338, -0.004676914, -0.20424844, -0.0087894285, -0.01820674, 0.010627744, -0.070086196, -0.13610502, 0.016813433, -0.039659586, -0.08994487, -0.056893412, -0.047869284, -0.029157525, -0.47002998, -0.007725403, -0.039821785, -0.025608486, 0.10121787, -0.066335045, -0.01819922, -0.015381996
    };

    BN_beta_2 = {
      -0.0006379157, -0.044468317, -0.018976137, -0.16233516, -0.046708833, -0.04897804, -0.041026738, -0.13733093, -0.122636706, -0.41131982, -0.8614173, -0.041784212, -0.26152495, -0.16413134, 0.33587226, -0.3433272, -0.2791657, -0.06189704, -0.31524986, -0.054362312
    };
    
    mean = {
      91525.89776170258,60026.008483516256,90584.58660025275,62728.46208860909,18971.969148367567,63809.69485925258,89757.81417461201,60172.19357001993,92291.03546524212
    };

    stdev = {
      642251.52754976,536440.1965550308,637294.4283578823,539774.5885682282,448249.567058352,540416.0303173843,637593.8898577997,536915.8923481405,642858.7671954081
    };
  }
  
  else if(m_pcEncCfg->getQP() == 37){
    
    embs0 = {{
      {{0.1534634,-0.06853023,-0.33204302,0.13530788}},
      {{-0.017689241,4.126809e-05,-0.004316614,-0.0035948069}},
      {{0.003967548,0.0007605454,0.0050881645,0.00309997}},
      {{-0.008502378,-0.022122828,-0.03594148,-0.05440886}},
      {{0.02536732,-0.0072591417,-0.012759627,0.0014096769}},
      {{-0.014002474,0.034495838,-0.0923408,-0.070347816}},
      {{0.04854123,0.023466162,-0.0013493096,-0.03209936}},
      {{0.121522486,-0.07095332,0.059349183,-0.112310775}}
    }};

    embs1 = {{
      {{-0.10107693,-0.028543472,0.099395186,0.017731845}},
      {{-0.004656397,-0.000969016,-0.001383911,0.017308507}},
      {{0.0051293653,0.0010528784,0.0013771973,-0.0050150426}},
      {{0.02035755,-0.10776665,-0.0031524806,0.03568019}},
      {{-0.006186371,-0.0012843903,-0.007841812,-0.027588865}},
      {{0.025248341,-0.086771026,-0.033787936,0.047956668}},
      {{-0.022598276,-0.030891106,0.02238393,-0.045807242}},
      {{-0.007113242,-0.064540654,0.08554972,-0.09048981}}
    }};

    in_h1 = {{
      {{0.0567354,-0.006428689,0.00057670195,-0.0054904004,-0.017448388,0.05663937,0.13400128,-0.004453628,-0.044184238,-2.1288168,5.378041,-0.17421101,-1.4513229,3.0039015,0.61729455,0.7487755,2.1668901}},
      {{0.24189942,0.092658445,-0.107332766,0.06654899,-0.14234254,-0.05418316,-0.2394898,-0.2702803,1.9702573,-2.5699997,2.7477963,-0.56594926,4.4784617,-0.3068309,2.2914815,-1.1226311,-0.2701477}},
      {{0.011800056,-0.006735384,-0.012010577,0.007565686,0.008598352,-0.008152962,-0.018359363,0.005267193,-0.74045306,-1.3121495,-1.0537858,-1.3277295,-2.4542594,-0.9789674,-1.5097381,-1.4005247,-0.42542467}},
      {{0.21815197,0.025785832,-0.055458453,0.30169296,0.02927199,0.22829708,-0.1560852,-0.26983148,0.23074636,0.40700957,0.029634371,0.024661176,-9.773264,0.47755617,-0.26948377,0.087107785,0.52757716}},
      {{0.4465631,-0.032919187,0.012852641,-0.014584547,0.04489085,-0.13518327,-0.028850388,-0.44643798,-0.8508307,-0.5039718,-1.0992751,-1.5580823,-3.530534,-1.9017115,2.3551123,-1.7033147,-1.1921201}},
      {{0.029023217,-0.008133964,-0.0039184988,-0.016950615,0.038055204,-0.051184323,0.0005298646,-0.00094442925,-0.54892063,-3.4219797,-1.800858,0.10666191,0.20620039,0.79820704,0.36382145,1.9839625,0.7970145}},
      {{0.26978108,0.09535516,0.060293227,0.124749646,-0.02949255,0.32743374,0.18854554,-0.23752542,-2.598827,1.2804245,-0.0042424514,-0.8998796,2.0701551,-2.1065638,1.1352909,0.10477556,-2.4946396}},
      {{0.0109757045,-0.04042029,0.010409167,0.07555424,-0.032508418,0.31033152,0.19284675,0.030986587,3.3098428,0.6180262,0.21883936,1.6974671,-2.906309,-0.85656613,0.24224535,-0.80388236,-0.23412825}},
      {{0.13956383,0.011344369,-0.026796458,0.036147647,-0.045296717,-0.0019752553,-0.052772738,-0.20288847,2.3311114,0.04458839,-1.2944429,-0.545126,-3.0520694,-1.5692482,0.37199467,1.2078958,2.7178268}},
      {{0.08302444,0.03569621,-0.0339131,-0.00086120557,-0.020267207,0.014022382,-0.011152395,-0.06595791,-0.6163702,0.24306436,0.7364457,-2.4437566,3.8883262,3.057095,-0.8677536,0.20407432,-0.03144822}},
      {{-0.3082616,-0.13346699,0.026157783,0.054244522,0.1459068,0.03300675,-0.03695535,0.28025946,-2.084527,2.705042,2.4479773,-0.32308227,-0.5597026,-0.03650812,2.7462955,-0.87342536,0.8912582}},
      {{0.0034120244,-0.0022691758,0.0028138605,-0.010734934,0.0003919008,-0.013612266,0.009985412,0.0020669186,1.0071492,0.9558634,-1.9357864,0.48265183,0.0011389153,-3.3783572,-4.022296,-0.5662267,3.7181227}},
      {{0.17590299,0.010055761,-0.021961333,0.0643267,-0.05365336,0.120867155,0.05767039,-0.20321935,-1.566341,-2.7063634,-1.32521,0.6049211,5.686032,1.8541753,-1.1645777,-1.2727972,-0.08819816}},
      {{0.067257494,0.0023034897,-0.023751082,-0.010556827,-0.0319553,-0.04712473,-0.04919266,-0.09828602,-4.458706,-0.42217875,2.3871555,0.8577052,-2.1982152,-0.70154667,-0.17031264,1.2465935,-0.50126487}},
      {{-0.25311223,-0.088922925,-0.031111768,0.11697734,0.21529897,0.06438991,0.25437725,0.13189477,0.025719156,0.107777104,-0.23781079,-0.4099916,-0.32374606,0.25591192,0.34886467,-0.26392668,-0.08737362}},
      {{0.06644751,-0.008173447,-0.021071525,0.016030185,-0.028363835,0.02278638,0.031052874,-0.07036962,-0.384059,0.7344067,-5.0555243,0.21031508,1.1517404,-5.181081,-1.748868,0.5460304,-0.40766025}},
      {{0.2608632,0.08041059,-0.049913414,-0.035444994,-0.05758563,-0.060026072,0.010079798,-0.21770757,-1.0045887,0.01755877,2.7866247,1.0031483,-1.5010911,-8.503779,0.131638,0.026498064,1.1718764}},
      {{-0.066684894,-0.017819451,0.07868211,-0.04835206,0.023585519,0.016627226,0.07625635,0.06700037,0.03851453,-0.014001937,0.10993939,0.053658597,-8.082174,0.20245525,0.14586791,-0.043289732,0.108356036}},
      {{0.10134861,0.04883007,-0.019989014,-0.03375129,-0.008192757,-0.09485469,-0.033298343,-0.0792573,1.2391448,-0.2920291,1.8872045,-0.38839743,-0.01799175,3.2484143,-5.993614,0.29719839,1.0991074}},
      {{0.040150322,-0.01731417,-0.0040070037,-0.008271042,-0.0163426,0.008112485,0.0032953254,-0.040636573,-0.0036788217,0.12573303,0.1809458,-2.651669,-4.264982,-2.5535948,-0.14979416,0.14385991,-0.23674333}},
      {{0.6637098,0.15070471,-0.10307241,-0.10283866,-0.16143474,-0.21344605,0.050014563,-0.6099566,0.14247869,0.6718116,3.7166061,-0.08479388,-4.3994117,5.084953,1.1506631,-0.28107357,-0.69152755}},
      {{-0.0018943532,0.0076557947,-0.0062596393,-0.029253073,-0.018749502,-0.05332481,-0.014639802,-0.0045530605,1.2829462,-0.37770113,2.1781454,0.61330146,0.7458531,-9.575831,-0.014503236,0.00647683,-1.8130622}}
    }};

    h1_h2 = {{
      {{0.1345991,-0.2843643,-1.6208855,1.1366081,-0.5173231,0.28462034,-1.7430623,0.51337206,-0.13290416,-3.6027365,-1.4379207,0.22460926,0.28373775,-0.82457507,-0.0055604605,-3.393348,1.8502145,1.4541202,-1.2826167,0.1307732,1.8334744,-1.8994665}},
      {{0.7799963,-0.9222544,1.2092673,-0.2428411,-0.38602254,-0.6441626,-0.9809061,-0.8113633,-1.7915919,-1.0243354,-0.99402404,1.929683,-0.07560947,1.0496104,0.005461319,-2.3996687,1.2528632,-1.0886673,0.2838008,-1.8117974,-0.13856937,-0.32256627}},
      {{-0.10756025,-2.0242653,-2.5339031,-1.1692758,0.51159865,0.18488649,-1.7208847,0.09921063,0.16754234,-3.7432635,-0.07727801,0.15904681,-3.4436553,-0.35714874,0.008265697,-1.8198081,1.5286956,-2.3971906,-0.17188121,-12.0549345,0.9663913,-0.29151013}},
      {{0.20522843,-0.511877,-7.821321,-0.7586001,-0.5256673,0.206966,-1.325856,-0.61877424,-0.19545537,-0.03491445,0.3190564,0.25087133,0.02110864,-0.17120667,0.008341026,-2.026326,-1.2164174,-0.6927323,-0.09282482,-7.9680786,1.8475726,-2.2461112}},
      {{-0.3002051,-2.2809591,3.6074429,0.10832369,0.072783835,-0.17705938,-0.8587234,1.0618279,1.5601217,-0.8070113,-3.9852934,-1.2440536,-0.6566002,-2.0209966,-0.0029227505,-1.3838981,-2.6257048,0.010799304,1.4669698,0.36589402,0.6297904,-1.6147618}},
      {{0.64276886,-2.0661414,-0.15744722,1.0323553,-1.7126143,-2.5005572,-0.15003388,-0.9970267,1.8057615,-0.6023443,-1.1746923,-1.006375,-2.1613052,0.06585688,0.0001977719,-0.11351785,2.023182,-0.9773449,-0.36867824,4.8287287,0.3943829,0.251674}},
      {{-0.33322704,-2.263115,0.31616378,0.12832972,0.19682711,-0.69387794,0.33747512,-0.79124695,-0.812231,-0.83557117,0.6795977,-0.56545484,-0.6993212,0.46899617,0.008697336,-3.244947,-0.019641515,1.8844653,-4.2196875,-0.8171387,2.5502882,1.2560353}},
      {{-1.0449314,-0.9893782,-5.155994,0.18919276,0.39296845,0.2819968,-0.84243584,0.5152512,0.7472688,-0.9995878,-2.1308973,-0.3121155,-0.018038224,-1.0917192,0.0043348325,-0.02409246,1.9582142,1.9174757,-0.53216565,-3.6676662,-0.6394038,-1.3996017}},
      {{1.3789215,-1.6426723,-2.6859462,-0.6735227,-0.19993258,-1.1456238,-0.10955213,-1.1142004,0.05938038,-0.047535732,-1.7086396,-1.4385628,-0.28922328,0.25687662,0.00043854152,-1.3881598,1.8040093,-0.27861205,-0.7651022,-6.6719165,-0.3541271,0.058284853}},
      {{-0.2361227,-2.6561694,-5.6916447,7.413404,0.6530119,0.9825636,-1.0451201,-0.23907667,-0.9213229,-0.84234625,0.19538112,-0.89894867,-2.0460706,-0.51303077,-0.00022552424,-1.0681534,0.13092767,3.1281276,0.5240837,-0.46268085,-0.24763657,0.34839576}},
      {{-0.44926548,-0.6019773,-4.983229,1.611696,-0.31117454,0.18082274,-2.802552,-0.6991732,-0.23768061,1.1272796,-1.4047236,-0.03844805,0.1750529,-0.24563365,-0.005628807,-3.8455508,0.90121925,4.0505757,-0.40623015,-2.6189353,2.0412838,0.04732692}},
      {{-3.7196238,-0.56200665,-0.19310918,-0.08144232,-0.012492829,-0.24445654,1.2547596,-1.3914027,-4.0541515,-0.2905875,-0.044774517,-0.25775963,-0.54361343,1.3913188,-0.00033319215,7.1841936,0.06485394,-0.0051461263,0.05740558,0.115089595,0.12759152,-0.40264234}},
      {{-0.31582952,-0.76603127,-1.4739165,-0.6891932,-0.32528514,-4.8008504,-0.19162355,-0.031943243,-1.0677046,-0.3155506,0.12931077,0.3020215,-0.2603417,-2.2025962,-0.0047945245,-0.9937897,0.54108286,-0.8873023,0.16403247,-3.457272,1.1240369,-0.2601511}},
      {{0.025673863,0.01098321,-4.345004,-0.3821133,-0.97488695,0.044283394,-0.50924534,-0.07895175,0.002976737,-0.5611096,0.050858732,0.027394895,0.6412413,-0.093203865,-0.0009031692,-0.086767405,-0.033388328,-1.5015023,0.11884098,-11.895199,-0.031592403,0.20026691}},
      {{-0.2885577,-0.96562517,-2.1948762,-0.47204927,-0.3132196,-0.24623506,-1.3925308,-0.7130011,0.076106764,-2.7474616,-0.9731472,0.1432799,0.20274489,-1.085094,-5.7189212e-05,-0.92847574,4.008976,-1.787284,-3.0869818,0.3140819,0.20081556,-0.6892776}},
      {{0.097561024,-0.56756437,0.17987369,-0.35088092,-0.052081678,-0.35484505,-1.1194814,-1.4820952,0.11727283,-1.4235522,-0.36308154,-0.811188,0.31351343,-1.0976741,-0.004050418,-3.7763839,-0.9723056,0.2738309,-0.6985257,-2.5704799,1.8142775,-7.536729}},
      {{-0.42364874,1.0101587,0.2938647,-0.6097341,-0.05375458,0.33901063,-0.30655074,-4.1183596,-3.9821646,0.5537073,-0.44782263,0.41342455,5.532584,-0.97220147,-4.331942e-05,0.40655327,-0.40960655,-0.21833166,0.2772291,0.4764204,-0.9735009,-0.5029044}},
      {{-0.45997062,-2.993493,-0.42198884,-0.61040604,0.816276,0.0904,0.2362622,-2.032463,0.21564063,0.8174657,0.5237037,-0.08404491,-3.6583252,-1.2702883,0.0049246363,-1.622094,0.052065045,-6.8616214,0.9520761,-0.9424459,0.4050477,0.12875701}},
      {{-0.44664258,-1.7381164,-4.397646,0.60204303,0.250606,-1.5049684,-0.28927803,-0.054840524,-1.4980472,-1.3349515,-0.6326593,-10.76486,-0.7789056,0.22875677,-0.0019619833,-0.7322345,0.53613627,0.64351577,0.7946898,-5.436228,1.3062932,0.27507234}},
      {{-0.27550226,-2.6609716,-1.1765906,0.37210244,0.30347833,-2.031823,-0.041872516,-0.29290804,0.33315185,-0.25387433,0.027110836,0.37056407,-1.03434,-2.0805528,0.0020194699,0.81889117,2.5055025,0.55647266,1.4220364,-3.188525,0.9155351,-1.1691136}}
    }};

    h2_out = {{
      {{-3.79084,-0.27408394,-3.189597,-0.35742465,-5.87903,-2.7332094,0.6294749,-4.209083,0.92204446,-1.9547417,-3.9913604,-4.945286,-1.2245082,0.08347902,-1.4744695,0.35457796,-5.123049,-0.5114998,1.4544,-2.1924891}},
      {{-1.4857115,0.79415506,-2.333123,0.5704064,-3.1558127,-5.278161,0.06366119,-1.7799634,1.0771527,-1.3114797,-4.428288,-3.6988719,-1.0842831,0.16003919,-1.2859408,0.71158427,-3.3808324,-1.1723145,1.2886236,-3.438135}},
      {{0.8326815,0.9148179,-2.418736,0.051567215,-2.2452765,-7.487401,-0.7089777,-1.4143443,1.1297483,-2.3010857,-1.2724978,-2.3938293,-1.5625747,0.4513198,-0.9288244,0.46817747,-3.9992595,-1.1717336,0.60560924,-3.1268559}},
      {{0.86779916,-0.054485396,-1.8448498,-0.030460907,0.25742218,-5.84859,-0.976733,-0.3301048,0.40222842,-2.220868,0.88878024,-0.71296877,-0.9206697,-1.0555454,0.1570899,-0.46352556,-8.991869,-2.0289078,-0.8757961,-2.0663857}},
      {{1.0170318,0.23084803,-1.0475802,-0.8337315,0.62957865,-9.389729,-2.5653539,1.3580736,-0.5156135,-2.4814928,-0.75670445,-2.775996,-1.181898,0.8639646,0.61881834,-0.6748372,-4.973547,-0.41882768,-2.4921923,-1.9038095}},
      {{-0.46965784,0.4586696,-0.723227,-0.67951113,0.34876317,-6.7122273,-2.938054,2.4066534,-1.1332097,-2.146081,-3.3227286,-3.830296,-0.7711353,1.4338446,0.9129004,-1.2336209,-3.7626405,-0.47352296,-3.2675037,-0.9687111}},
      {{-2.1041074,0.27219662,-2.0400171,-0.92408097,0.21625148,-3.274894,-4.9285955,1.9903901,-0.8768423,-1.5964358,-2.7919612,-6.1255054,-0.53884625,1.3149983,0.3901789,-2.573391,-5.3499866,-0.35784352,-3.9592533,-0.024589015}},
      {{-5.340954,-1.9227296,-2.0424345,-0.102374665,-5.0090656,-1.6019543,0.6631732,-2.9803085,1.6088688,-2.6014695,-0.57614887,-4.060399,-1.105148,-0.47312692,-2.6645606,-0.25431275,-3.6206214,0.71073014,1.0580217,-2.190369}},
      {{-2.492809,-0.72933376,-1.0059054,0.92331636,-1.6946024,-2.1761522,0.19257757,-1.4729885,1.4257301,-2.7051797,-4.087224,1.1731548,-1.1808041,-0.6903093,-2.1596842,0.80151266,3.51821,-0.40918428,0.85750884,-3.071126}},
      {{0.023954995,-0.3953996,-0.30848,0.6175298,0.118374236,-3.0436473,-0.4533891,-0.9441353,1.4980235,-3.4845037,-1.8761336,-0.46294728,-1.2939194,-0.25680387,-1.2182832,0.13382171,1.079201,-0.7837834,0.27954295,-3.163765}},
      {{0.81225294,-0.22841388,-0.04946831,-0.2944954,0.7637736,-3.815752,-1.277072,0.38411596,1.3154222,-2.3890228,1.062627,1.0197961,-1.2868842,-0.9050922,-0.5571875,-0.61941546,1.1597748,-1.0031757,-0.40783015,-2.2265294}},
      {{0.5851084,-0.43330458,0.9075445,-1.0706291,0.61723435,-3.8385048,-2.8722167,1.5073278,0.95785475,-2.8754716,-1.2974743,-0.5855056,-0.92148197,0.312522,0.45106712,-1.0128703,1.5278807,-0.1419854,-1.4062581,-1.3613555}},
      {{-1.6434312,0.1329718,0.6142655,-1.4291192,0.24897231,-3.1772323,-3.2693295,2.55974,0.24170563,-2.5443978,-3.8998444,-1.4305415,-0.70906526,0.35549796,0.8514729,-2.3639448,-0.04156944,-0.20121354,-2.0251832,-0.5618681}},
      {{-4.833062,-0.10742058,-0.84617114,-1.95124,-0.22168042,-1.4302198,-4.6447716,2.7410102,0.22590882,-2.7738602,-1.7647394,-5.2934947,-0.447717,0.7322863,0.270669,-4.2054644,-2.8275225,0.99580044,-3.3394203,0.032883912}},
      {{-6.85972,-2.848225,-3.403983,-0.11904758,-2.7581232,0.021054829,0.46356663,-2.2447803,0.88934386,-1.6108018,-1.6999496,-3.229507,-0.87306535,0.258162,-3.0137491,0.21415284,-2.962449,1.5720204,0.3253599,-1.5258119}},
      {{-3.4047198,-2.2757628,-1.1981326,1.25064,-0.2499907,-0.14846107,0.0032133355,-1.8980559,0.7794415,-1.9918299,-5.033426,0.319168,-0.98127145,-0.6732654,-2.1361992,1.3593034,1.7230468,0.5092378,0.6051237,-2.1220357}},
      {{0.067504324,-1.1970823,-0.036173996,0.77015704,0.46924216,0.14785907,-0.03565924,-0.38789353,0.7431062,-1.6635497,-1.2816081,1.2757211,-0.9259752,0.37047675,-1.6969378,0.37848872,2.1334405,-0.01821801,0.5054064,-1.7327616}},
      {{0.7361076,-0.26226166,0.51084137,-0.16421647,0.59547865,0.24142249,-0.7227888,0.28046295,0.639242,-1.4692355,1.032591,0.49430498,-0.9850953,-0.7808436,-0.46663636,-0.5150455,-0.31636053,-0.7059711,-0.3629503,-1.1080654}},
      {{0.5268215,0.041642085,1.0490237,-1.5966932,0.25367326,0.23508488,-1.3342905,0.9719381,0.6639677,-1.5861989,-0.8878188,-0.09061186,-0.778375,0.26245612,0.29995027,-1.2736902,1.9538968,-0.47190893,-1.2617062,-0.36894676}},
      {{-2.4897768,0.18583417,0.9457945,-2.3800092,-0.86608154,0.36834255,-1.9356707,1.8666133,0.537266,-2.3311133,-5.4620867,-1.9194838,-0.5828756,0.43810433,1.0451081,-2.3443248,-0.8714369,-0.10318221,-1.7251219,-0.128733}},
      {{-6.23021,-0.15416025,-0.7899199,-3.2517564,-1.043924,0.6344513,-3.1535258,1.5662118,0.5518072,-1.366873,-1.4526768,-4.7608275,-0.39216506,0.91268903,0.9400008,-3.8330414,-1.7186658,1.2352114,-2.379429,0.4500256}},
      {{-7.7426944,-2.716945,-3.233396,-0.12697831,-0.043719288,0.76519054,-0.5040063,-0.25165692,0.28536966,-0.13474649,-0.6745187,-4.043364,-0.2533327,0.26536408,-2.712312,0.28360114,-2.6688135,0.40644842,-0.31916827,0.28211537}},
      {{-2.5409987,-2.2120063,-2.5722005,1.0506396,0.49771345,0.75273424,-0.28269148,-0.091497615,-0.33032307,-0.42818698,-4.8778186,0.90391666,-0.45897824,-0.012033714,-2.8360274,1.7471061,3.0615911,0.5731647,-0.19064431,-0.116894715}},
      {{0.34249473,-1.7816874,-0.4427825,0.5578567,0.4300094,0.7647499,-0.00038401727,0.27418062,-0.26204672,-0.1324233,-2.1711454,-0.26526368,-0.47883654,0.30326444,-2.1356921,1.1907989,1.095132,-0.21392734,0.116601884,0.16979982}},
      {{0.7183751,-0.5314305,-0.1010496,-0.07712576,0.022848655,0.7564737,-0.13821855,0.3875864,-0.19251882,0.7052435,0.88395303,2.1501448,-0.38283458,-2.0970306,-0.4288725,-0.25450867,1.3101803,-1.4863348,-0.28936568,0.52965605}},
      {{0.43572566,-0.23408447,0.43645206,-1.4789686,-0.67211115,0.7638364,-0.041086696,0.67964697,0.29210228,0.06800023,-1.1739695,-1.3220015,-0.2207144,0.2555926,0.28853437,-1.5680196,1.179032,-0.6928284,-0.53086686,0.55414224}},
      {{-3.0675368,-0.1471093,0.21602172,-3.390807,-1.5202669,0.75874513,-0.30262893,0.73325557,0.37713465,-0.1793724,-4.936724,-0.5939764,-0.1901627,0.6131286,1.3106741,-2.7202642,-0.5058211,-0.16919535,-0.7305068,0.5220331}},
      {{-4.948725,-1.7164645,-1.1683022,-2.123304,-1.2617267,0.76396316,-0.5656339,0.31721348,0.24542214,-0.0002981799,-1.3809621,-6.8076005,-0.27332315,0.36553854,0.6624176,-4.5784407,1.2210603,-0.050142433,-0.63078284,0.5358278}},
      {{-5.939312,-2.14646,-1.9326196,-0.24968949,0.28030756,0.30781987,-1.2546062,-0.39163673,-1.1296519,-0.8847648,-1.9541328,-3.3645236,0.13098383,0.942035,-3.3371725,-0.44738105,-3.7603185,1.5680219,-1.8215283,0.59417397}},
      {{-2.7468994,-1.2740148,-0.57421696,0.9523588,0.38345534,-0.2196248,-1.1225303,-0.4581311,-1.5736685,-1.4180177,-4.936636,0.53951496,0.28189433,0.16752827,-2.317615,1.2079539,2.8325453,0.86271524,-1.1966031,0.5716258}},
      {{0.4047738,-0.55257875,0.16005194,0.5709008,0.04739921,0.015212694,-0.13596597,0.4373214,-1.5903995,-1.426334,-1.3990923,0.36408398,0.5405664,0.2825057,-1.826258,0.92072815,2.411305,-0.06430958,-0.67107856,0.6767604}},
      {{0.68599343,-0.0074999155,0.32202196,0.008762874,-0.994279,0.122946076,0.20696902,0.32964364,-1.4925401,-1.5210704,0.8069836,0.32274467,0.5983619,-0.90428996,-0.50698817,0.012681037,-0.06974187,-0.63236815,-0.26486915,0.67285943}},
      {{0.3496629,0.077899404,1.1443666,-1.0660663,-2.0042841,-0.07636695,0.6371082,-0.42541692,-0.8412643,-1.4233783,-0.92958,-0.04746502,0.36534023,0.09013753,0.23387828,-1.3318917,1.5236535,-0.32199728,-0.03126645,0.34796524}},
      {{-3.2325015,-0.1415614,0.87864566,-3.2186627,-3.256905,-0.0936,0.86800253,-0.5422472,-0.31713834,-1.8708761,-3.5601144,-1.6837566,0.3231444,0.653349,1.0887002,-2.083986,-0.3351049,0.15667371,-0.10313666,0.032152}},
      {{-5.8546624,-0.8721594,-0.552581,-3.7637475,-4.551777,0.2512885,0.7181649,-1.5592476,0.26147407,-1.544776,-1.2112072,-5.2453423,0.1158852,1.148863,0.03672781,-3.5904307,-0.9742504,1.0279688,-0.10432036,-0.09829077}},
      {{-3.7720168,-0.45620093,-1.0664699,-0.4489988,0.12176769,-1.8578204,-2.3806977,0.62428933,-1.5239084,-2.227518,-1.696218,-4.006168,0.6652209,1.0264599,-3.1633685,-0.99366724,-3.254878,1.6027848,-3.1247814,0.9615083}},
      {{-1.8209605,0.048677947,-0.6186193,0.6226513,0.115347646,-2.975862,-1.8807333,0.7979179,-2.192413,-2.1168094,-4.1831274,-0.7138426,0.9560957,0.33423576,-2.436034,0.5870032,-0.099758334,0.63128155,-1.6817524,0.77705634}},
      {{0.27036345,0.26818225,0.22099306,0.5136106,-0.7687572,-3.3696716,-0.5273032,0.63315076,-2.4304016,-3.4815319,-1.2917346,-1.6185414,1.4923244,0.28751084,-1.6083295,0.5470238,-1.1501478,-0.17435503,-1.5848731,0.2639256}},
      {{0.66716,0.29480535,0.05826946,-0.160165,-2.072353,-4.0751185,0.2388867,0.42529035,-2.2437325,-2.3430502,0.8923889,0.44880307,1.5800203,-0.6531633,-0.7794857,0.05126753,-2.3170874,-0.71222955,-0.34226018,0.14809784}},
      {{0.24483474,-0.22067861,0.96610725,-0.966021,-2.6628473,-2.9770846,0.88295585,-1.138603,-1.5498984,-4.1044164,-1.1595508,-1.4579875,1.6480289,0.048203703,0.054874048,-1.0980614,-1.2000519,-0.3782853,0.41821358,-0.7033018}},
      {{-2.6233256,-0.09066766,0.74681985,-2.0962722,-3.9988008,-2.3080988,1.5451663,-1.3485798,-0.92592204,-3.109405,-2.392627,-1.2640305,1.0620683,0.16937791,0.57242316,-1.9924635,0.22300504,-0.24917015,0.6842023,-1.0711887}},
      {{-5.1153517,-0.9804985,-0.32927042,-2.9344585,-6.8207345,-1.7061942,1.6021892,-2.588118,0.012130635,-3.6642056,-1.771127,-5.242413,0.45507744,0.3714898,-0.5651356,-2.9320562,-1.8013448,0.73433846,0.72493815,-0.6851276}},
      {{-2.498124,0.470118,-2.3129277,-0.55768543,0.1791298,-2.9718773,-3.9720623,1.2039342,-1.7642012,-2.1863058,-2.1458693,-5.641713,1.08704,1.0729008,-2.3222463,-0.43654525,-6.5174813,0.36032814,-4.1821156,0.28341976}},
      {{-1.2306958,1.0037384,-1.5899255,0.544885,0.08145177,-5.8815775,-2.6034505,1.4288691,-2.5866377,-1.6310697,-3.6522205,-4.022237,1.5512781,0.81542236,-1.4796076,0.57652867,-3.65756,-0.44456312,-3.2618053,-0.31507614}},
      {{0.6889341,1.2641408,-1.7939171,0.25092658,-0.78871953,-5.292466,-1.2642014,0.6998021,-2.7430847,-2.6552618,-0.84094054,-3.032455,2.0751066,0.582152,-1.297808,0.32550293,-4.4531293,-1.2196308,-2.484948,-0.8720957}},
      {{0.74331874,0.33500355,-1.7273695,-0.12538242,-1.5051763,-4.883207,-0.33311456,-0.40521878,-1.9011911,-1.9896075,0.9466992,-1.7351352,1.9743212,-1.1219636,-0.2617265,-0.16917485,-7.8154125,-1.4930067,-0.64020073,-1.2291567}},
      {{0.56697303,0.15584034,-0.6962735,-0.5600917,-2.6090696,-6.1918545,0.37112916,-1.7213689,-1.6783863,-3.5163698,-0.8552942,-3.4905338,2.3918548,0.22040017,0.040622283,-1.0964103,-3.2356782,-0.6277086,1.2656531,-2.8526478}},
      {{-1.2625091,0.3289483,0.13895334,-1.26025,-4.4890513,-5.497037,0.88397354,-1.8095859,-0.7997254,-3.3473234,-2.8853846,-4.189787,1.6809872,0.638551,0.09879297,-1.4114746,-2.4721892,-0.730439,1.7689198,-3.0482845}},
      {{-3.1132739,-0.26718724,-1.4513032,-1.8292713,-6.35572,-3.106349,1.2624732,-4.1408844,-0.22132768,-2.7061942,-2.8522718,-6.386335,0.68125284,0.38427934,-0.38616484,-1.8726023,-4.3178973,-0.35947245,1.382914,-1.8339115}}
    }};

    b1 = {
      0.12841143, 0.027267512, -0.5752973, -0.03060086, -0.5042013, -0.0041859397, -0.055937875, 0.30224955, 0.16656455, -0.14257039, 0.19191845, 0.00010271561, -0.22641727, 0.028802058, -0.2804178, -0.07584756, 0.105454504, -0.11678563, -0.030078467, -0.37664086, 0.16718218, -0.018994538
    };

    b2 = {
      -0.08229959, -0.11617129, -0.4219205, 0.15530168, -0.022043139, 0.028713733, 0.22553833, 0.049688406, 0.07634744, -0.30670586, -0.46652034, -0.12063626, 0.170148, 0.36352733, 0.011189314, -0.037468076, -0.3072728, -0.10997649, 0.017808285, 0.69065845
    };

    bout = {
      -2.0932746, -1.7281371, -1.5663319, -0.30336627, -1.70251, -2.0915399, -2.3424277, -1.9825616, -0.47312674, -0.80270684, 0.47170085, -0.77058065, -0.8707162, -2.2736857, -1.7096754, -0.61306864, 0.3587981, 1.0104866, 0.40393415, -0.7968485, -1.6388718, -0.73997957, 0.46075186, 0.95466304, 3.2166753, 0.9206431, 0.2779176, -0.54284173, -1.6435367, -0.5193649, 0.40204918, 1.0605416, 0.4500131, -0.810381, -1.7662615, -2.1081953, -0.77709264, -0.8951463, 0.35970178, -0.7927564, -0.78061265, -2.2689064, -2.2678483, -1.8459193, -1.3911519, -0.16162421, -1.3543484, -1.8169917, -2.1468234
    };

    BN_gamma_in = {
      0.25599247, 0.593217, 0.15077364, 0.9047042, 0.3593856, 0.1032027, 0.19478422, 0.9665782, 0.1915536
    };

    BN_gamma_1 = {
      4.0671334, 2.5293684, 29.787909, 3.3518093, 20.626656, 4.40677, 3.3583822, 2.0698519, 3.926327, 5.108628, 2.5921028, 7.405247, 4.3297896, 4.446688, 0.0009942056, 4.448321, 3.228769, 8.130528, 4.621719, 28.456524, 3.1407359, 6.0162606
    };

    BN_gamma_2 = {
      0.7697466, 1.2833815, 0.499721, 1.0000252, 1.2129672, 0.60955906, 0.88899124, 1.70377, 1.6983159, 0.9831476, 1.1832514, 8.217565, 1.5381502, 2.1790109, 1.5167311, 1.4096103, 8.318063, 0.94352734, 2.0258076, 0.80043
    };

    BN_beta_1 = {
      -0.0112576755, -0.33400193, 0.0009396916, -0.19612122, -0.006370715, -0.05254791, -0.22348052, -0.1998903, -0.08642023, -0.052281428, -0.22451155, -0.012548706, -0.13982059, -0.013830932, -0.00010087536, -0.08554087, -0.21925825, -0.019511083, -0.041701224, -0.005240558, -0.24380943, -0.026923055
    };

    BN_beta_2 = {
      -0.060880806, -0.08502615, -0.1274184, -0.25011104, -0.12003592, -0.06448313, -0.22580524, -0.1773738, -0.3115398, -0.073510975, -0.017014254, -0.08144358, -0.37289006, -0.6793206, -0.111850835, -0.078858204, -0.032879822, -0.13099694, -0.17198478, -0.5081416
    };
    
    mean = {
      89181.28384408768,58457.84402066208,88045.67881255377,61350.47309520807,19275.932043466157,62041.67506548536,87577.27392690617,58610.16610608882,89781.83517569612
    };

    stdev = {
      612332.4946726247,500942.7793910199,605819.3348647763,505140.49803198315,405659.3641763986,504379.0747126609,607802.0932639176,501437.74141163327,611806.2317041238
    };
  }

  else { // QP=22 and Default
    
    embs0 = {{
      {{0.09773517,0.0998179,-0.0019873679,0.13283566}},
      {{0.0064651594,0.0059892754,-0.0005844211,-0.00014993531}},
      {{-0.0011840045,-0.004886749,0.0019192335,-7.6737946e-05}},
      {{-0.008699928,0.0010051787,9.486276e-05,0.04313447}},
      {{-0.022915503,-0.0022418653,-0.010437545,-0.0012215954}},
      {{-0.020657735,0.0061169025,0.0143978475,0.07665967}},
      {{-0.061941985,0.027022304,0.0041850703,-0.0058935904}},
      {{-0.084324606,0.012537054,0.0825674,-0.041221805}}
    }};

    embs1 = {{
      {{-0.2217536,0.3154181,-0.3443442,-0.22831379}},
      {{-0.0029543564,-0.0052176807,0.0061390237,0.0017566341}},
      {{0.0037021188,0.0012163892,-0.0017051729,-0.0036297017}},
      {{0.0004270979,0.03220322,0.031226918,0.016367335}},
      {{-0.0044732504,0.0041525764,-0.023096995,-0.00465685}},
      {{-0.055002183,0.04454404,0.018037042,-0.029466242}},
      {{-0.019761851,0.0031773953,-0.06358048,0.032904837}},
      {{0.03879641,0.0032490233,-0.08919385,0.05013475}}
    }};
    
    embs2 = {{
      {{0.0050142743,-0.023675881,0.016679611,0.019229442,0.020698026,0.012462739,-0.004385531,-0.01989376,-0.035657182,0.03853469,0.038543154,-0.029087525,-0.01733378,0.0043598004,-0.023402758,-0.023691861,-0.0105239265,-0.027784418,0.008426972,-0.012176925,0.034747485,0.026762929,-0.022671213,0.009522434,-0.014899947,-0.008128082,-0.008720132,-0.03639085,0.027309094,-0.0041443743,-0.006352607,-0.019595137,-0.008684613,-0.018213931,0.012823742,0.00423795,0.017845556,0.013923645,-0.03178478,0.024398137,0.029616456,-0.003355652,0.03888165,-0.0268313,-0.025183996,-0.007910881,0.017110322,-0.03689379,-0.0011021607,0.0049582236}},
      {{-0.02410652,0.0011658157,0.0039299782,0.0015062579,0.012997087,-0.008004428,-0.0052838246,-0.0037610508,-0.008975749,0.0023037805,0.064360395,-0.006852409,0.0011211915,-0.050664417,-0.0026680815,0.053087715,-0.0020948248,0.0054088347,0.0009028718,-0.0006410075,0.009556762,-0.01039861,-0.012960299,-0.003431729,0.002761872,0.001956974,-0.020854514,-0.074598536,-0.0039241207,-0.018696459,-0.004676074,-0.0014780601,0.0024140214,0.0027873362,-0.0014739682,-0.0023045682,-0.002028888,0.0035322986,-0.004087089,-0.004125041,-0.0051092007,0.0017501545,0.0027387405,-0.007481681,0.005625224,-0.011648473,-0.00017709192,0.0046369,-0.003161028,0.00088837836}},
      {{-0.014919439,0.0032923254,0.0031906792,-0.008256417,0.0016389496,-0.0054070507,0.004390215,-0.006847032,0.0040482963,-0.00064518163,0.02150206,0.008549467,0.0033826337,-0.037952304,-0.008297873,0.017095076,0.00401541,-0.0068260445,0.010167388,0.0018606818,-0.00071805425,0.0020676444,-0.004619308,0.0011874005,-0.004075545,-0.0029152532,-0.004025042,-0.033336863,-0.00507551,0.0040750788,0.0034504852,0.004201923,0.012147346,-0.0013939562,0.01054154,-0.004096624,0.007728609,-0.003833781,-0.00095524255,0.0019372489,0.010319166,-0.004570067,0.0008032218,0.00012908097,-0.0026371707,-0.0037969896,-0.0043358463,-0.0023771375,-0.00659829,0.0034658813}},
      {{-0.01303109,0.0029515882,0.0007565606,-0.00041025298,0.0048810253,-0.0047559105,-0.0022235687,-0.004082411,-0.0031111385,0.0043840865,0.016492225,0.0013147716,-0.004410322,-0.039178226,-0.0003944316,0.018666184,0.010904376,-0.00523929,0.0067859953,-0.0010750694,-0.015179634,0.012643798,-0.00092608324,-0.00037802244,-0.002777416,-0.0010816881,-0.0042809467,-0.024117563,0.0039278036,0.0012993685,0.0017112563,-0.0059346827,-0.0037965286,0.00064810115,0.0023622196,-0.0055279825,0.0033184534,-0.003796294,-0.0064052856,-0.004241221,0.007203157,-0.0019870563,0.0010759814,0.001512163,-0.004056123,0.018984247,-0.00147662,0.0018814877,-0.004158347,0.00016745423}},
      {{-0.0069612176,0.014420054,0.0054372563,0.004326154,-0.0025265566,-0.037690908,0.0045127664,-0.0010865681,0.0041972175,-0.0022093577,0.018612579,-0.0010049468,-0.0031630965,-0.064073,0.008700786,0.015544099,0.023219695,0.001849946,0.0131954225,0.0037548835,-0.015004782,0.019782323,-0.004548902,0.0038951887,-0.0018753901,-0.009096826,-0.01104735,-0.021485139,0.026607586,0.001748682,-0.0012209668,0.0047585424,0.004672164,-0.0015369995,0.0049927193,-0.0032408894,-0.00041734983,0.0040619513,-0.0020301074,-0.0047671213,0.005903818,-0.00018007957,-0.004862757,0.0056919134,0.0023150267,0.018544333,0.004498111,-0.0036853447,-0.005910862,0.0017381663}},
      {{-0.011106127,-0.0010132234,-0.0020843495,-0.0031013028,0.0011975579,0.008149724,-0.0043201516,-0.0006323674,0.0051791263,0.002448705,0.021650666,0.001007112,-4.3023383e-06,-0.039743528,-0.0005178729,0.03540513,-0.02218889,-0.0008955598,0.0020360781,-0.0021596716,-0.007971091,0.00949695,-0.008891984,0.0009891496,-0.00096713623,-0.0008579658,-0.015508735,-0.03589454,0.010116669,-0.0041668047,0.0027679098,0.003663059,-0.0011974439,-0.0028719516,0.005130975,-0.0014689544,-0.00047908525,0.00342197,-0.00086827634,0.0026626408,0.0055094603,-0.0021145006,0.0030158642,0.0025698033,0.0021838278,0.012806808,0.0011471218,0.0035553179,-0.00048446612,-0.0016504048}},
      {{-0.012026959,-0.002167571,-0.005938781,0.002789614,0.0015257028,0.004960082,-0.0047620437,-0.00040058335,-8.3439045e-05,0.0021362146,0.022141144,-0.0015861547,-0.0009758947,-0.057889916,-0.010752619,0.01180674,-0.001146641,-0.0056037577,0.014529828,-0.002456532,-0.014063596,-0.0015179774,-0.00143676,0.002194121,0.0050484114,0.003634387,-0.0058252127,-0.019554015,0.0013315844,-0.0030081435,0.0006911796,-0.004298418,0.0034823688,-0.0012726858,-0.00019209091,0.0034319216,-0.0051117507,-0.00017679455,0.009263858,-0.0003296558,0.0077581997,0.00407644,-0.001403188,0.00030096827,0.0031280902,0.012074754,-0.001875628,0.003935698,-0.015588531,-0.00012550906}},
      {{0.0021093267,-0.002476397,0.004343773,0.0029165687,-0.0037420688,-0.0051339003,-0.0020275365,0.0024283892,0.0013755128,0.00087739713,0.011145187,0.0022730462,-0.0023218559,-0.037116818,0.0015731864,0.017083094,0.0027650734,0.0016713034,0.0020055878,-0.00259427,-0.0017968564,0.0058264486,-0.0009975488,0.0013849671,-0.00037417142,-0.0038631067,-0.01980684,-0.028566375,0.011542906,-0.00056072354,-0.0006920428,0.008180561,0.0026480863,-0.0005933441,-0.0046420284,-0.005215663,0.0007169079,0.00026930353,-0.0028083113,-0.008865403,0.007710402,0.0046114298,-0.0030864496,0.0017045025,0.0018857447,0.01742875,-0.0010045987,-0.0016486292,-0.0030626988,-0.004009946}},
      {{0.0035829034,-0.0015018914,-0.000660045,0.003336852,0.0019871942,-0.007093991,-0.0040246965,-0.0009873987,-0.0024206024,0.00045410826,0.020448402,-0.0014002807,0.005477928,-0.038107436,-0.0075026676,0.016495004,0.0075327177,-0.0033511529,0.0015242883,0.0050751194,-0.00834012,0.0016933797,0.013254928,0.0019769904,0.004225065,0.0024510832,-0.0115222,-0.018471781,-0.0043425295,-0.0037708238,-0.00248597,-0.0070770946,-0.0068781604,-0.0022923518,0.0062085427,0.0057197777,0.0014822856,0.003579103,-0.003418806,-0.01177646,0.0053995303,-0.00060645654,-0.0041549965,-0.004900297,-0.0076801972,0.010665467,-0.004337992,0.0042850324,-0.00881806,0.0054167653}},
      {{-0.000501035,0.0027266038,0.0030074173,-0.0011332326,0.007673311,0.020918338,0.0001457083,0.007425617,-0.0030103356,-0.003659132,0.023248868,0.0030618822,-0.0038293586,-0.04399252,0.0037690839,0.031227015,-0.013858238,0.0047262637,-0.00027214762,-0.0030131568,-0.0056389207,-0.00013752835,-0.008138804,-0.0011001137,7.527082e-05,-0.0046505295,-0.0016200757,-0.029524948,0.019617569,-0.012791436,0.0011087968,-0.00010220264,-0.0023893742,-0.0051219463,-0.0005884868,0.0016272089,-0.0012216311,0.0017485659,0.0015019675,-0.005417879,1.7392167e-05,0.0032855365,0.0007069074,0.0018018126,0.006019831,0.0005303299,0.0032168317,-0.007925145,0.0011056055,-0.00020633127}},
      {{-0.004715945,0.0026273774,0.0037187166,0.0020525868,-7.128236e-05,-0.001515337,-0.0016814272,0.00013689,0.007581958,-0.0016989287,-0.008145386,0.004321175,0.00061531196,-0.055937678,0.0049998704,0.0025680126,0.008377636,0.0012304233,0.01848898,-0.0037522472,-0.0014946465,0.00090129254,0.0014315943,0.0017604263,-0.00029238538,-0.0034606678,-0.0018475947,-0.026844304,-0.016269254,0.00093065377,-0.0083430605,0.0066558532,0.003937421,0.005769026,-0.0038156458,-0.0020671687,0.0051793535,-0.0054574157,-0.0059484234,-0.011487542,0.007000671,-0.004491276,0.00037016522,0.003036681,-0.0024827945,0.0039108745,0.004371727,-0.0012918678,-0.00170815,0.004417887}},
      {{-0.008453546,0.0033465256,0.0021295606,0.003269644,0.00027013576,0.0005633879,0.0010679758,-3.0465786e-05,-0.0054158373,0.0041613565,-0.013563046,-0.0009318977,-0.000748191,-0.049549066,0.0017675997,0.0010842652,0.0064961496,0.0005556609,0.0028699804,-0.000494423,-0.00088192936,0.01073804,0.008938744,-0.0014722437,9.88723e-05,-0.0013102548,0.0020332686,-0.023242557,-0.045320664,0.008251119,-0.0061715096,-0.0009912036,0.001080248,-0.0045170174,-0.003871377,0.0028930241,0.0003197994,0.005322734,-8.594344e-05,-0.009184239,0.008399874,0.0003474979,-0.0036004833,-0.0013409724,-0.0014498667,0.007862314,-0.006597608,-0.0010860796,-0.003420672,-0.0010177824}},
      {{-0.008780095,0.0046837647,-0.00359692,0.0044328016,0.0028521619,-0.016605524,-0.0012585373,-0.005758345,0.0064207516,0.003366444,-0.011949826,0.0014460846,0.0015481481,-0.055680275,-0.002789086,-0.0075544175,0.017132277,-0.0038277667,0.007994042,-0.0021713634,0.0002947245,0.01582086,0.0077019925,-0.006912224,0.002376417,-0.002119704,-0.0023242405,-0.01952186,-0.004395903,0.008749556,0.0007640836,0.0010950544,-0.0041137678,0.006334071,-0.008568394,0.004301925,-0.0064148526,-0.0015952588,0.00462919,0.0024520983,0.0044048796,0.004279823,0.0013385975,-0.004913301,-0.004500169,0.008381974,-0.004229421,0.006907634,0.002275303,-0.002289754}},
      {{-0.0005237035,0.00019623007,0.0018168042,-0.002300817,-0.003919338,0.00827101,-0.0044542076,0.003551907,0.008792108,-0.004691732,0.0089571895,-0.004551759,0.00087205507,-0.046817727,-0.0053389706,0.023100842,-0.011472497,0.0035497427,0.0049796966,0.0005583209,0.00921934,0.007307758,0.0031789697,0.00017522315,0.0026853909,-0.00017401633,-0.0022047432,-0.01986865,0.01931935,-0.004270956,-0.0017081156,-0.0007345456,-0.0010877155,0.0017593888,-0.0028509218,-0.0012971415,0.000705393,-0.001065663,-0.00070350507,0.008149622,-0.00018900448,-0.00048559884,0.0027888594,0.00065023324,0.003949571,-0.005990753,-0.0011225388,-0.0011598287,0.004932878,0.0010300732}},
      {{-0.0015887314,-0.0024992444,-0.0022498842,0.0001670314,-0.0025536248,0.0047594407,0.0057134577,0.00268827,0.0005852397,0.00032368745,-0.004650471,0.00359087,0.0005606716,-0.05693456,0.00015578265,0.008026761,-0.008329743,-0.0080004465,0.00697117,0.0030584016,0.0027558536,-0.00054373447,0.010446567,-1.3451041e-05,0.0026832144,-0.0051222,-0.0013414582,-0.009157871,-0.0044748536,0.0072986917,-0.0062206197,-0.0025086168,0.0016024282,0.005186768,-0.0023767194,-0.00026856767,0.001348194,0.004329439,-0.0026441466,0.009387372,-0.0066305324,0.0019226464,0.0041140877,-0.003999269,0.0003097662,0.0022944135,0.004887376,0.0017745504,-0.0087770615,-0.0023131117}},
      {{0.0038818314,0.0008608373,0.0010832701,0.0027465124,-0.00220556,-0.008352098,-0.0074904067,0.00070037943,0.0072520953,0.00028803555,-0.0008870247,-0.0020171537,-0.0014035394,-0.05585763,0.005746145,0.016075067,0.00095950864,-0.0026909448,0.0120512005,0.0026929716,0.0021175803,0.009633289,0.008397521,0.0018643532,0.0025938712,0.0015352234,-0.004767338,-0.022500496,0.008273089,0.0063416827,-0.0034910892,0.0059471442,0.0014110422,-0.004069719,0.00089747825,-0.005211771,0.0039228164,0.0017586221,-5.4728403e-05,-0.007005658,-0.004813201,0.0007169841,0.0029505626,-0.0015985154,0.005059967,0.00158578,-0.0021226222,-0.00024173653,0.00092823355,-0.0006978819}},
      {{0.00395391,0.004146594,-0.009124243,0.003133028,0.0042727552,-0.015877385,-0.006120264,-0.003948989,0.0058827475,0.00086761074,-0.0031719904,0.0077318903,9.282462e-05,-0.054294992,0.0006916143,-0.0018210878,0.008950993,0.0033641064,0.011483958,-0.0015769816,-0.0034691787,0.017241709,0.0036638363,-0.002476656,-0.000680662,-0.0036170795,0.013868537,-0.0110552125,0.0005230186,0.013361409,-0.0045190738,-0.0026021455,-0.0031096141,-0.0022626931,0.0029813854,0.0024780305,-0.0004138296,0.0027822435,0.0031394123,-0.016379513,0.00015807732,0.003930934,-0.0014857367,-0.0042540426,-0.0036161523,0.01007511,0.0025894833,-0.003125501,0.006913462,-0.0025707958}},
      {{0.0029070338,0.0031005205,-0.00045682443,-0.001837943,-0.0033896829,0.008631462,-0.0018457494,-0.0010127238,0.0017541951,0.00234943,0.011568824,0.0012415348,-0.0006307603,-0.037004873,0.00046949065,0.019109605,-0.008993198,-8.575562e-05,0.00043050246,0.0032480631,0.0008081503,0.010475474,0.00015347717,0.004347162,0.0034983398,-0.0007723971,0.0022628342,-0.011347232,0.011458783,-0.0033543406,-0.0038042034,0.0020973687,-0.0008992062,0.0011381321,0.0024269288,-0.0026697326,0.00061717443,0.0004890655,-0.0021153968,0.0010148817,0.00063792267,-0.0011420299,-0.0026571515,-0.0022957455,-0.0048583257,-0.005906794,0.0021957506,0.0030876077,0.0104979025,-0.00044443572}},
      {{0.0018536436,0.0074995924,-0.002174785,0.0046950346,0.0038802368,-0.011951149,0.003235319,-0.0006695833,0.0030254407,0.004245742,-0.0024534196,-0.0031272774,8.344525e-05,-0.05465039,-0.0004919797,0.0061308225,0.009746675,-0.0014272573,0.012709916,0.00065861735,0.002103381,0.0062477174,0.011380803,0.003805824,0.00071145216,0.0026384303,0.010249793,-0.008181926,0.00013023581,0.004789839,-0.0046217926,-0.0024111562,0.0014734667,-0.0014252621,-0.003463728,-0.0049184114,0.0069855275,-0.008729607,0.002679352,0.0021463898,-0.011378048,0.0028000532,-0.004312359,-0.004977015,-0.010894394,0.0024517293,-0.00032471132,0.0021995557,0.006908686,0.004568698}},
      {{0.015675554,-0.0009190149,0.0010934321,0.00048337135,-0.0040126466,0.003893955,-0.0029904614,-0.0017854592,0.0017252243,0.0042559523,0.017289303,0.0026381453,0.0060436428,-0.035984766,0.00045142698,0.027739752,-0.011140947,-0.0011729534,-0.008877061,-0.0036474064,-0.0007780515,0.0027665636,0.0016445526,0.00020572952,0.001994808,-0.0010372787,-0.005626796,-0.00837561,-0.019996488,-0.006308344,-0.005438359,-0.0010520503,0.0015784841,0.0008421267,-0.0005736747,-0.0006257937,-0.0010217358,-0.0029005655,-0.0036277806,0.0019952755,0.00025186123,0.000102344944,-0.003197052,0.0050858813,-0.0006539504,-0.002221319,-0.002385691,-0.0007444008,0.012077569,0.0024380335}},
      {{0.020044116,0.0027271772,-0.0022462576,0.003311491,0.0069232457,-0.008466767,-0.007265558,-0.0055470867,0.008137072,0.0027491355,-0.006546732,-0.0057946825,0.0025732366,-0.045383416,0.0034259753,0.016764732,-0.006857687,-0.0022339006,0.0058995984,0.004071399,0.007928358,0.0036651648,0.0014566585,0.0054382198,-0.0045927786,0.0024721383,-0.0053310515,-0.010308595,0.0012452935,0.0030630913,0.0011481047,0.0030701621,-0.0019338175,1.147212e-06,-0.0038566566,-0.002685224,-0.0030992618,0.0021097842,-0.004968961,0.008970408,-0.008646364,-0.0019844053,-0.0011266934,0.004283937,-0.004815086,-0.0015776712,-0.0024661503,0.00714286,0.00593763,0.00446423}},
      {{0.01157668,-0.0001185771,-0.0002087316,0.0021745614,-0.006985264,-0.0073757153,0.00016870751,0.00012430569,0.0006146026,-0.00161869,0.011056485,-0.0010943599,-0.0015415968,-0.04857238,-0.0015396008,0.024876457,-0.005508728,0.002272575,0.0017913578,0.0029466865,0.003234181,0.0065402742,0.01058592,-0.00095653353,0.00095004926,-0.0001548571,-0.005042211,-0.012940606,0.022477448,-0.0033630026,0.00042562603,0.0020240475,0.0014134357,0.001130736,0.00035728505,-0.0017493904,-0.0033728676,-0.00084605487,-0.00041049955,0.011209697,-0.0027680825,0.005630927,0.00035090887,-0.000618185,-0.0010226524,-0.0016197196,0.003034168,-0.0030884712,0.010521131,0.002197978}},
      {{0.008617229,0.0010999751,-0.004179124,-0.0044615576,-0.0084303375,0.0042654024,0.0012388936,-0.0021550164,0.004880119,0.00035858437,0.013879767,0.00053002307,0.0015502137,-0.046151906,-0.0043853885,0.020896636,-0.014994487,-0.004983951,0.003206529,0.009753605,0.002539721,-0.000893541,0.015471473,0.0050149686,-0.0047282972,0.0013658927,-0.0005800459,-0.00364328,0.0012891359,-0.001010909,-0.0022393148,0.004574993,-0.0062460112,0.0026709526,0.0007478502,0.0022600463,-0.0025801964,0.007856665,-0.002448299,0.009655214,-0.0024078067,-0.0020614136,0.0038969822,-0.0031351345,0.0059980745,-0.005646994,0.004734851,-0.0030083384,0.005762729,0.00033565005}},
      {{0.011409859,-0.001328654,-0.0020286292,0.0019264163,-0.0067869523,-0.008603489,0.0049349754,0.0006878095,-0.00059150514,-0.0017688946,0.008317405,0.0023228852,0.00105826,-0.051444687,0.0024414037,0.020857485,-0.0007293813,0.0019433587,0.00048317088,-5.439848e-05,0.0076003033,-0.00015870093,0.010493861,-0.00033588972,-0.0015412588,-0.0015495935,-0.00013251825,-0.009569376,0.0027282347,-0.0024471108,-0.0009207731,0.003955037,-0.00024825663,0.00052494725,0.004166638,-0.0022561098,0.0030502258,-0.00053507905,0.00054773974,0.004596658,-0.0022910468,-0.0022981628,-0.0022887634,0.006000872,0.0023698476,-0.007140005,-0.0015267396,-0.0007114053,0.0052523655,-0.0017040907}},
      {{0.010062285,-0.0039142086,-0.0025279797,-0.00015784116,-0.003648249,-0.015084763,0.0059870044,0.0014658197,-0.001864021,-0.0018296953,0.013114263,0.011034602,0.0025346538,-0.054951705,0.0013897861,0.008440428,0.0039973515,-0.0037165289,-0.005972941,0.0076820664,0.0007998317,0.007715575,0.009688779,0.0002879654,-0.0063863383,-0.0063749948,0.0012138567,-0.008957634,-0.0020226496,-0.0024175048,-0.0010658558,0.006585448,0.0021504501,0.00069680274,0.0022543157,-0.007847552,0.0016434403,0.0030000834,-0.006146106,-0.008096107,0.0031597004,-0.0067034126,-0.0018531921,0.010322755,0.0007087232,0.0040456415,0.0019215359,-0.0036295888,0.00807772,-0.0050032944}},
      {{0.007133905,-0.0020452102,-0.00044553596,0.0024591042,-0.0028156328,0.0011934704,-0.0006203595,-0.0014576179,0.0008260776,-0.00032529465,0.0022026822,-0.004174009,0.0020541144,-0.051803704,0.0013717315,0.016629258,-0.0043892665,-0.0013690853,0.0023874515,0.0025839156,-0.002056482,0.000443468,0.0011217443,-0.004667372,0.0019593353,0.002625352,0.0070157163,-0.014622037,0.01920388,0.0025040365,0.0006865673,-0.0028687816,-0.0019091648,-0.0035387438,-0.0036121074,0.0018500374,-0.00065666466,-0.0037984063,-0.0026449403,0.001387603,-0.0022166453,0.00075821124,0.00033683405,-0.0064142067,-0.0012781491,-0.003288394,0.0011028765,0.00031732453,0.0019462871,-0.0021578576}},
      {{0.011214427,-0.005001329,0.0017317449,0.0021559803,0.0034993174,-0.006862531,-0.005341194,-1.1406058e-05,0.007099059,0.005556759,-0.0023889476,0.0024290679,0.0051726797,-0.050237026,-0.002145235,0.0061921654,-0.003224131,-0.0040818914,0.008564462,0.0012990533,0.0043986146,0.0030143315,0.007858112,0.002541614,-0.0035971126,0.0050029433,0.00088433176,-0.014068978,-0.0022020019,0.008582194,0.002191027,-0.0113317445,0.004700409,-0.0071020126,0.0064954204,-0.0039089224,-0.0016746229,-0.002427486,-0.0033867736,0.008259137,-0.003956225,0.0070098382,-0.003714216,0.0033828623,-0.0021804022,-0.0065773316,0.003082215,0.007021528,0.0012087994,0.00037130268}},
      {{0.009641833,-0.005264287,0.006051707,-0.0016558727,0.0007729097,-0.0016519313,0.00065399136,-0.0011314498,-0.0047303224,0.0002798025,0.008173306,-0.0018344761,0.0023032175,-0.05043956,-0.0008703312,0.010428159,0.0020869318,-0.0060567255,-0.0037905553,-0.00070554914,-0.003567526,-0.004941964,0.019677533,0.0061510336,0.0038159916,-0.003731044,0.0077177184,-0.0042674686,-0.017279346,0.0032251491,-0.00034603424,-0.0008495421,0.0013266632,-0.00044982717,-0.0010085065,0.0021710815,0.0016686154,-0.00079745735,0.005892728,0.0020385827,-0.00086702296,0.0008093229,0.003360037,-0.0015715626,-0.0034561872,-0.0031510515,0.0024446973,0.0015182368,-0.00035653365,0.00088540534}},
      {{0.0084314,-3.9692764e-05,0.0038645559,-0.0015543435,0.0045356164,-0.015050961,0.0053796964,-0.00727117,-0.005836714,0.0018412266,0.011733251,0.0006575247,-0.0032783793,-0.059185043,-0.0016841877,0.012617254,0.012603818,-0.0016497861,0.00072825095,-0.010312062,0.0044027544,0.0012337097,0.0060189646,0.0010835978,0.002769496,0.00021936429,-0.004976733,-0.013187576,-0.0076104463,0.0047335173,0.004700986,-0.0023256224,-0.0076149004,0.0010440453,0.0023303118,0.005628789,0.0023262335,0.008172042,-7.4527e-05,-0.0024868976,0.006248116,-0.00083078636,0.0005647176,-0.000102981976,-0.0017945496,-0.003229387,-0.007855448,-0.00248383,0.004420719,-0.0068856743}},
      {{0.010790035,0.0016378942,-0.0036300935,-0.004090482,0.0062611895,-0.008545158,0.0012349497,-0.0017977535,0.0027711107,-0.0015123471,0.012502268,0.004097262,0.0038906836,-0.05435624,-0.0021764147,0.026615487,-0.0012486057,-0.0010257856,-0.012863326,0.0017553382,-0.0017687603,-0.0056640697,0.0017182367,0.0039324174,-0.000103960854,-0.0008999012,0.0016791496,-0.017238384,0.006724532,-0.00022112123,0.0033187866,0.0019437171,-0.0006846883,0.0012731473,0.0013512509,0.001481802,0.00055930845,2.804276e-05,-0.00032866787,-0.0003356884,0.0051165377,-0.0008228926,-0.002590738,0.005549241,-0.005418234,-0.007893345,-0.0011865172,-0.00080394524,0.0036838122,-0.0018357296}},
      {{0.0058277193,-0.0004399419,-0.0034353917,-0.0021146948,0.006450578,-0.013550553,-0.0014265943,0.0040616514,0.004726272,-0.0047571054,0.024952564,0.0003567942,0.002332308,-0.06088747,-0.006986183,0.019997885,0.0072805183,-0.003186155,-3.442278e-05,-0.0019959947,-0.0051247794,-0.010077757,0.0067413114,-0.001444243,-0.002115249,-0.002411837,-0.0060121915,-0.011970333,-0.0033306088,-0.0043285373,0.0028836557,0.004785289,0.0010601351,-0.0016353732,0.0061473195,0.00036733993,0.0013997697,-0.0014417353,0.0036177596,0.006306843,-0.0050741993,-0.0008464433,0.004430998,0.007728511,-0.010658611,-0.0059793238,0.0016947124,0.002559811,-2.42696e-05,-0.0001605728}},
      {{0.01532114,0.0008638143,-0.0036988293,-0.0010939701,0.006524875,0.00962506,0.001680537,-0.00076890085,0.001259514,0.002366344,0.010636318,0.00044905665,-1.8618066e-05,-0.05632257,-0.00040465925,0.028730802,-0.00938201,0.000465389,-0.010615367,-0.00255822,0.0015097195,-0.017085716,0.0027848834,0.0039785,-0.0021130797,0.003093982,-0.0022503326,-0.010143124,0.019823432,-0.002988627,0.0014365213,0.0019975707,-0.0020912837,0.00025498515,-0.0017322217,-0.0032640232,0.00067431486,-6.286222e-05,0.0007883227,0.0032232208,-0.010014924,-0.0007299642,0.004169254,0.0010043088,-0.0020578427,-0.010462577,-0.002116003,-0.0021071439,0.0009153674,0.0053772815}},
      {{0.012438613,0.0025218392,0.005634638,-0.0003974003,0.0021144322,0.0062162112,0.0011457495,-0.0029078047,0.001968587,-0.0014072986,0.0037408646,-0.001083845,-0.0015174529,-0.06936429,-0.003202393,0.015720168,-0.0022286223,0.0052458206,-0.002698073,0.0022785964,-0.0040965457,-0.010691561,0.005295106,0.00614675,0.005030579,-0.0018768612,0.005622196,-0.003876297,0.0006259212,0.0012905346,0.007882864,-0.0054767462,0.0020128835,0.0052448455,0.0039377846,0.009503077,0.0008134363,-0.0021613652,0.009132711,0.004948261,-0.013568433,0.004739874,-0.00058614515,-0.007047953,-0.004877604,-0.0088318195,-0.0038154393,0.0005398892,0.0024050148,0.0040191812}},
      {{0.015601491,-0.00030926467,0.00048775945,-0.0038109908,0.003919101,0.012804955,0.0038044804,0.0023375547,0.0028783074,-0.0024354875,0.00032242143,0.0007639094,-0.0020208089,-0.050934784,-0.0010862066,0.024027994,-0.014692196,-0.0013775764,-0.0060133613,0.0036538003,0.0034435638,0.002874914,-0.0059286584,0.00090179744,-0.0010722729,0.00035946717,0.003046753,-0.01645203,0.00051068264,0.0020524194,0.00078740914,0.00715347,0.00020573982,-0.0016082888,0.0027492994,-0.00041563145,-0.0013394429,-0.0019283876,-0.004228083,0.0009892654,-0.0023350448,-0.003922416,-0.0049809134,0.0027404611,-0.0033614577,-0.010045765,-0.00091853837,0.002161803,0.0017582709,-0.0022132262}},
      {{0.023212958,0.0007524266,-0.0023511692,-0.0050428146,-0.0024936644,0.00430118,0.00038326188,0.002394066,0.002795964,0.0010473375,-0.0023213618,0.010274554,-0.0012798187,-0.053263836,-0.0018787318,0.005532299,0.0034032345,-0.00428702,-0.01337076,-0.0010051208,-0.0036348277,-0.011387924,0.003951837,0.0024232054,-0.0049952683,-0.0032359138,0.00227259,0.0049426435,0.0031062348,0.0064918716,0.0062049883,-0.0022899897,-0.001061042,-0.0018442654,-0.00037804042,0.008734178,0.003269446,-0.000102284495,-0.0028872585,0.0027438696,0.00035732175,-0.005549585,0.00086159963,-0.0022603134,-0.0016296317,-0.0031817777,0.00033316118,0.0016054051,0.00125741,-0.0025762147}},
      {{0.015983697,-0.0010634513,-0.000730782,0.00071338756,-0.001932462,-0.0040492835,0.00023665183,0.0017810756,-0.0062330156,0.0004694435,0.0065703695,0.0022021306,0.0024345552,-0.063694395,-0.00048404772,0.015169502,0.003742668,0.00014747468,-0.0048813494,-0.0006118799,0.0014754569,-0.0059415163,-0.0050419215,-0.002182167,0.0012293943,3.448588e-05,0.0013794225,-0.008596655,-0.015770633,0.0034429731,-0.0028154356,0.0018118081,-0.0005667821,0.0011622206,0.002597287,0.0036852434,-0.00049491506,-0.0013674459,0.0032344314,-0.008016386,0.008593958,-0.002755221,-0.002625083,0.00195117,0.0014139604,-0.00064566644,0.0006497094,0.0016445343,-0.007660838,-0.003683782}},
      {{0.012823906,-0.00039901055,-0.003304946,0.005272774,-0.0041651623,-0.010255728,-0.002932604,-0.0005370261,0.008560537,-0.0057727885,0.00041853226,-0.0032315503,-0.0019382772,-0.054251175,0.00063508167,0.004497777,0.005594012,0.00113121,-0.0051846816,-0.0015444289,0.002903751,0.00076791225,-0.0072850026,-0.002785679,-0.004445516,-0.007567556,0.006454289,-0.012045619,0.03119223,0.0050913044,-0.0042918185,0.0014173157,-0.0019276394,0.0014347937,0.00046951557,-0.00045403722,-0.0011354472,-0.0015111575,0.0018160059,0.000120177494,0.003992014,0.004077984,0.006191415,-0.0017944908,0.0075704847,0.00043396742,0.0013687351,-0.0043872106,0.0019951493,0.0004111216}},
      {{0.01977081,-0.0010133407,0.0012207347,-0.0031372465,-0.004650929,-0.0080560725,0.0028603054,0.000798799,0.0034113277,-0.00011492231,-0.0076100808,0.00051686616,0.0004352997,-0.053097222,0.0011868184,0.013850775,-0.005083105,-0.0013103893,-0.011057951,0.003663397,-0.0016936918,0.00054923247,0.00450484,-0.00029545094,-4.15404e-05,-0.0011358378,0.004821201,-0.014856885,0.003429801,0.0028094433,-0.0033006582,-0.0011951294,0.0022111998,0.0021799582,0.0004303281,0.00019802648,0.0031231444,0.0001678663,0.0013057445,-0.00409949,0.009583348,0.0013756886,0.00092132244,0.0039875954,-0.004842104,-0.0022279003,-0.002353227,-0.0014954562,0.0032144699,0.0038453222}},
      {{0.011403959,0.006061391,0.0070205615,-0.0013351507,-0.0035945282,-0.0064653363,-0.0034387317,-0.0052038264,-0.0065502883,0.003639797,0.007454302,0.00023089086,-0.0025569315,-0.056042854,0.0012866334,0.015792375,-0.0006324521,0.0018710601,-0.0024326157,0.006492401,0.006417112,-0.011038907,0.005355877,-0.0008697278,0.0018844872,0.0013230806,0.009487719,-0.002969718,0.0053241313,0.005160091,0.0011028434,-0.0007949097,0.0035608164,-0.00044255683,-0.0048014647,-0.004204789,-0.0018764824,1.47140245e-05,0.00374138,0.004752378,0.003636521,0.005092212,0.00037544433,-0.00087261334,-0.0043547973,-0.006755076,0.002149487,-0.00020958393,0.0023761925,0.001661017}},
      {{0.023766525,0.0013634028,0.0018140264,-0.0034313763,-0.0075854566,0.0014489715,-0.004126847,-0.0031083475,0.00095359347,-0.0011564697,-0.009468335,0.00042556322,-0.0012343704,-0.057186686,0.006905138,0.0048326044,0.005389255,0.002293746,0.0054793027,0.00033859778,0.00519393,-0.007352495,0.006019308,0.0006239591,-0.00023099272,-0.0015315956,0.0022939316,-0.007616958,0.0035090738,-0.00057190674,-0.0037832775,-0.00071412424,0.004733688,0.0033758208,-0.0044040587,0.005341992,-0.0034415757,0.00031856864,0.0013486022,-0.0022744678,-0.0026263495,0.0031904415,0.0056799636,0.003689774,0.0024217109,0.0026567245,-0.0021043047,0.00020257631,9.485614e-05,-0.00142892}},
      {{0.016152034,0.0046910825,-0.00091385964,0.0012945788,-0.016206099,-0.009110869,0.0012253908,0.00089898234,0.0082357675,0.00067658524,-0.005144858,0.0032519326,-0.0008089039,-0.05915858,0.0020105406,-0.0016348825,0.022948712,-0.0019198783,0.004425888,0.0042067203,0.007382429,-0.0052038976,-0.001964642,-0.0021726685,-0.0055558817,-0.0015756451,0.00064382766,-0.0057822354,0.012361208,-0.0042773653,0.00040328273,0.0041970164,-0.004356944,0.0016587686,-0.0068252613,0.0063414676,0.002724249,0.004130133,0.0017788346,0.007991016,-0.0039990023,-0.000767886,0.0004963964,-0.0066630165,-1.3309875e-05,0.0035478172,0.003251674,0.0039698086,-0.00078117487,0.002695603}},
      {{0.012145996,0.0017281068,-0.003656641,-0.0013127817,0.0029757826,0.007165476,-0.0022147796,-0.001818364,-0.0035478033,-0.0021922044,0.0008579137,0.00043462173,0.003652164,-0.039707452,0.0011931683,0.013212296,-0.0008157265,-0.0011459697,0.0001521258,0.00040180233,0.0073361783,0.00038346622,-0.00947825,0.0029787284,-0.0054309214,0.0025507126,0.012706407,-0.009794895,-0.024012435,-0.0034746935,-0.0042373603,0.0017461034,0.003191843,0.0024639822,-0.0013343903,-0.0023742192,0.0013290996,-0.0012877886,0.0013746885,-0.00077135465,0.013843467,-0.0010750573,-0.000846499,-0.0017912526,0.0032955718,-0.008797933,-0.00089458784,0.0011555278,0.008352229,-0.0008062584}},
      {{0.010202542,0.0048558516,0.0047585205,-0.0021491542,-0.002241259,-0.0028554716,0.004542602,0.0010579674,-0.0020896806,-4.8485865e-05,-0.006355106,-0.0019488091,-0.00037175269,-0.049633525,0.00089219876,0.0016242949,0.010216139,0.0012733313,0.0074259946,0.0036914947,0.0018722973,-0.00016546047,0.0002442415,-0.00078152015,-0.0075562038,0.0034368688,0.010876015,-0.008909858,-0.009616986,0.004324946,-0.0018049225,-0.0017609495,-0.0070156786,0.001107429,0.00045768215,0.004546587,-0.00083770487,2.9204864e-05,-0.0002766381,-0.004524635,0.008917407,-0.001714678,-0.0030463987,0.0030633325,0.006063328,-0.0072148014,-0.0039558583,-0.0030730308,0.008821184,0.0048974752}},
      {{0.020643292,0.0021576849,9.172733e-05,0.001930335,0.0010235774,0.0048453365,-0.00075875025,0.0030641058,-0.001775215,0.0014104547,-0.0100544365,-0.00044888546,0.000390562,-0.049589902,-0.0019211558,-0.0007714026,0.0065374696,-0.0012549349,0.001400729,-0.0016326581,0.0088808965,-0.003502507,-0.004691349,-0.0027429461,-0.0007939088,-0.003278063,0.011487958,0.00032546537,0.011639826,0.005478156,-0.0013807609,-0.0028703678,-0.0014465705,-0.0014527933,-0.004392176,-0.00059347216,-0.006387503,0.004517527,-0.002047098,0.009589722,0.010456156,-0.0020812117,0.0046972022,-0.0076429485,0.004321762,-0.0050324528,0.0033106771,-0.0013082568,-0.0017064689,-0.0029113363}},
      {{0.004100223,-0.0027104316,0.0005328786,0.00059151044,0.0050679436,-0.003184339,0.002406864,0.0003296395,-0.007575196,0.005291207,-0.0040189703,-0.0015922817,-0.0051528504,-0.05005586,-0.0011638143,-0.0026679265,0.016860094,-0.005940108,0.0019282671,-0.0006400835,-0.0066738734,0.001468644,-0.012651835,-0.00016973903,-0.0069707097,0.005889823,0.013506338,-0.0065348293,-0.007509621,0.0093119815,-0.0031472011,-0.0027608844,-0.0022610442,-0.00023437441,0.0036457623,-0.00045259623,-0.00068267767,0.0017340549,-0.0016419044,-0.0111780865,0.00014095791,0.0005731761,0.0058750967,0.0030964862,-0.002359041,-0.0014437924,-0.00058425136,0.005283278,0.004187043,-0.0030745673}},
      {{0.018198771,-0.0013181893,0.0004806859,0.0034673803,0.0065677105,0.015217755,-0.00022508111,0.002632352,0.00013680151,0.0026669179,0.00042482212,-0.0014408758,0.0023500735,-0.041515924,-0.0003784876,0.0035081636,-0.009415376,-0.004382501,0.0008928536,0.0022477044,0.0005000605,-0.0050589954,0.0026559827,-0.0004020458,4.2303833e-05,0.0010515149,0.013476985,-0.0032071788,-0.038443044,0.0006438195,0.0035285384,-0.002643269,0.0016652973,0.00108701,-0.0011766133,0.0026162001,0.0012592165,0.0007171479,-0.0036219803,0.0037208588,0.0075786486,0.0026305025,-0.0022955122,-0.0020631363,-0.0034344664,0.009197577,0.001949347,0.0052973214,-0.011283815,0.003181635}},
      {{0.008215236,0.0046259076,-0.0017157012,0.00243215,0.011187498,0.00622571,0.00054645655,-0.007897111,0.0018459077,0.0009198914,0.011265757,-0.0047062514,0.0034455862,-0.05159188,-0.0024476731,-0.0097659845,0.009912469,-0.0049134665,0.00953283,-0.00012152966,-0.008257197,-0.0052780313,-0.0070921094,0.00011005109,0.0042267074,0.0055181184,0.012929258,0.0040103095,-0.009467548,0.0022573394,0.011697039,0.0016745655,-0.009702265,-0.00280966,-0.00085579086,0.00063259155,0.0033224938,0.0006893897,0.00064843777,-0.008199255,-0.009807161,-0.0021016137,0.0019637728,-0.0032319971,-0.00018583868,0.0038270457,0.0010416731,0.00022550454,-0.019669564,-7.12706e-05}},
      {{0.0010485192,0.004830921,0.00038885637,4.1627743e-05,0.007847202,0.018547256,0.0023966096,0.0026578202,-0.011204601,-0.0034029577,0.008972588,-0.0022761223,-0.004225027,-0.03738652,-0.0030144341,-0.011515436,0.013444245,0.0012801896,0.0077279145,-0.0014284651,-0.009632931,-0.011637002,-0.017252801,-0.0018145193,-0.0005952436,0.0005564057,0.0025727297,0.010045142,-0.045702178,-0.0034871777,0.0071782186,-0.0025899427,0.0022878759,-0.0018365629,-0.0023369584,0.0009866727,-0.0032152936,-0.0007981972,0.002421951,-0.007591274,-0.0122714555,-0.00035063617,0.002671696,0.0019632243,0.0027940904,0.005457861,0.0055663856,2.8346622e-05,-0.010522359,0.0011889605}},
      {{0.009150878,-0.0055730343,0.0017092834,-0.00030449108,0.009358811,0.017791813,0.0080044465,-0.006654621,-0.029117214,0.0018944948,-0.023450509,-0.003111657,0.0032210029,-0.036244854,0.0031895686,-0.014331507,0.030520124,-0.0048034764,-0.00240377,-0.00093560904,-0.0077724685,-0.011629161,-0.018907107,-0.00704182,0.0031614301,0.0026370801,0.0110481605,0.0047919867,-0.06137808,0.011098137,0.0045590843,-0.0026120474,-0.0010424628,0.0061865607,-0.002121268,0.010194974,-0.0006377396,0.002998978,0.0072707445,-0.028103465,-0.00042349263,0.0038788824,0.0028961042,-0.0011759185,-0.0008137944,0.014836846,0.0054495614,-0.00021627972,-0.018546926,0.0076118326}},
      {{0.002728549,-0.0025880476,-0.0010677169,0.0034705221,-0.006657681,0.005969305,0.0015550149,0.00011432558,0.0015288484,0.0041455454,-0.0075775646,-0.0006630375,-0.0014739354,-0.026323136,0.0022860426,-0.0045567476,0.026589556,0.00481516,-0.0041219606,-0.006275616,-0.0013568515,-0.002862296,-0.014761318,-0.0017582732,0.0026088264,-0.0022096361,-0.001939528,0.008389404,0.0047525708,-0.0029939772,0.002552697,-3.741122e-05,-0.0008174216,-0.0018180162,-0.0014495822,0.00033076725,0.0015237824,0.0017207091,0.001708969,-0.0015384377,-0.0149180535,0.00083737826,-0.0014358081,-1.7281296e-05,0.0028978172,0.0062195035,-0.0009990806,-0.004790839,-0.0027665151,0.0014727721}},
      {{0.008352829,0.0030391733,0.00019097896,-0.0017862713,-0.003900793,0.00083378126,0.0034096767,0.003618396,0.012794453,0.000201744,-0.009365687,0.00062680733,-0.003508479,-0.029392395,-0.004393199,-0.008899423,0.024178058,0.002445007,-0.009067065,-0.010324622,-0.009243056,0.0064677694,-0.003539308,0.0017604326,-0.0026734946,0.0066196737,0.005802322,0.009178676,0.010231048,0.0013065833,0.020848531,-0.0040234816,-0.0036705998,0.005099777,0.00028757117,-0.003811436,0.007785439,-0.006006717,0.005190257,0.0001568742,-0.012854154,0.004288623,-0.00017538824,-0.004485398,-0.0017655336,0.0033025544,0.0047956803,-0.0041849227,-0.014141008,0.008451323}},
      {{0.0036584372,0.0021469716,0.0014131888,0.0017431295,-0.014259008,0.00144561,-0.0046210666,-0.0041682734,0.0058794217,2.7849632e-05,-0.0262289,-0.0061771017,-0.00023391582,-0.024741491,0.0007707998,-0.014256784,0.018747281,-0.0003071244,0.016641917,-0.0024066786,0.012351404,0.00048447592,-0.00908362,-0.0015013446,0.0033792001,0.0031820333,0.0025564134,0.007143909,0.016071072,-0.003838603,0.003917669,0.00071288703,0.003053849,-0.0007823593,-0.004121151,-0.00039980703,0.00027494467,0.0014169216,-0.00060143333,0.015470442,-0.022072928,-0.0017106149,0.003049267,-0.0032329946,0.009093196,0.018946873,-0.0068782363,-0.0033751207,7.11363e-05,-0.0006515553}},
      {{-0.0037947434,-0.0026949686,-0.00620148,-0.00057456695,-0.00034685782,-0.0059329565,0.0059187366,0.002566061,-0.00640334,-0.0009836889,-0.011198533,0.001681462,-0.0029002065,-0.030338462,0.0005483093,-0.0131564615,0.02881554,0.0017138777,0.0081048105,9.442443e-05,-0.0029453658,0.009708992,-0.00027446158,-0.006578796,-0.0008316196,0.003766028,0.023091387,0.0069411322,0.015566103,-0.0013776365,0.010551354,-7.282673e-05,0.0006418347,0.0072605293,0.006798121,0.0020117038,-0.00096294977,0.008638546,0.0035070612,-0.0022989328,-0.0040797717,-0.0019852994,-0.0073588225,0.0028935976,-0.0015718256,0.0065652137,-0.0030353523,-0.006875817,0.002162361,0.0027486265}},
      {{-0.004122285,-0.0001618369,0.0029087646,0.004541664,0.009023281,0.012141493,0.0023055756,0.00094397285,0.008972575,-0.0044449773,-0.005476364,0.0005123249,-0.0013021865,-0.018680802,-0.00078505836,-0.011584811,0.018089855,-8.939196e-05,0.0070592095,-0.0036232206,-0.0012318145,-0.015772752,-0.006548235,-0.0007926249,-0.0021072251,0.0032056444,0.009912497,0.019021058,-0.05049443,-0.009681295,0.0027373703,-0.00041023773,-0.0013512596,-0.000532108,-0.0021867391,0.001054119,-0.002363222,0.00011609658,-0.0033814125,-0.012356835,-0.0025841286,-0.0006848007,-0.00064944307,0.00061166537,0.0060615987,0.017688842,0.0016528218,-0.000659436,-0.0036598684,0.0029490937}},
      {{0.0010506118,-0.0020403974,0.0040380345,0.0016128888,0.010270853,0.005183145,-0.0065234397,0.0042907256,0.014146487,0.0034202565,-0.010883992,-0.002012335,0.0013055556,-0.024996962,-0.0025428128,-0.010669198,0.03662856,0.0072970903,0.005297631,-0.0029267988,-0.012531707,-0.013521994,0.0016714615,-0.0046600383,0.0013133826,0.005500313,-0.0022238216,0.014890282,-0.011366677,-0.004572726,0.0028049054,-0.0016884252,-0.004270021,9.306813e-05,-0.012867882,0.0020944073,-0.005392856,-0.001862081,0.0068717604,-0.010319756,-0.0064034066,-0.00015462143,0.0019846747,-0.0054741986,0.0022216586,0.006876222,0.0069304816,-8.769866e-05,-0.005399942,0.0067886454}},
      {{-0.016030174,-0.0019072994,-0.0002192701,0.0014683185,0.002887301,0.012909122,-0.001201419,0.004010847,0.010166208,0.0008423817,-0.016554315,0.0030220682,-0.0007433331,-0.016646938,0.0015517141,-0.012790452,0.015412843,0.0044898875,0.010994844,-0.0007386237,0.003724849,-0.0022274249,-0.008934866,0.00018790919,-0.00027335048,-0.0011524162,-0.00220029,0.010339284,-0.08190924,-0.011247346,0.0005186445,0.0039375094,0.0009978189,-0.0016635457,0.0027607654,-0.0031625316,-0.0006301784,-0.0010697094,0.0026970333,0.0015737143,0.008318039,0.006752139,0.003263199,0.00011591184,0.0056649125,0.0064931344,-0.0017167501,-0.0036492625,0.0047947955,-0.0041402266}},
      {{-0.026484923,-0.00017976302,-0.012524556,-0.003439976,0.00750761,0.012244871,0.007983928,0.008364515,0.009156387,-0.004502406,-0.012229862,0.004779027,-0.009471317,-0.018615836,0.0031352225,-0.0086401235,0.025677193,0.004041358,0.00028238475,0.0022650068,-0.0025717549,-3.266216e-05,-0.00508929,-0.00037285188,0.0005097615,-0.002484059,-0.0039822897,0.00790669,-0.06692033,-0.010053526,0.005856144,3.0069063e-05,0.0026628345,0.004841411,-0.0006756187,-0.0017748411,5.5341876e-05,0.006510543,-0.004766933,0.0053435406,0.005486734,-0.005467286,0.00042772727,0.0009985205,0.008725026,0.008225518,-0.0010249924,-0.0041816863,0.0044397367,0.00052547024}},
      {{-0.013002351,0.000945914,-0.0046183956,-0.00021961634,-0.002801636,0.009399347,-0.0010617531,0.003811457,-0.00095570605,-0.0014478385,0.0037045656,0.002593091,-2.3724482e-05,-0.017951405,-0.00097172806,0.0019649982,0.014815931,0.0045339717,-0.0072764866,-0.0015487969,-0.005144981,-0.0061202277,-1.2670951e-05,-0.002385174,0.0013774241,0.0023599903,-0.0016175281,0.012684348,-0.010195729,-0.010332632,0.0042380732,-0.0017114658,0.0034187483,0.0024081531,0.00058641355,-1.8001578e-05,-0.004448075,-0.0022894852,0.00155044,0.012616101,-0.005530438,0.0028850466,-0.0016576165,-0.0026724117,0.0034275968,0.01894965,-0.0030414052,0.0015289418,0.012034122,0.0013513328}},
      {{-0.008205042,-2.9114439e-05,-0.0057375114,0.0067067756,0.0024556883,0.012610104,-0.0018996081,0.0014532049,-0.0035204738,-0.0039934707,0.023948545,-0.00090317184,-0.0034612983,-0.020069966,0.00037778754,0.0031785911,0.009394492,0.007963739,-0.011848265,-0.013649291,-0.0052051954,-0.0150210075,0.005035014,-0.0044252635,-0.00048675976,0.005224524,-0.0066700745,0.020217778,0.0024041494,-0.006576019,0.011921581,-0.0027138037,-0.00024090447,-0.0044020335,0.0060442095,3.9345286e-05,0.0046217944,-0.006125966,-0.001522596,0.012591585,-0.0033886826,0.008433457,0.0024829467,-0.004854503,0.0035834925,0.0086172875,-0.004711244,-0.0023547923,0.008710721,0.0025315564}},
      {{-0.010976643,0.0037479075,0.0005045212,0.00094352965,-0.006966882,0.01188356,-0.0025422694,-0.0016776094,0.011107971,-0.00055638317,-0.004047714,0.0013257045,-0.0015940531,-0.020924287,0.000554684,-0.007654511,0.009069588,0.0017515081,0.013179379,-0.00047697467,0.0056127454,-0.019767743,0.015778415,-0.0029011215,-0.003766413,-0.00083542673,0.0022191773,0.006467775,-0.014530789,-0.006014374,-0.0007099664,-0.0018211206,-0.0030442853,0.00034441883,-0.0019445593,-0.0019088979,-0.001254361,-0.0037119794,-0.0015849725,0.0017930806,3.171723e-05,-0.0021678002,-0.001847635,0.0060482817,0.004163036,0.019983007,-0.00046549292,0.0017829307,0.015346675,-0.0036624589}},
      {{0.01222037,0.0042366707,0.008403706,-0.007827305,0.0034210135,0.012637204,-0.00067032874,0.0069405446,0.015828235,-0.005112114,-0.012064991,-0.0009950635,-0.005021274,-0.018268334,-0.0019300078,-0.010731338,0.0034856005,0.016995374,0.005730936,-0.002642018,0.010734212,-0.017204197,0.016777435,0.0027675373,-0.004832222,0.008493822,-0.0027285097,0.011684145,-0.011396696,0.00459437,0.0028264273,-0.0011247338,-0.0042863362,-0.00017622056,-0.0040631616,-0.0025847012,-0.009884843,-0.0035636236,0.0031647722,-0.00082648353,-0.005319199,-0.0061050695,0.004614342,-0.005366007,0.008205769,0.009360765,0.0023235388,-0.001226736,0.014299803,-0.0027644678}},
      {{-0.020374889,-0.0011981634,-0.0032068386,0.0053277086,-0.0022024803,0.016335564,0.00034840935,0.0018358001,-0.0028716172,0.0015082503,0.0010055186,0.00031603995,-0.0055607944,-0.021039385,-0.0007536632,-0.00898971,-0.0013153756,0.002361456,0.0019271289,0.0007487704,0.0020570552,-0.0053118905,0.0028352411,-0.00091053656,0.0016884344,-0.0015553753,-0.004612658,0.0043680547,-0.03847863,0.0010352586,0.0033754823,0.00032694216,-0.0001879104,0.0004231738,0.0010341128,-0.0025201703,9.103019e-06,0.0028005727,0.002147637,0.015726838,-0.0037584342,-0.000512389,3.7764992e-06,0.00038917543,0.0036150136,0.00790677,0.00023904508,-0.0012620403,0.0057385364,-0.0015053807}},
      {{-0.006697037,-0.00033639552,0.0040934035,-0.0022682028,-0.006828893,0.018345235,-0.00047585682,0.0026798036,0.0062191845,0.0029594188,0.021752894,-0.0031913973,-0.00040126685,-0.022809276,0.0008727198,-0.0046103536,-0.0069094165,-0.001874239,-0.0045571453,-0.0037060634,0.005583966,-0.01614796,0.003984441,-0.0028529558,-0.0004955513,-0.00048202742,-0.012932021,0.015650075,-0.013492401,0.0020646884,0.003769075,-0.00036969048,-0.0017596408,-0.0019850128,0.0048144357,0.00031644534,6.88429e-05,-0.0020822382,0.0031349077,0.018223593,-0.012804543,-0.0071506444,0.0029181903,0.004546337,0.00788459,0.00758249,-0.0010322005,0.0007380053,0.010089248,0.0004216483}},
      {{-0.013497019,0.0037410953,-0.0030490197,5.5109656e-05,-0.0043370165,0.002157815,0.0020293929,-0.00010712295,0.0063671027,0.0009837258,-0.00846976,2.0047071e-05,0.0013620817,-0.019806756,0.0013998384,-0.010875983,0.011011506,-0.0019112534,0.0074385456,-0.0019049873,1.1382103e-05,-0.0007698279,0.012295891,-0.0027381666,0.0012592375,-0.0039002695,-0.005861586,0.008305902,0.00069598766,0.00015269294,0.004141798,-0.0027971838,0.003391972,0.0030602457,0.0047892756,-0.0018919687,-0.0020791898,-8.577339e-05,0.0013215638,0.014710944,-0.006321485,0.0034433198,0.0016103573,0.0015568128,0.0059264866,0.00849126,5.0475155e-05,-0.0005926441,0.005759676,-0.00054381916}},
      {{-0.0075696423,0.00076660595,-0.0014355624,-0.0077628726,-0.0005578445,0.0039714715,0.0010886319,0.00039371787,0.0031245293,-0.00043322274,-0.003318668,0.00571855,-0.0037223818,-0.018472977,-0.0051739635,-0.012526568,0.018825429,0.00091762416,0.0010946668,0.005067949,0.0019039845,-0.005220149,0.015523719,0.0045391703,0.007041017,0.00076185184,-0.0071198363,0.010360034,-0.0028767379,0.0010336444,0.006778622,0.0037666946,-0.0012364796,-0.0014435983,-0.0069698915,-3.085839e-05,0.003266181,-0.0015478634,-0.003920058,0.016101182,0.0068880697,-0.002841198,0.0062192674,-0.00067221903,0.0051992037,0.0033554279,-0.0013338801,-0.0033898444,0.0029287972,0.0016802781}},
      {{-0.03201003,0.0013133468,0.0004934152,-0.00044080737,-0.0052964427,0.009197258,-0.0004335458,0.0011238303,0.0034914464,0.0015837876,0.010684631,-0.002561633,-0.0011387836,-0.016994169,-0.00207652,-0.006581889,0.009194973,-0.0021123625,0.003034357,-0.0041380757,-0.006505656,-0.0061997296,0.012391348,0.0006511719,-0.0026236947,-0.0012775019,0.000699799,0.011712838,-0.01147624,-0.0072355997,0.0032321345,-0.0007090091,0.0011776605,-0.0026730706,0.0014432592,-0.0011905812,0.0023574568,-0.0042595086,0.00016467347,-0.0010636378,-0.0046878667,-0.00011912986,0.0011720568,-0.0004966172,-0.0005711067,-0.00055052823,0.0002941573,0.0024795623,0.0059965914,-0.0011286759}},
      {{-0.008645548,0.0004696274,-0.003586809,0.0039134882,0.0025060612,0.004962225,-0.00090139866,0.0043657874,0.008821336,-0.0017433956,-0.0011300577,0.0082084015,-0.00015507553,-0.016134698,-0.0017949826,-0.012240603,0.014415305,0.0067169378,-0.001670283,-0.0025266337,-0.00699972,-0.010351283,0.0093879495,0.006420554,-0.00027650318,-0.0016059241,-0.0003540308,0.0155549245,-0.0009338312,-0.0063078385,0.0026343386,-0.0015497999,0.0074989954,-0.0009539604,-0.0012503625,-0.0042355624,0.00019917345,-0.0015933227,0.004481805,0.00024379663,0.012910691,0.0022217578,-0.0012798919,0.0074646277,-0.0027183043,0.0005584997,-0.0018708572,-0.0054674465,0.002467859,-2.6346152e-05}},
      {{-0.026367158,-0.0012785175,-0.0016035265,-0.0045796284,-0.0010781764,0.006148577,-0.0018165449,-0.0024980647,-0.0005825705,0.004137601,-0.0011431747,0.0027811457,-0.0036749942,-0.0169778,0.0033030785,-0.012229218,0.01187568,0.0052099507,-0.0071372255,-0.0013644164,-0.0055854614,0.0023780472,0.007700122,-0.0019437516,-0.00077902386,0.0052689314,-0.002687629,0.011406903,-0.04137356,-0.005852643,0.003629544,-0.00090299855,0.0002809669,-0.0028194329,0.0020208876,0.0016906578,0.00032615164,-0.0012921953,0.00043942366,0.009082741,0.0061502145,0.003472382,-0.0022036086,0.00015260365,0.001492383,-0.0006373844,-0.00096391974,-0.0019420917,0.0038324161,-0.002945904}},
      {{-0.019537577,-0.0017059795,-0.00093367393,0.004354236,0.005520582,0.010299408,0.004072714,-0.005201899,-0.005155159,0.0017273772,0.019463371,0.0026347842,-0.0026894987,-0.016482683,-0.010049421,-0.005851953,0.0041125803,0.004021306,-0.014770678,-0.004145491,-0.01617609,-0.0073685334,0.014340652,0.004266759,0.0011783721,-0.001841426,-0.0070075346,0.011327363,-0.057776302,-0.0036299948,-0.0014819548,0.0023023027,-0.0010383172,0.0006951595,0.0076841046,0.0026907043,0.0076550725,0.0030199345,0.002745444,0.0055488385,0.00873809,-0.0009651287,0.00075725745,-0.0050877654,-0.00461183,-0.0025099465,0.00026982467,0.005309037,0.00056669663,0.0004688501}},
      {{-0.031699926,-0.00053661846,-0.0034193243,2.81116e-05,-0.0048106564,0.0036237214,-0.003921696,-0.0009276841,0.0028608723,0.0011751611,-0.002668721,0.0006648893,-0.0035359806,-0.016801761,-0.0024405965,-0.014329031,0.0082497,0.0012450049,-0.005552401,-0.0012877021,-0.010989472,0.006207158,0.007006962,0.00060970127,0.0013827368,-0.00055834255,0.0016724594,0.003364481,-0.006124757,-0.008341843,-0.0003601544,-0.0013707387,-0.0023353708,-0.0025729644,0.0003949922,0.00041425182,0.0016328758,-0.0022980964,-0.000644521,0.0033018293,0.0026447608,0.00019044353,0.0025751863,-0.0016058816,-0.0030783175,-0.0043705725,0.0012237435,0.00017688397,0.0009340559,0.00062876975}},
      {{-0.029280057,-0.0031979945,0.0014850467,0.0036675744,0.008657436,0.00093967374,-0.0018387423,0.0020977228,0.0030631702,-0.0016476769,-0.007294017,-0.0010900747,-0.0066565047,-0.014286943,-0.0019417453,-0.024035657,0.0021843973,0.0057424684,-0.016394308,-0.003203866,-0.0059393775,0.01863626,0.0056702644,0.0004533317,-0.0014177563,-0.0010375542,-0.006984768,-0.0014480118,-0.0068140994,-0.0010378254,0.002661019,0.0101286825,-0.0020806107,-0.003796235,0.0014831722,0.005145112,-0.0002916208,-0.0028389262,-0.0026863376,0.011592079,0.0025717097,-0.005664857,-0.0036420904,0.0024368896,-0.007489087,-0.010178953,-0.0028880788,0.00589048,0.0035287966,-0.00050860574}},
      {{-0.02191205,0.0011630284,0.003867506,-0.0007118089,0.0021689623,0.0049983785,0.00073861174,-0.00048813465,0.00097123894,0.0013945015,-0.0016095489,0.0030725726,-6.910929e-05,-0.015440263,-0.0043364665,-0.019834477,0.004529665,0.0024059683,-0.010412268,-0.0020186307,-0.0038215257,-5.751384e-05,0.004495187,-0.002431727,-0.004982961,0.0006931881,0.0046166102,0.004180618,-0.0077996105,-0.0035036288,0.009263711,-0.00066269434,-0.0031075291,0.0018922625,0.0018090174,0.0020848322,0.0038676565,0.0018546821,0.0030908121,-0.011360489,0.0011734132,-0.0025502245,0.00014366343,-5.412065e-06,-0.00014686013,-0.0112005705,0.004077766,-0.0021642817,-0.0069313296,-0.00023402774}},
      {{-0.008412487,-0.0027021463,0.0024732195,-0.004368359,-0.0026269394,0.00231563,-0.011809531,-0.0026925514,0.009954414,-0.004035264,-0.01211207,-0.0057331426,-0.007615104,-0.01271471,-0.005306417,-0.018847305,0.012726803,0.0062463945,-0.0013781337,-0.0063448907,-0.00043610847,0.0031445208,-0.0042380244,-0.006562795,0.007451062,-0.0036232371,-0.0123673035,0.009672731,0.020124516,0.009281982,0.00423331,-0.00525883,0.0067519117,0.0029948761,-0.014391403,0.005925448,-3.1181753e-05,-0.0044701705,-0.0023464481,-0.00523161,0.00019441918,0.0041119657,-0.00033290236,0.0024076304,-0.0012197703,-0.015633134,0.0061209276,0.0072904346,-0.014936965,0.0045362143}},
      {{-0.025506834,-0.0013166801,0.0020685513,0.0010815095,-0.0015942467,0.00041167933,-0.0016171541,-0.0047531696,-0.00545376,0.0014391367,0.01916712,-0.00070238265,0.00024716186,-0.01654091,-0.0017550581,-0.011142229,-0.005657784,-0.0018057664,-0.007153462,-0.00077254587,-0.013462737,-0.0070606684,0.009386705,0.0012265474,0.00013782698,0.00062709546,-0.0019425518,0.0014359383,-0.022224763,-0.005135097,0.0029164348,-0.0009737699,-0.0040288935,-8.418349e-05,0.003925602,0.0011735233,0.000798473,-0.00033984787,-0.0016837127,-0.0030640834,-0.0032684812,0.005083753,-0.0005972575,-0.0054707555,-0.009242011,-0.0016444696,-0.0008611817,0.0041704695,-0.010469857,0.0033791056}},
      {{-0.016635112,0.000484729,-0.0023212133,-0.00227689,-0.006281733,-0.005629534,0.006798953,0.005007945,-0.0016923341,-0.004228463,-0.003354808,-0.0006102991,-0.0013661125,-0.019908767,-0.0013316129,-0.026664088,-0.0018286725,0.005845555,-0.0075260014,0.0058106715,0.003329477,-0.001492954,0.011900814,0.008869185,-0.0012083371,-0.00058957393,-0.0005294756,0.0046477313,-0.009382358,0.0107961865,0.001299513,0.0010731745,0.0030770677,-0.006419738,-0.0037093128,-0.0005617543,0.001822422,-0.0047209715,-0.0009471018,0.0012692661,0.014538233,-0.0070070676,-0.003166656,0.003877887,-0.0025948496,-0.011016412,-0.001748781,-0.0007383836,-0.0071314,-0.0029785912}},
      {{-0.027231537,0.0008515121,0.00034752968,0.0027496389,-0.004555225,-0.0016980713,-0.0008003804,-0.00043808646,-0.0008048951,0.0034386637,-0.0059490292,-0.00373927,-0.00057529,-0.014450231,-5.3124622e-05,-0.019638242,0.0031761513,-0.004056177,-0.0042178733,2.3372802e-05,-0.0030949388,-0.0050108265,0.00798791,-0.0031006201,-0.001321128,-0.001287404,-0.0023800703,-0.0016523807,-0.02483101,-0.0015683402,-0.0037721966,-0.003475113,0.0021820893,0.0032477316,-0.000964123,-0.0027594925,-0.0023015772,-0.0008868601,0.00028079544,0.0030053058,0.0066599,0.0019646585,-0.0011912928,-0.0005495531,-0.0014908044,-0.009708008,0.0030728586,0.0017351969,-0.00030977686,0.0023884089}},
      {{-0.027622607,-0.0039605573,0.002561458,-0.0018067434,0.009985053,-0.007577945,-0.002612069,-0.0039819074,-0.00068665185,0.0025926705,-0.008340764,-0.003282293,0.008304425,-0.016139256,-0.004171127,-0.020565633,-0.002015556,-0.006393044,-0.005649536,-0.0008223526,-0.005019911,-0.011120921,0.0025600307,0.0019571944,0.001410669,-0.0069754715,-0.00932048,-0.0073340773,-0.01836813,-0.003675579,0.009754356,0.002284174,0.0038638776,-0.0049876715,0.001978348,0.0045576445,-0.0046723024,-0.0038115184,0.0011443446,0.0012064658,0.0008021791,-0.0017084108,-0.00611795,-0.00028170433,-0.009612834,-0.01200532,-0.002000723,0.0038351372,0.0016930429,0.002540295}},
      {{-0.026853845,-0.00036139623,-0.0011788568,-0.0075105317,-0.004619469,0.0001927187,-0.0030876417,0.0019847453,-0.005061338,0.0036717206,-0.0003601011,0.0007618823,0.00054601533,-0.01805149,0.0011090513,-0.019808382,-0.0033991896,-0.0031262112,0.005114848,0.0011322943,-0.011373978,-0.0113237025,-0.0008619244,-0.004096123,0.00040024516,-0.0016534309,0.009766894,0.0027519746,-0.0030466935,0.0009353896,0.0023641973,0.0015125286,-0.0011637124,-0.0012048313,0.0007108275,0.006043975,0.000545663,0.0027298352,-0.0007538179,-0.0067016943,0.0011118575,0.0014825542,-0.0013301069,-0.0009115536,-0.0037703963,-0.0052830665,0.0020771988,-0.0021865373,-0.006648584,0.0015451527}},
      {{-0.01402845,-0.00410609,0.0012680634,0.007080886,-0.0035152922,-0.004661152,0.0006219367,-0.0026645246,0.001972691,-0.0032314877,-0.012753349,-0.004104714,-0.00019864188,-0.01870291,0.0041255117,-0.022776645,0.0013917125,-0.0047922917,0.008257489,-0.0060620443,-0.008957459,-0.004158019,0.005022816,0.00091783237,0.0073510506,-0.0025232793,0.0051078983,-0.00061760854,-0.02241059,0.0037036918,-0.0010670914,-0.00324297,0.0011842551,-0.0004739553,0.0013346256,0.005702875,-0.0071796007,-0.007964812,-0.0043088975,-0.0016985222,0.0062427935,-0.0014572551,-0.0055428827,-0.0031818142,-0.006275354,-0.0032916951,-0.002999787,-0.003606537,-0.013025334,0.00036735035}},
      {{-0.018576395,9.443796e-05,0.0021595883,-0.0007203127,-0.0013887621,0.00079595693,-0.0007411053,-0.006604827,0.0015153664,0.0034013174,-0.00078294484,-0.0040541016,0.0025707444,-0.015390413,0.0036574733,-0.016977284,-0.00053867395,0.00020388047,-0.0047823843,-0.0036207137,-0.00012966419,-0.013454504,0.01090196,-0.0021172625,0.002976435,-0.0015682592,-0.0008158305,0.0020038858,0.0004952902,0.0064159306,-0.0012437186,-0.002935838,-0.0007394348,0.00079680304,-0.005878503,0.00039011243,-0.00025058797,0.00057096686,0.0006598402,-0.004177524,-0.0008136698,-0.0043755495,0.0008446179,-0.0030762278,-0.0014644588,0.0022684303,-0.0007656968,-0.0034095733,-0.0046375124,0.00038488055}},
      {{-0.023232529,-0.00059184537,0.0016430488,0.0036855652,-0.00055397826,-0.0024937263,-0.0070512574,0.002699881,-0.0027372576,-0.0035408505,-0.009320657,-0.009050004,-0.0043382025,-0.015193047,0.004593655,-0.027897993,-0.0020871984,-0.0019206788,0.0055295634,0.0046635284,-0.00080248783,-0.008945665,0.0014592478,-0.0009312325,0.0042278585,0.00459917,0.00029750596,-0.00087568193,-0.0028541712,0.007710584,-0.0035146277,-0.011164119,0.00011431818,-0.0009837593,-0.0037836328,0.0013337168,0.0028211602,0.0016082708,-0.0054362263,-0.00019770852,0.0133537855,0.0036923569,0.0023603183,-0.000367683,-0.0024670574,-0.008368301,-0.005437269,0.007047648,-0.0019102347,-0.0008095976}},
      {{-0.021588925,-0.00089305756,0.0025703206,-0.0012400597,-0.0054102098,0.001847195,0.003553974,-0.00057186274,-0.005031093,-0.0013333141,-0.0026635518,0.005317083,0.004496525,-0.013277787,-0.0013316121,-0.021807712,0.0020744195,-0.004986717,-0.007618763,0.0019059355,-0.010097831,-0.0059534605,0.008774267,5.6425193e-05,-0.00047377867,-0.0012524588,0.0060436726,0.008625128,0.01270349,0.0060472335,0.0003364928,0.003548785,-0.0038986271,-0.0021911473,0.0011378655,-0.00012911091,-0.00039274638,-0.00318945,-0.0015860162,-0.0041521788,0.005249091,-0.0018387678,-0.007337536,0.004001628,-0.004864692,-0.007757466,-0.003842952,0.0016824161,-0.005072399,-0.002572285}},
      {{-0.027009517,0.0054901754,-0.0031763362,0.0009605,-0.008249471,0.001453083,-0.002200643,-0.0041262987,-0.0119980145,0.004340931,0.00042813356,-0.0021305075,0.0032801516,-0.014895425,0.005960493,-0.020925011,0.0022171056,-0.0048073814,-0.0023609363,0.002238708,0.004871333,-0.011113684,0.009893766,0.00230005,0.003717099,0.0051131253,-0.006217899,0.011884347,-0.0039957976,-0.005676085,0.0017518221,0.0025307466,0.0052694227,0.00032781044,-0.0014142384,0.0033270004,0.00067838543,-0.0041216314,0.00414766,0.014231536,0.01786047,-0.0067205383,-0.0038145492,-0.002257851,-0.005134023,-0.017852664,0.001763522,-0.0023417939,-0.0055679353,-0.004414718}},
      {{-0.022624264,0.0017478614,0.0003294641,-0.0017863119,0.0026204349,0.015295556,-0.0019358232,-0.0021419758,-0.0009917201,0.0024236806,-0.0025569948,0.0014754039,0.0021494792,-0.012941134,-0.0028861822,-0.012841661,0.0008443234,-0.0016502708,-0.000927717,2.4164343e-05,-0.0033737172,-0.0037804504,0.0099659925,0.0023319966,0.0019848375,0.00074855867,-0.0073125474,0.011496768,-0.022164471,-0.0050252555,-0.007706003,0.000427462,-0.0033477196,-0.0006775818,-0.0015984467,0.0036412238,0.00023972488,-0.0014879092,-0.00026590505,-0.0017711627,0.0077258297,0.0041476786,0.0013410415,-0.0070919143,-0.00742882,-0.013170714,0.0012006239,0.0035567954,0.0037002591,-0.0035378875}},
      {{0.0058128396,-0.0028231752,0.007603533,0.0021688957,-0.007911435,0.014592459,-0.0034761368,0.0012877306,-0.0040463163,-0.0015005002,-0.012365512,8.627116e-06,-0.0015196751,-0.012828411,-0.00011688138,-0.011329728,-0.0038748411,0.0071124774,-0.0046875826,-0.0037091856,-0.004936274,-0.0130981505,0.0077630533,0.0012456374,0.0028599098,0.005208561,-0.007893563,0.013914375,-0.01818483,-0.0026847415,0.00099224,-0.0020897707,0.0037780232,-0.008584487,-0.010751324,0.002628028,0.0036613592,0.0035248874,0.00636514,-0.00865958,0.007094049,0.008725574,0.0014021994,0.0065108156,-0.0011135392,-0.001126181,-3.857056e-05,-0.0055769617,-0.020560957,0.0005011101}},
      {{-0.009764531,0.0009618514,-0.0026947367,0.00025644968,0.0010939877,0.009817467,0.0041356683,0.0059058773,-0.0032586195,0.0042239507,-0.010169859,0.0024646502,-0.00018157273,-0.012213633,0.000336145,-0.013226778,-0.008972137,0.002160019,-6.6446846e-06,0.004428668,-0.0020794806,-0.0008534908,-0.007987245,-0.004326066,0.003852098,-0.00051169586,0.0036838565,0.009214559,-0.0039060873,-0.00044627747,0.0018240815,0.001946774,0.003875948,-8.972218e-05,-0.0006672488,0.0023209453,0.0004489236,0.00048069158,0.0010796061,-6.639357e-05,-0.0016717884,-0.0019984304,0.0014473458,-0.0023231579,0.00047295517,-0.0072824145,0.0011839183,-0.0012386977,-0.01106248,0.0010490589}},
      {{-0.013767985,0.0002924165,0.0016630285,0.00016024873,2.9398303e-05,0.018097857,-0.008148561,-0.0009808106,-0.012843161,-0.0029367278,-0.004928635,0.0016398935,-0.004384945,-0.0051139058,0.0027729683,-0.013154021,-0.012927083,0.0010907971,-0.011832428,0.0035893465,-0.0059618126,-0.006899969,0.0023122332,0.004632242,0.0027841637,0.0021349674,-0.008865737,-0.00093568495,0.01053617,0.008870982,-0.004729718,-0.005910082,-0.0035161823,-0.0006067637,-0.0077925483,-0.00030341218,-0.0039055457,-0.0019781513,0.0011864947,0.005635614,0.0025054598,-0.00293722,-0.0005227452,0.0012900295,0.0031763976,-0.0129523,-0.0014556784,0.00049609167,0.0012009938,0.0033648869}},
      {{-0.01880389,0.0021974395,-0.0031637817,0.0009172173,-0.004814123,0.010344871,-0.004467227,-0.0023001106,-0.008538549,0.0028366903,-0.006018642,-0.0057774694,0.0027284212,-0.0065014265,0.0010897203,-0.005937894,-0.00901173,-0.0028170364,-0.0018271967,0.00092786277,0.0012955008,0.00042184285,0.0032896164,0.00075373304,0.0011075833,0.0012423134,0.00087754277,0.007956198,-0.019615393,0.006294043,-0.0043796296,0.0004014881,0.0035722982,0.00214006,0.00069767685,-0.00015053237,-0.0020682332,-0.002266743,0.002382684,0.00049070735,0.007970957,-0.0019177949,-0.0022650461,-0.003931502,-0.0014181155,-0.007414773,0.004280318,-0.0010566275,-0.002264785,0.0015167233}},
      {{-0.02047188,0.004837542,0.00874195,0.007371368,0.0056024534,0.0069653955,-0.005242523,0.0029373288,-0.005632363,0.0028136957,-0.0048179766,0.0067372536,0.0036616158,-0.0070565324,-0.00079091865,-0.0032397571,-0.009973709,-0.0031446626,-0.0021659152,0.005523629,0.0023242915,-0.009336924,0.008326781,0.00032942128,0.005945534,-0.0019651821,-0.009381691,0.009184651,-0.018934868,0.001131666,-0.010072369,-0.004284331,0.0060718814,-0.001303254,0.001760972,0.0033720399,-0.003604821,-0.002341745,-0.0013570767,-0.010018657,0.002210785,0.0039303023,0.0023646813,0.00021800493,-0.0052978676,-0.0059598414,-0.0015157621,0.0026212288,0.002043369,-0.00521243}},
      {{-0.0050411564,6.567972e-05,0.0008070435,0.0006058578,-0.0054448373,0.007161323,0.00016838238,0.00027873338,0.00077031995,0.0015836887,-0.0049574687,0.0015807871,0.00022989158,-0.0050832834,-0.0030026261,-0.010399658,0.008497218,-0.0040812413,-0.003338693,0.0010502465,-0.0014615558,0.004018846,-0.0037291765,0.002148971,-0.00011259636,0.0017964641,0.0005019677,0.012726213,0.018586347,0.001679026,-0.0069657667,-0.0014958851,0.00013811258,-0.0042975703,0.003269942,-0.00030250935,0.0010525745,-0.0025400054,0.0016873167,0.0039677983,0.00900709,0.0028351443,-0.0035030532,-0.002700491,-0.005311539,-0.011350676,0.0035664935,0.0010731657,0.0014360975,0.0020837109}},
      {{-0.00988689,-0.004770459,-0.0053843064,-0.0015295838,-0.010927859,0.010209735,-0.006458426,-0.0072321207,-0.0046311,0.005555062,0.0045404155,-0.00810228,-0.0005524213,-0.002500732,-0.00030485066,-0.009407981,0.007860741,-0.0033927627,-0.0016046738,0.0031953973,-0.004581675,-0.013470586,0.0017138689,-0.00045958697,0.0076928693,-0.005263239,-0.012198614,0.019371117,-0.012961326,-0.0058358167,-0.00279424,0.00026746246,0.0031572934,-0.00022651753,-0.007994009,0.0020003216,0.0001838559,0.0014589042,0.0033014247,-0.00028290405,0.016962586,0.005002769,-0.0010709593,-0.008089162,-0.0067669507,-0.012767836,0.007302091,0.0014021422,-0.0019186536,-0.0020006392}},
      {{-0.012855426,-0.0022904042,-0.00019341274,0.0027041172,-0.0031370535,0.010962604,-0.0035291207,0.00026600758,0.0020026923,-0.00063161744,-0.0013279963,-0.0048292815,0.0024097087,-0.0035481513,0.00080967514,-0.007576921,-0.004566602,0.0048723742,6.114638e-05,0.00092966243,0.0030644683,0.0056280885,0.0028431606,0.0023840105,0.00038212253,0.0025612675,-0.00035829737,0.014605482,-0.008060122,-0.006105849,-0.0029467382,0.0022793962,-0.00057414983,0.0042077056,-0.00197085,0.001600005,0.0006426634,-6.6516375e-05,0.003630336,0.0015569488,0.0049612653,0.00040501446,0.0009986821,-0.0008761816,-3.4861543e-05,-0.016770205,-0.0035887756,0.00054970034,0.0034465105,-0.0015329024}},
      {{-0.025212672,0.0020242755,0.0061689466,0.0036074503,-0.0064484463,0.015151241,-0.0047874493,0.0006153826,0.009145005,1.500238e-05,-0.0026696958,-0.0040273,-0.00016312288,-0.002672322,0.0039951876,-0.009876244,-0.010095722,0.0014761066,0.00908377,0.0017080342,0.008347793,0.0054143756,0.009955638,-0.006412759,-0.00010107153,-0.003355488,-0.009837813,0.011383192,-0.0328392,-0.009327512,-0.010491556,-0.0022178805,0.00033081102,0.002944159,-0.0009069984,-0.005600323,-0.0010216886,0.0031520128,-0.004717424,0.0041061924,0.0068700677,-0.004607963,-0.0011265404,0.004269767,0.0018843766,-0.021433463,0.003508234,0.0050756433,0.013967693,0.0018129137}},
      {{-0.016244125,0.0028399213,0.0010562367,0.00010174746,-0.00020610262,0.01688057,0.00035532616,0.003521219,0.010242026,-0.003366842,-0.005443697,0.0028463942,-0.0020280746,-0.0048039206,-0.00017583837,-0.011116104,-0.018242301,0.004422514,-0.0060794693,-0.002153959,-0.0038387617,0.0022903304,-0.0031164659,0.0013995336,-0.0015817921,0.002222474,0.0031261952,0.009873188,0.009064183,-0.00084317074,0.001112728,0.0025480252,-0.003624752,-0.0017717105,-0.0006057878,-0.00411382,0.0039666425,-0.00061696686,0.003092871,-0.010086009,0.0049927454,-0.0018636679,-4.917333e-05,-0.0013299083,0.0016144023,-0.012214883,-0.0015331404,-0.0022287436,-0.0015486907,-0.0011672347}},
      {{-0.01807602,0.0021457854,-0.0006431319,-6.1708706e-06,-0.0067719575,0.016592292,0.0065597994,-0.00033199752,0.0201385,-0.0043746163,-0.011318849,0.0029200905,-0.005610247,-0.0010026395,0.0002480807,-0.013562717,-0.030831626,0.011317071,-8.071512e-05,-0.0047547393,0.008059859,0.008066927,-0.002394352,-0.00034936683,0.0010341686,-0.0022195422,-0.0054243677,0.0042382707,-0.008610091,-0.0013211905,0.0019218882,0.0026582933,-0.0009968544,-0.0035539907,0.000119801814,0.00073359045,0.0066827713,0.006176537,0.0012989902,0.0015344727,0.0123086665,0.002445486,0.002768958,-0.0014951013,0.0010060013,-0.019676108,0.004669394,-0.0013037756,-0.0025913303,-0.002715315}},
      {{-0.017469523,-0.004078384,-0.001713347,0.0010723636,0.0058927964,0.015383899,0.003654017,-9.5981326e-05,0.00029921165,-0.00020451873,0.0065730014,0.0047626137,0.0004318804,-0.005716056,-0.0066857086,-0.011551834,-0.007164625,0.0024022008,-0.01283506,-0.000815776,0.00028809466,0.0019290313,-0.0041707978,-7.85068e-05,-0.0017676392,0.0016602468,0.00035152162,0.01340863,-0.013853759,-0.003167123,0.0016040114,0.0042154854,-0.00026297025,0.003625013,-0.0005908262,-0.0025635825,0.0022022673,0.0017868042,0.0013362558,0.0120559,0.013821982,-0.002552432,-0.0017546833,0.00011196702,0.0027030539,-0.013601054,-0.00411831,-0.0030574482,-0.005925986,-0.00095126824}},
      {{-0.023185028,-0.0035950644,0.0071979347,0.00044123476,-0.0039846045,0.026518181,0.004539494,0.0026605432,0.002242757,-0.0041726655,0.0145456325,-0.0021167113,-0.0011752849,-0.010316672,-0.00035197535,-0.012761665,-0.0113093145,0.0060938885,-0.0012945686,-0.0021078547,0.0070320056,-0.003497065,0.0009617482,-0.0037506786,0.0044310037,4.7512316e-05,0.011109454,0.011933593,-0.015752666,0.0014550604,0.002313865,0.0021243626,0.0021318444,-0.003305291,-0.0032750878,-0.0012601176,0.0035760151,-0.0039667725,0.00086827116,0.010545987,-0.0030230402,-0.0041648317,0.0069537647,0.0027583747,0.010002566,-0.007496827,-0.0013132251,-0.0015607784,-0.0033261185,0.003678319}},
      {{-0.004621112,-0.000938527,-0.0016940779,0.0020921843,0.0083034355,0.015994383,0.0059549967,0.0013379809,0.0006955582,-0.003553649,-0.005398288,0.000637286,-0.0009879064,-0.0072389888,-0.00030899685,-0.011349934,-0.015995923,0.0034449736,-0.0033582984,-0.0016307933,0.0004948376,-0.002949738,-0.0065393364,-0.0007516905,-0.0013288807,0.0010799704,0.0007552157,0.016516784,0.024374392,0.0072137355,0.0044821436,0.00019599234,0.00030036274,0.0039380547,0.0029488697,0.0004958862,-0.0016701719,0.0040009217,0.00064755767,-0.0039162925,0.0025626034,0.0016128509,-0.0005309894,0.0022146052,0.0045878617,-0.0025532795,-0.002228172,-0.004983744,-0.020424612,0.0021310681}},
      {{-0.008952383,0.004970409,0.001789557,-0.0055042296,-0.012310378,0.014617246,-0.0010337792,0.0007199492,0.004183681,0.009718677,-0.011251709,-0.0023340655,0.0038077838,-0.011021707,0.002448215,-0.02059527,-0.008936599,0.0064898105,-0.0094875805,0.0040249536,0.019775787,0.009657869,0.0007817313,-0.010181686,0.00018196902,-0.0010479504,0.002098946,0.01285327,-0.016020512,0.010547255,-0.002143479,-0.005338181,-0.00094582187,0.0010329768,-0.009199536,0.003770393,-0.0002421095,0.0014722823,0.0024412544,0.017803062,0.002268052,0.005781841,0.0038220636,-0.006663944,-0.00092863024,-0.012596618,0.0016517207,-0.0017617039,-0.009885721,-0.0023002385}},
      {{-0.019024123,0.0047892486,0.001582198,0.0018646001,0.009904766,0.009893253,0.0071887127,0.0024569298,0.0077512544,-0.0035760293,0.039362766,-0.0006646909,-0.0013249004,-0.0065349187,-0.0009505025,-0.0023111554,-0.013850384,0.00056038465,-0.0065965652,0.0034392907,0.0062028314,-0.00957081,-0.005140848,0.00031587892,0.000580198,0.00036906905,-0.00044304956,0.014310397,0.018115643,-0.0018774517,0.003444414,-0.00014394325,0.00040882034,0.0016343049,0.004511039,0.0045371316,0.001503347,0.001543368,-0.0037859934,-0.0006511486,-0.0014357871,-0.001183845,-0.0025879815,0.0022969497,0.0043068556,-0.004887191,0.0025720552,-0.0021756233,-0.016493784,-0.003075608}},
      {{-0.016036978,0.0015619635,0.00023223009,-0.0029198648,0.010717207,0.014552688,0.0036299617,0.0035165101,0.00598003,-0.0017452389,0.022838337,0.0031307798,-0.007298486,-0.0044527547,-0.0012949958,-0.00771324,-0.010790137,0.0008012798,-0.004829181,0.00030013552,0.0113530075,-0.015116562,0.009321171,0.009421271,0.0051464513,0.0017491658,-0.014367341,0.0149714695,-0.0068775746,0.005696479,0.003525499,-0.00093541475,0.0042454987,0.0021053082,0.0066838493,-0.009362251,0.002289242,0.005609066,-0.00703934,0.0057599586,0.0035723955,-0.0017592418,0.0005872468,0.010839053,0.0073325215,-0.008605865,-0.009107914,0.0008450017,-0.007858017,-0.001676432}},
      {{-0.030036572,-0.00054610695,-0.002180343,-0.003153232,0.006014542,0.010057921,0.0038026676,-0.0021439905,-0.00031064427,0.0010363753,0.018730886,-0.0032458394,-4.6376546e-05,-0.010277005,-0.0010232286,-0.013209494,-0.005268511,-0.0023029076,-0.00046165465,0.0024907142,0.0072288546,0.0008109868,0.004740052,0.0053004916,-0.0005278066,-0.000100909274,0.0025485072,0.00793464,0.018732963,0.016607,-0.0022811117,-0.0013712363,-0.0003884845,-0.0010710085,-0.0008550526,-7.449605e-05,-0.0014265997,-0.0018734363,-0.0009241208,0.0007626775,0.004581074,-0.0020286927,-0.0017530154,-0.0029119884,-0.0020681843,0.0059597036,0.0010132741,-0.0018830628,-0.004059722,0.0013253142}},
      {{-0.03210073,-0.007453536,-0.0072889216,-0.0014831868,-0.005205941,0.01997808,0.0007355765,-0.006028217,-0.0035980593,-0.0041530896,0.018735941,-0.0017277458,0.0066511305,-0.012593335,0.0055450676,-0.013523276,-0.009980596,-0.0076785167,0.0065424563,0.0043477663,0.014698555,0.0039632297,0.004078885,0.00092873006,-0.0035720842,-0.0066512525,0.0034602443,0.012778755,0.00014810453,0.009204627,-0.0068361694,-0.0036407595,0.0019430635,0.0007238849,0.004676161,-0.0036994694,-0.0017576048,-0.0009265177,-0.0026737999,0.010755778,-0.0036632356,-0.0067289313,-0.00430563,0.0038425394,-0.0029618044,-0.005152912,0.009518238,0.011127401,-0.0010571693,-0.0042811576}},
      {{0.012612044,-0.001891231,-0.004548513,0.00083164044,0.0016472343,0.014150629,0.0006767071,0.0020527747,-0.012868119,0.0012293182,-0.01519952,-0.0013209713,0.0020846804,-0.008177221,0.006028324,-0.0075658862,-0.00735595,0.00024933144,0.006745964,-0.0008052516,0.010057301,0.0018168262,0.002766407,-0.005966216,-0.0040073683,0.0017489356,-0.009084506,0.009127405,0.016811138,0.014076987,-0.0042211325,0.00020500144,-0.001792117,-0.000968257,0.0011624147,-0.0054423003,-0.0026064985,0.0017157028,0.0017276,-0.010712234,0.019627433,-0.0031120905,0.0027400497,-0.0031549751,0.0026800518,0.0110563245,-0.00024842008,0.0040268884,-0.01577793,-0.0005096868}},
      {{-0.0017168586,-0.008581513,0.0004947567,0.0015173387,-0.00040421248,0.011861103,0.0031835986,0.007029264,-0.0058956956,-0.0038874014,-0.003908801,-0.0072086193,-0.0008585958,-0.008028673,0.011301275,-0.012675862,-0.0023355656,0.0061485143,0.016943647,6.107754e-05,0.0113695385,-0.0014139918,-0.005790857,0.0027526098,-0.008228104,-0.001362415,-0.018865414,0.00813175,-0.02058028,0.0060621644,-0.012951902,0.010198016,0.002816564,0.002576309,-0.00030498172,-0.005635013,0.007949966,-0.0014695344,-0.008350829,-0.01770438,0.012032333,-0.0029471393,0.0036894914,0.0047435663,0.007963244,-0.007918074,0.00029147966,-0.008105292,-0.01624355,-0.0038260445}},
      {{-0.011917132,0.003971552,0.0047535626,0.0048445044,0.014031587,-0.011908015,0.0062899776,0.0017725653,0.008095316,-0.0076657967,-0.0109727895,-0.002837042,0.00082505035,-0.007979469,-0.008527002,-0.034291815,-0.0067217033,0.0036006426,-0.020167857,-3.6368045e-05,0.0041498905,0.010687852,-0.004276633,-0.0036182432,-0.0009730969,0.0002626397,-0.022852827,0.0028455516,-0.0044585257,0.021833891,0.004458349,-0.0036823137,0.003342915,-0.00047058467,-0.00081894815,0.00042044616,-0.0050132535,-0.00034683585,0.00061191915,0.0030327928,-0.0057539963,-0.0016095701,0.003640337,0.0007543955,0.0014075704,-0.0064750677,-0.0018307762,-0.0010739766,-0.01167644,-0.0031422684}},
      {{-0.011784562,-0.005884172,0.0021868045,-0.002857407,-0.0050890725,-0.008260804,-0.0039979704,-0.0019456638,-0.029305795,0.0050905137,0.025921054,0.0015088865,-0.00024353717,-0.013005789,0.0037625064,-0.02808303,-0.0017200703,0.004120376,-0.013491453,0.0009657097,0.01313921,0.008333273,0.012622993,-0.0008299194,-0.00022465842,-0.0051581208,-0.027392624,0.008214301,-0.00732286,0.021313136,-0.012247847,0.0018674157,-0.0022544984,-0.0009898555,0.00048129124,-0.0004390222,0.006252703,0.006464095,0.004458899,-0.010472525,-0.012693719,0.001518691,0.005382866,-0.0013636557,0.0016117906,0.011160469,-0.001711678,0.0048044454,-0.021039803,-0.006373981}},
      {{-0.0097344285,-0.0007003965,-0.0024440058,-0.0020276906,-0.0007888772,-0.017854594,-0.0031576855,0.001829174,-0.00053342123,-0.0021623133,-0.010461138,-0.003375984,-0.0018472914,-0.009941832,0.0001090865,-0.03100883,-0.0036849477,0.01057034,-0.031406473,-0.00282967,0.014461557,0.012922717,0.0042301286,-0.006002129,-0.0024205314,0.0028265202,-0.014589627,0.004538854,-0.016816648,0.024126109,-0.0067956327,-0.0016421287,-0.003229666,0.0030918014,0.0013281736,0.0011993647,-0.006685851,-0.0011276839,0.0018634764,-0.00036248585,0.0012980434,-0.0014525392,0.00062221935,0.004687465,0.0092130685,0.0043944498,0.0044024726,-0.0026823746,0.011799875,0.00068250694}},
      {{-0.009406571,0.0056035668,0.00026415227,0.002411092,-0.00016867826,-0.017406957,0.0039381185,0.0068774386,0.005018472,0.00072304206,-0.01676397,-0.0035749543,0.0015792389,-0.010293054,0.009624566,-0.032338098,0.0039029217,0.0047697593,-0.022635298,-0.006383347,0.032102864,0.010928565,0.009580517,-0.0046730046,0.0024880124,0.012074533,-0.013739023,0.0012996566,-0.004906905,0.01190561,-0.027072398,0.00035889944,-0.008101662,-0.0027706095,-0.004220512,-0.0023329093,-0.0013280316,-0.0018575775,-0.0002285785,0.0033703477,-0.011297513,0.0056363265,0.0043396163,0.010627583,0.0013596461,0.0036755893,-0.0017005465,0.0023792174,0.013621877,0.00020670591}},
      {{-0.0122428145,0.00093732955,-0.002945947,-0.00077787123,-0.0012098916,-0.009883736,0.003726741,0.00031038583,0.0034696565,-0.00042008114,0.020324258,0.0051950156,0.003247424,0.0018317151,0.004969384,-0.02653379,-0.014792471,0.003662998,-0.011434161,-0.0011083359,0.000988397,-0.006542335,0.00070583273,-0.006885955,-0.0017988806,0.0016777874,0.0020075776,-0.0051438315,0.003380706,0.03449037,-0.0004374416,-0.0018702176,0.00040274454,-0.00080947526,-0.003831576,-0.0018337626,-0.0009776842,-0.003621643,0.0024254147,-0.024516974,-0.0027371517,0.0018529391,0.0017047753,-0.0003900658,-0.0002826821,0.021116452,0.006448874,0.0019114185,-0.005869107,0.0037353009}},
      {{-0.0106833475,0.0022358212,0.008070335,0.004738863,0.0030780397,-0.013574745,-0.0035144587,0.00068178424,-0.0073966305,0.0043201363,0.012900879,-0.0013487455,-0.0007788568,-0.008573231,0.013043438,-0.03217465,0.0023876063,0.0026789787,0.00057680666,0.0059119915,0.018729364,-0.007360965,0.016604094,0.00012033471,0.0034827804,0.0070539047,-0.010196808,0.00733593,-0.017529005,0.0071886163,-0.022116201,0.0026297506,-0.0044159526,-0.0012253659,-0.0024158629,0.0028849521,-0.002576907,-0.002174891,-0.0020919146,-0.009608663,-0.0045768605,0.007321884,-0.0012622186,0.0066222446,0.0024895982,0.013060831,0.009828196,0.003254363,-0.00052054814,0.00070592813}},
      {{-0.015742552,0.00046352236,0.00091847003,-0.0005471388,0.008456499,-0.009313504,0.008409305,0.0010295595,-0.0060478533,-0.0024727262,0.010062064,0.004064617,-0.003936796,-0.0039883154,-0.0002537227,-0.02900555,-0.033151034,0.006939049,-0.01278494,0.0012519796,-0.0017369294,-0.0054541174,-0.00394932,0.0015256986,-0.00030057903,0.0035588914,0.009870836,0.0006283927,-0.007143798,0.012509072,0.0007677761,0.0005122648,-0.002742216,0.0045356997,0.000525853,0.0019744665,0.00054235704,0.003966415,8.166939e-05,-0.023444122,-0.0032009261,0.0026805056,-0.0004311735,0.0060629086,0.010602441,0.013759985,-0.0041723032,-0.0059297993,-0.012628494,0.002752997}},
      {{-0.026869057,-0.0030651253,-0.01000189,0.0041241003,0.015799744,0.005962709,-0.006110516,-0.0030738192,-0.006038807,0.006631401,0.019007709,0.0014670723,-0.0017059112,0.003662578,0.017619453,-0.022160681,-0.025799263,-0.0019779638,-0.0115140695,0.006659585,0.0012260779,0.0003935565,-0.010043792,-0.003361603,-0.00279474,-0.002461709,0.0074352697,-0.0073210206,0.01364479,0.026220959,-0.01614146,-0.0012711349,-0.010508541,0.0011952621,0.0013024004,-0.00876762,0.0022835017,0.0057319845,-0.00906929,-0.03239657,0.008200942,0.007442376,-0.004306262,-0.0018833635,0.0030590764,-0.029079832,-0.0016327086,-0.0053063263,-0.027072804,-0.005049882}},
      {{-0.023748746,0.0014817821,-0.004126954,0.001692054,0.008011732,-0.003115828,-0.0046936455,-0.0060509057,0.0023322105,-0.0026450327,0.0039534345,0.0016508651,0.0006127624,0.006976196,0.00027181825,-0.021995347,-0.026450453,0.0073672114,-0.0070701,-0.002273044,-0.010439519,0.0027535332,-0.00591528,-0.00045872564,0.004378824,0.0011312269,-0.009114545,0.0016155434,0.010486444,0.012297733,0.006578612,-0.0011290255,0.0029933236,0.0014463121,-0.00029818155,0.0029104054,-0.0029909469,0.0006478163,0.002032688,-0.007561558,-0.008841573,0.002475733,0.0020908394,-0.0006115783,0.0041850857,0.0025536157,-0.005357107,0.0019225068,-0.005001428,0.0037312019}},
      {{-0.022845589,-0.0064604785,0.0033386222,-0.0038322597,-0.0020371804,0.0048225443,0.00091352605,-0.0045259376,-0.00916243,0.0047374666,0.01674982,-0.0022559946,-0.004600551,0.0058337618,0.0031308415,-0.017934635,0.0033056058,-0.0017327815,-0.010914328,0.0031676553,0.007071531,-0.01625944,-0.0014822031,0.00027589424,0.00038418564,-0.018602515,0.010425504,-0.010355499,-0.0022078475,0.015488702,-0.00960587,-0.0023881746,0.004501762,-0.0028111276,-0.0050138975,0.009299351,-0.003442558,-0.007969114,0.008454548,-0.010830241,6.849224e-05,0.0045691165,0.0031319684,-0.0022288903,0.0036429553,-0.017851358,0.0039389264,0.003922319,-0.008305992,0.0051963083}},
      {{-0.03610259,0.0010264146,0.0058718715,-0.007248899,0.0037880265,0.0025477465,0.001871783,0.0016473593,-0.009644752,-0.0050976076,0.019247955,0.0030534402,-0.0005019733,0.004594298,0.0053965193,-0.013131888,-0.02027452,0.0053245723,-0.00071076397,-0.0013968067,-0.010928693,-0.0049134293,-0.007740144,0.004355345,-0.0064459457,0.0026027565,0.005731231,0.007485244,-0.004495046,-0.00059593195,-0.0004536129,0.0074331155,-0.0032739823,-0.0022485321,-4.0467068e-05,0.00065947627,0.0023384925,0.00070871745,-0.0029020556,-0.017044593,-0.019024378,-0.0014366752,-0.00019122494,0.0029358948,-0.00048020296,-0.0021548385,-0.00080273475,-0.005778378,-0.008338082,-0.0044811745}},
      {{-0.01701683,0.00010854407,0.0029722485,0.00221068,-0.0043829056,-0.0054713394,-0.00037193805,-0.0002342394,-0.012852076,0.009531592,0.012207515,0.00183542,0.0023346022,0.009733522,0.008109103,-0.012261806,-0.012321611,0.0037546456,-0.0070565813,0.00084342656,-0.019060973,-0.011995389,-0.003821626,-0.005727342,-0.00010700748,0.0010480203,0.0051296493,-0.000467022,-0.010590506,0.0199439,-0.003735936,0.0042882,-0.0053614727,0.0016961943,-0.0035314898,0.0027029016,0.003617974,-0.0065827733,-0.0015828483,-0.022426076,0.002338399,0.00033381005,0.0042666323,0.010139326,-0.0072454526,0.00021504812,0.012977641,-0.004802975,-0.015494974,-0.008538861}},
      {{-0.0145807015,-0.00040703843,-0.0037240274,-0.001832968,0.008139801,-0.0012259745,-0.007400882,-0.002915127,-0.0025137926,0.0023701284,0.010676891,-0.0017032387,1.605933e-05,0.008448887,0.0014859966,-0.017825479,-0.02036192,-0.0033449824,-0.0043506054,-0.002343032,-0.016284581,-0.004628752,-0.0030185916,0.0047162273,0.0012189425,-0.0016544231,-0.003437738,-0.0024867107,0.010275556,0.0076753874,-0.00964827,-0.004587648,-0.0061455276,0.0009286386,0.0003333352,0.0022392983,-0.00023032923,-0.0064656646,0.0014329989,-0.017702892,-0.02284172,-0.0017672435,0.00064195425,0.0031989657,-0.0072079767,0.0013389116,0.0013536068,-0.0030426441,0.0068724095,-0.006042543}},
      {{-0.019013887,0.0026245674,0.00032707292,-0.0037829299,-0.004391596,-0.0011424472,0.00080346916,-0.00012631089,-0.01934873,0.0051044617,-7.999662e-05,0.006975696,0.0003995846,0.005392931,0.00048542712,-0.024421426,-0.02795604,-0.008969064,0.009725473,0.013568541,-0.004937438,-0.0060639647,-0.013829944,0.006597336,0.0021092666,0.0023207334,0.013699429,-0.0037502637,-0.00090192835,0.025846647,0.00010476928,-0.002168295,-0.0006706527,-0.00010857003,7.969566e-05,-0.0014483565,-0.003670161,0.004610282,-0.005190031,-0.015367232,4.484517e-05,-0.0016374742,9.9224795e-05,0.0042602946,-0.0011024107,0.00014539444,0.0062581142,-0.006419087,0.005904268,-0.0019054762}},
      {{-0.00387039,0.0016675687,0.004474503,0.0055152327,-0.0055356305,0.00061939564,-0.0047294977,0.00029060253,-0.014921933,0.004130973,-0.005646976,-0.008334751,0.0015650517,0.012401458,-0.0004843642,-0.023140837,-0.014152045,0.00029643747,-0.0026014566,-0.002256234,0.002664957,0.006036135,-0.005208474,-0.0018599062,0.0055273483,0.0011268697,-0.0026128471,-0.008769132,0.0019063257,0.012498662,-0.0072824834,-0.0072744815,0.002948383,-0.006548974,-0.0061547724,0.0013579938,-0.00057308876,-0.0038223765,-0.0003774978,0.0026533771,-0.012997317,0.012976463,0.0043933843,-0.004766513,0.004164277,-2.1335554e-05,-0.00022526852,0.0049155573,0.0009173532,0.0022530588}},
      {{-0.00555048,0.0028098505,0.0033789878,-0.00751005,0.003551837,0.00069921574,-0.012588461,-0.0057900315,-0.014251977,0.008825583,0.0035093722,-0.005865885,0.0018842478,0.012598809,-0.0041772583,-0.010456283,-0.017430786,-0.0003190711,-0.0049852342,0.004262303,-0.0030388413,0.005635436,-0.00613193,-0.0024332912,-0.0010980126,-0.003757975,-0.0062316554,-0.018155865,-0.015787957,0.02841056,-0.006442752,-0.0008567193,-0.003098843,-0.00031777984,-0.0020560438,0.00053875544,0.0016012675,-0.0040842746,0.0019406348,0.005604203,0.0050500524,-0.00064287643,0.0010190399,-0.002139593,-0.0012608184,-0.00790362,0.0020594497,0.010711507,0.013689982,-0.00030083922}},
      {{0.01828792,-0.0016146323,-0.0028096838,0.002120835,0.013602074,0.024819432,0.0058673997,0.0038575674,-0.008977625,-0.0029495915,-0.014418799,-0.0027074476,-0.0018556918,0.016782276,0.001180901,-0.009453607,-0.020192469,0.0035335002,0.0006536309,-0.0056373244,0.0057259104,0.021635614,0.0017944961,-0.0051462743,0.000110556124,-0.0016541594,-0.0013399564,0.0025365436,-0.0050150165,0.008891369,0.008140207,-0.0057220194,0.0034979645,-0.0042702844,0.0035457602,0.0055097127,0.0021331273,-0.0028536927,0.0009551441,0.0040958985,-0.017001895,-0.0032941292,0.0027660949,-0.0017672605,0.0043662293,-0.008615554,-0.00043268324,0.00040830756,0.00782876,-0.0036405623}},
      {{0.01637787,-0.004936309,-0.0024149085,0.0022264367,0.0102766855,0.015033988,0.004366281,0.00021832237,-0.023796156,0.0018764253,-0.0127430195,-0.0026331218,6.0973198e-05,0.011088589,8.5717154e-05,-0.017733607,-0.010986586,-0.00727922,0.0038862766,0.0092969425,0.009934562,0.02304878,0.0050749844,-0.0014534534,-0.004152959,0.009221387,0.0065070293,-0.010018062,-0.006980381,0.026155762,-0.0030046941,0.0010948939,0.004782136,0.0041104704,0.008691066,0.006010603,0.009125866,0.007422692,-0.0063483715,-0.0066679865,-0.013207649,0.0060694544,-0.00016100572,0.0019716395,0.0012049486,-0.010059685,-0.008837082,0.0031436093,0.00801159,-0.010410517}},
      {{0.014352434,0.0019792533,-0.0031940124,0.0007389245,0.02371731,0.006723492,0.004093599,0.006908244,-0.023803065,-0.0022229697,0.0013724624,0.0027451199,-0.0011378495,0.013830091,0.00058739877,-0.023404894,-0.0102637885,0.005444415,-0.002343251,-0.0050696484,-0.00016333254,-0.0011250665,0.004912284,-0.0018839829,0.00040802156,-0.0024543405,0.0112986835,-0.015944649,-0.0048309965,0.018541157,-0.0018867108,-0.0020013999,-0.002796853,0.0016614619,0.0010775615,-0.00042014162,0.00034511174,0.0012168203,-0.0012870003,-0.016878638,-0.017530378,-0.0029907522,-0.00035318968,0.00593521,0.0041213725,0.0069349566,-0.0027887784,0.00012163977,0.018982055,0.0028627703}},
      {{-0.01371623,-0.0027061242,0.0044729956,-0.0051576486,0.032519147,0.015983203,0.010179752,-0.0031995126,-0.023473753,-0.0013437456,-0.010272096,-0.009089736,-0.002717517,0.0028230762,-0.00088375754,-0.016148234,0.015290161,0.0024566618,0.012630401,-0.005082423,0.03353241,-0.009886164,-0.015391185,-0.0030561758,-0.0023781655,0.006686532,-0.004368704,0.009715183,-0.0092326505,-0.02954402,-0.019931491,0.0008499155,0.006061358,-0.0041327393,-0.0021055418,0.0042804857,0.00020467644,0.0003805039,0.0057362295,-0.013388146,-0.011768004,0.011770414,-0.0024355983,-0.008799886,0.013794144,-0.026089214,-0.0016488901,0.0078655165,0.0011355006,-0.005314111}},
      {{0.014154479,0.0025001888,-0.004245692,0.0010971943,0.017472107,0.012107311,0.0011000701,-0.005487599,-0.004638043,-1.22428655e-05,0.00090665754,-0.0054045273,0.00043461105,0.01656583,-0.0029534537,-0.02255456,0.0024266823,0.0002101084,-0.008760301,-0.0043504257,-0.013983372,-0.002360149,-0.00084076676,0.0007217235,0.0019976282,0.0024443371,-0.006505297,-0.007427586,0.0022883734,0.005994539,-0.0032765681,-0.0064369403,0.0030429696,-0.0021137006,-0.00276508,-0.0039660283,-0.0009579028,-0.0042834,0.004074735,-0.024619032,-0.023851957,0.00013955992,0.0044977055,0.00018064004,0.00033495235,-0.0039580134,-0.0040069325,-0.002886623,0.0024367461,0.003702634}},
      {{0.005813232,0.003922587,0.0012959908,-0.0019307841,0.012586731,0.0010836422,-0.013528552,0.0056700315,-0.009256267,0.0011553763,0.010751368,-0.006715083,-0.0033383772,0.01386003,0.0005400078,-0.031824898,0.011749235,0.009937313,-0.0049077403,-0.0071119713,-0.01370542,-0.0047655525,-0.0052327933,-0.01111368,0.007116133,0.0039523146,-0.01534073,-0.010221971,-0.020193312,0.011496691,-0.0042500994,0.0076266006,-0.0011365778,-0.0013359633,0.0070864293,-0.00457962,-0.002187864,-0.0076930784,0.0021841235,-0.0070382045,-0.006871426,0.0035826492,-0.0004447533,0.005497721,0.005233482,-0.0056056776,0.0051455875,0.007580213,0.005323716,0.0023878787}},
      {{-0.011411437,-0.003807832,-0.00076093536,-0.0041257534,0.016104568,0.016145453,0.0039085303,-0.0012553723,-0.009326753,-0.0042301477,0.01400133,-0.0035100232,0.00089502556,0.019767309,0.005230743,-0.02454713,0.0052913832,-0.004454941,0.013142267,-0.00068862544,0.0006958069,0.018244551,-0.013474888,-0.0030887602,0.001440505,0.0016080313,0.004290578,-0.019890798,-0.0015164367,0.008610124,-0.008615107,0.00015165648,-0.0011563366,0.00017657747,0.0040540206,-0.002683683,-0.0005472067,-0.0046354383,0.0011420118,-0.012331631,-0.016715812,-0.00029308724,-0.00054231717,0.00658825,0.0004393302,-0.007059701,0.003133574,-0.0056323516,0.0135951,0.0052866335}},
      {{0.0020407578,-0.0006587257,0.005092816,0.0042352355,0.009590023,0.008485435,-0.0061849323,-0.0012723507,-0.015061307,-0.0050186734,0.0066753486,-0.0060783136,0.0012954383,0.020061405,-0.0039255493,-0.019077145,0.02643183,-0.0017329571,0.011966618,0.0046517327,0.002009368,0.013641499,-0.009638226,-0.005219111,-0.0013704101,-0.004343843,0.00091303256,-0.0136386715,-0.011153541,0.0033075067,-0.01976093,-0.0053635794,0.0027977154,0.0021672312,0.0051561273,0.007319964,-0.017486462,0.0047134045,8.829127e-05,-0.0019570803,-0.01554952,0.0063050594,-0.0052254926,-0.006971695,0.00338708,0.011133775,0.0046836296,0.0062073953,0.017105162,-0.001876065}},
      {{0.06459554,-0.0020507686,0.00061869994,0.0021941953,0.003269441,0.006306136,-0.0042176316,3.9082133e-05,-0.027764427,-0.00034813845,-0.012993309,-0.0011370368,-0.0070532737,0.02523955,-0.0024144321,-0.023349024,0.012375564,0.006090857,0.006838911,-0.0035161038,-0.019239973,0.0034614624,0.019286335,-0.0035981229,-0.0016946484,0.0043679946,0.0002993821,-0.030955046,-0.0054287687,0.05477554,0.0071006063,-0.0018778738,-0.003603894,0.00044369875,-0.003997308,0.0039181877,-0.00079733774,-0.0027970523,0.0029894435,-0.008277324,0.007958083,-0.0015621899,-0.003554471,-0.0008285683,0.0020149867,-0.009219598,0.0014515098,-0.0061575286,0.004222852,0.0032139702}},
      {{0.0057893735,-0.004733973,0.0014265577,0.0050990894,0.02266289,0.011364651,0.0040045804,-0.0012685023,-0.0021178757,7.081344e-05,0.0051228353,0.003974116,-0.003423224,0.021615848,-0.01095962,-0.030866586,0.02186978,-0.0046969703,0.021979176,-0.006646356,0.0032708521,0.00985548,0.0069251265,-0.0043841945,-0.0019351146,-0.011664348,-0.000718011,-0.026441963,-0.003064788,0.019928373,-0.011149618,-0.0015348358,0.0064065973,0.006271897,-0.0041914457,-0.0069375164,0.002019684,0.0044822213,0.0038155057,-0.007870437,-0.017742636,0.0025207277,0.0051688957,7.983669e-05,0.0042800945,-0.0074763126,0.0025420066,0.009895213,0.019111576,0.00045585856}},
      {{0.013435632,-0.003930445,0.0003672665,0.005521931,0.02389031,0.017764566,-0.006995505,0.0027061442,-0.0023875423,-0.00023166006,0.0073372745,-0.012035423,0.003937956,0.018046156,-0.01029564,-0.02130527,0.0049407063,0.0025642233,0.020226471,-0.0028624402,0.0066796574,-0.0015330018,0.00788814,0.0031599835,0.0066383895,-2.7520377e-05,-0.0067108786,-0.0154247405,-0.014919677,0.010069412,-0.010080531,-0.00774052,0.0010159634,0.0044826483,-0.0041008247,-0.0029858851,-0.010567774,0.0023550808,-0.004513448,-0.0052666115,-0.014208258,0.0005495284,-0.00056286994,-0.007594193,-0.0003446239,0.00010212016,-0.0033890419,0.007998794,0.009733191,0.001970426}},
      {{0.027440907,0.00037708372,-0.0063790875,-0.008540725,-0.00029858798,0.019795597,0.0035775194,0.0047838828,0.0057863,0.0025418832,0.0031242708,0.0013894936,0.006240343,0.024612319,0.00081154035,-0.02384598,0.017160425,-0.002857241,0.020968542,0.006310592,0.0007125273,-0.007987208,0.017893733,0.011349583,0.0020376644,0.0033276896,0.009176514,-0.023310242,-0.005431304,0.034557022,-0.0091906255,0.007509295,0.0046851304,0.0016204651,0.006273009,-0.0018102343,-0.0020773592,0.00033053706,-0.0051314733,-0.0020936157,-0.008596563,0.0014409656,-0.0018239659,-0.0021718007,0.003750811,-0.009320998,-0.0070859557,0.0050139525,0.012663199,-0.0048735687}},
      {{0.010855313,0.0034142116,-0.00586336,0.002181592,0.0037686343,0.021481516,0.0016993039,0.004328952,-0.006936741,-0.000540496,-0.008991773,0.00387015,0.00036390344,0.024501758,-0.003774319,-0.022184137,0.00057252945,-0.0014190646,0.016634682,0.0026546915,-0.0058719935,0.009581098,0.002501778,-0.0038300531,-0.005771314,0.00082750473,0.0050532254,-0.02130062,0.0014787565,0.019889977,0.00020383912,0.006998244,0.005322804,0.0017150246,0.006097375,-0.0024474214,0.0033636582,-0.00025438523,-0.0018809817,2.6606185e-05,-0.010969962,-0.001009136,-0.0022208402,0.0041851974,-0.0013450205,-0.014528558,-0.00323137,-0.006103194,0.017437948,0.00017215333}},
      {{-0.006896972,-0.011891503,0.0034227946,-0.008468119,0.0114748385,0.007472824,-0.0031562543,0.0034038257,0.016394965,-0.0062305788,0.018070834,-0.0008661504,-0.0013204293,0.02279755,0.0030668315,-0.015146041,0.0016079574,0.0060304413,0.020261552,0.0019592773,-0.0023366448,0.0042390474,-0.0004328263,-0.0013500587,-0.0078128865,-0.00076558464,0.0076910914,-0.019307004,-0.0022847434,0.018591711,-0.0032080298,0.006376467,-0.0022824474,-0.0023499765,0.0150376335,-0.002790314,0.009580201,0.004006811,-0.0017993808,-0.0046710963,-0.022239957,-0.0063058785,0.00036044608,0.0034318564,0.0050698686,-0.0019422165,0.0064844107,-0.003746621,0.019524787,-0.0072782217}},
      {{0.045712806,0.0045985132,-0.0007486006,-9.577781e-05,0.002768144,0.019241638,0.0010866019,-0.0048898743,0.002374083,0.0012957763,-0.00673554,0.0037891932,0.00063688395,0.022442248,-0.0026729882,-0.017977715,-0.0022712774,-0.0017923878,0.006157722,-0.0003509435,-0.0027905137,0.013401604,0.009809253,-0.004968414,0.0048293285,0.0011295064,0.005358689,-0.019932628,-0.0025253324,0.034317795,-0.00049712777,-0.00086146005,0.001352317,-0.00041708327,-0.0065847645,0.004829513,-0.001279417,-0.0040814327,0.0033446234,0.0069557056,0.0007086333,-0.0023095594,0.0032023254,-0.007892941,0.0021458268,-0.00915015,-2.6603358e-05,0.006252845,0.0062629315,0.0010219548}},
      {{0.015373041,-0.007345453,-0.0025342796,-0.008573751,-0.012357391,0.02600268,-0.006224665,0.0009721228,0.0068085217,0.0046861554,-0.0032442592,0.002531304,-0.0027144742,0.021349305,0.0034522933,-0.021504518,0.006863642,0.004735448,0.0055722496,-0.007856671,-0.0023516642,0.009964153,0.0060122204,0.0017775295,0.0077178683,0.0019283487,-0.0017382869,-0.02572859,0.0275978,0.012789565,0.0062688966,-0.005741127,-0.004279312,-0.001474443,-0.011632153,0.0026524807,-0.003927708,0.0022329788,0.0114520285,0.01706707,-0.01521294,-0.0038729769,0.0017668625,-0.00079279405,0.0035741709,-0.0101328455,0.002551277,0.0031384625,0.01350789,0.006632421}},
      {{0.023977246,-0.0016332547,0.0009496971,0.0029135363,-0.008175493,0.02061553,-0.00032809778,0.0012684788,-0.0029094035,0.0027686188,-0.00013332586,0.0023710302,3.0131618e-05,0.016116621,0.005704245,-0.013101821,-0.0006785942,-0.0044217883,0.020447003,-0.0022183277,0.010753249,-0.0024537714,-0.0017331737,0.0036875876,-0.00445904,-0.00067328714,-0.0045270794,-0.0090710735,0.009555051,0.00035591866,-0.002305256,-0.005982569,-0.0012658265,0.0009840705,-0.0043640533,-0.0027167788,0.0002124353,0.0054774783,-0.009013294,-0.0028934842,-0.018320428,-0.0010307435,0.0025945464,0.001606216,0.0030126518,-0.017581567,-0.0013106224,0.0021214955,-0.0063848407,-0.0020405329}},
      {{0.019642463,0.0008172643,-0.0065519754,0.003992141,0.0005049542,0.021942057,-0.0045743943,0.0006993388,0.004200786,-0.003433258,0.0053293095,-0.0028884604,-0.00475872,0.01788249,0.0041824146,-0.0121255955,-0.007944101,0.0070554935,0.025411328,-0.0073147584,-9.80202e-05,-0.006992064,-0.0064985473,-0.0009803597,-0.0058881156,-0.0065227738,-0.0053564184,-0.015441327,0.011859723,0.014699384,0.0035422835,0.009892469,0.0044750413,-0.0059889103,0.00096090947,0.0055857836,-0.006183845,0.0035134577,0.0044838153,0.0053411582,-0.012931265,0.0014495741,0.0063066063,-0.00790856,0.009862132,-0.025023734,-0.002178441,-0.0046370705,0.0009887516,0.0019072297}},
      {{0.014741849,-0.00043520794,-0.002964208,-0.00013666997,-0.011391965,0.02485978,-0.00089496607,-0.0030116208,-4.866081e-05,0.0036930214,0.007692893,-0.0032648218,-0.00056095555,0.016088635,0.0011735193,-0.00650787,8.14091e-05,0.0054253335,0.010851585,-0.0051048943,0.0058041066,0.0011201128,-0.013338183,-0.00039103752,0.0051152525,0.0016292537,-0.0026150218,-0.0050065303,-0.009799141,-0.00014656356,0.0022755032,-0.0018467088,0.0071502887,0.0034487587,-0.005228207,0.00091652997,0.0016340669,-0.0011379836,0.0011316119,0.015995106,-0.010897523,0.0018137126,-0.0051340777,-0.0031863141,0.00047407259,-0.009234425,-0.0013096731,-0.0010452677,-0.0061191395,0.0012030058}},
      {{0.017329736,-0.0021503197,-0.0031382143,0.007852739,-0.018284682,0.027277375,-0.002737634,0.0026117712,-0.00026054197,-0.003460402,0.010242596,-0.005658871,0.00029281346,0.019566702,-0.00091360655,-0.00744954,0.0020497974,-0.0012057333,0.0017310936,0.004663929,0.012266717,0.00036463095,-0.031122549,0.0040505365,-0.0027116365,-0.00068694475,-0.00021403634,-0.0106810015,0.00079292693,0.017690178,0.0050119716,-0.00040950987,-0.0015976703,0.0076689813,-0.006168827,-0.0011887532,-6.172261e-05,0.0065651834,0.006002581,0.023512684,-0.009614804,0.00046376037,0.0024691508,0.0013618147,0.009625779,-0.0074755317,0.0030780062,-0.0051395814,-0.008112487,-0.002764476}},
      {{0.0127444705,0.0017004458,0.006200004,0.010298724,-0.0039851437,0.025458897,-0.00530188,-0.00019902868,-0.01040292,-0.0032376626,0.008047269,0.0039472785,-0.0067625702,0.017099125,-0.0025461323,0.00067454745,0.0051860525,0.011527661,0.0014043114,-0.0064626615,0.008255198,0.0042082393,-0.009809828,-0.006876217,0.0011136576,0.0011250277,-0.0019052587,-0.004103731,-0.008336868,-0.0019745112,0.008812382,-0.00089838135,-0.0029396839,-0.000964028,-0.0055836937,-0.0020107904,-0.0019507193,0.0013742945,0.004535567,0.010381777,-0.009934259,-0.0020269498,0.0019979847,-0.0034245048,0.013760813,-0.001518657,0.004523776,-0.0055416715,0.0019006743,-0.0009952779}},
      {{0.01811366,0.0049666576,-0.004185219,-0.0018763529,0.0039517707,0.019604547,0.008323803,0.0067733894,-0.0030712415,-0.0012315406,0.0046775555,-0.0008235067,-0.0013668882,0.015437589,-0.0063543185,-0.0050573205,0.013599037,-0.001302229,0.01390683,-0.0027544992,0.0022689744,0.00013916973,-0.015490536,-0.0025588637,0.0047841608,-0.0013807254,-0.008040956,-0.007312417,-0.011548357,-9.217789e-05,-0.00064135686,0.010231763,-0.00062797195,-0.0033368417,0.0038708588,-0.0038929768,0.0022133556,-0.0034608843,-0.0115655605,0.0043528485,-0.004423593,0.0013204436,0.0070379726,-0.0061652185,0.011365748,0.0035504934,-0.0030336909,-0.0044887965,-0.0014608852,-0.006351394}},
      {{0.01931148,-0.0036627923,0.0021327988,-0.00081692595,0.007802819,0.021309132,0.0041862978,0.006142066,-0.0004073207,0.0019350125,0.015220037,0.0030721223,-0.006851075,0.016238904,0.0019455758,-0.0034688176,0.004493221,0.013056835,-0.008985163,-0.0070063975,0.0038867048,0.003055081,-0.018017016,-0.0044376035,0.0011879699,0.0042515555,0.0005440149,1.9718657e-06,-0.019263176,0.0075060027,0.006214805,0.00050398614,0.0045646895,-0.0023680725,-0.006318605,-0.0011679134,-0.0032225794,0.0017185631,0.0054551754,0.013946859,-0.020855544,2.0205385e-05,0.005444083,-0.008214247,0.008835633,0.002163693,0.0042655705,-0.00059057504,0.0077033886,-0.004676869}},
      {{0.019884279,-0.006527833,-0.0050554806,-0.00076092914,0.012200557,0.01880987,0.008044317,0.010197595,-0.005608672,-0.0035544224,-0.0012090524,-0.0031673212,-0.0040222965,0.014451595,-9.1951646e-05,-0.008860611,0.007293126,0.011155001,0.00039443912,0.0020890608,0.006559379,-0.00270855,-0.008679606,0.003387892,-0.0053205243,-0.002416377,-0.005040299,-0.0014970752,-0.010637376,0.016040904,0.0037807534,-0.00017216164,0.00072283583,0.0029171116,0.0056113093,-0.0023690083,0.003687899,0.006887992,-0.0020111955,0.022138188,-0.0025642216,-0.008119028,0.002169922,0.0047944873,0.010390494,-0.00019032588,0.0073084715,0.008113957,0.0027000858,0.0046980404}},
      {{0.010466418,0.0021455341,-0.0015321847,-0.0009950798,-0.002366477,0.023566972,0.00083459564,0.0016909204,0.0010868926,-0.0010156683,0.0054997415,-0.0033360997,0.0040867003,0.0130927395,0.0014182827,-0.0018190718,0.0052524623,0.004664023,-0.0005070562,-0.0005253238,0.0058004963,-0.004134941,-0.00399417,-0.0052523944,8.881496e-05,-0.00066083216,0.0023539474,0.0057867183,-0.0035527823,0.0003906638,0.0026383586,0.0028723239,-0.0018584594,0.0005843887,-0.0032960563,-0.0025933904,-0.0006838836,0.00023280217,0.0015218441,0.008433404,-0.0069803195,-0.0025369788,-0.00021391021,0.00039828292,0.0019014154,-0.014563116,-0.00044077216,-0.003945006,0.0075784824,0.0014530994}},
      {{0.00788566,-0.004627982,-0.0017990121,-0.0031520454,-0.0039759846,0.015577473,0.008335423,0.004481629,-0.0007523243,0.0018304052,0.022185547,0.0004227928,-0.0009459115,0.010419863,0.0033012999,-0.0031575358,0.0049041533,0.0062667797,-0.002645546,-0.006207901,-0.0015208935,0.003672483,-0.018227622,-0.0044319867,-0.0026973467,-0.001048765,0.002879803,0.00030441047,-0.0063866754,0.0077874186,0.0020853037,0.004324519,-0.0046976875,-0.002395516,0.005726721,0.00068797317,0.0036582036,0.003970097,-0.0052533327,0.01344284,0.00014062785,-0.009187068,0.002882106,0.0069648023,0.0019484453,0.0011141369,-0.012108732,-0.0072056404,0.00705176,0.002201501}},
      {{0.027311424,-0.0043667103,-0.00199111,0.0041046767,0.00096976606,0.0147726545,-0.004335242,0.003419852,-0.0014777172,0.002478869,0.023055995,0.004301596,0.002078265,0.00989193,-0.005624532,0.002335021,0.0047828346,-0.003471595,-0.0011473816,0.0003318316,-0.007845521,-0.015525453,-0.00722621,0.00087407173,0.0053673335,0.0016343936,-0.00020780672,0.011446492,-0.019345751,0.010916186,0.0028886218,-0.008005503,-0.004725578,-0.0034313225,-0.0025761242,0.00070397597,-0.0010776158,-0.0019125241,-0.0058102557,-0.0042588376,-0.010664168,-0.00042458499,2.8554923e-05,-0.002090294,-0.004853203,-0.012261129,0.0018915837,-0.0027130917,0.0072508194,0.0032623985}},
      {{0.015843842,0.0043516373,0.0072373287,-0.0014261288,4.6734604e-06,0.010807618,0.003119671,0.0044620824,-0.003285256,0.0055394205,0.039274655,0.0007371538,0.00067604374,0.009529101,0.0035083846,0.013225532,-0.0038806538,0.009522571,-0.0047766096,0.0012496145,-0.014167584,-0.017959457,-0.012698726,0.0014647428,-0.004317999,-0.0036658184,0.0037607336,0.0106034875,-0.025630817,0.01651489,0.0060008327,0.007149177,-0.005125699,0.0031675522,0.005407154,-0.0032973944,-0.0027145017,0.0038193187,-0.0040366026,-0.0058028256,-0.011209565,-0.01613451,-0.008695398,-0.00016718455,-0.0074896845,-0.006648917,0.002141768,-0.015084398,0.007407161,-0.0016464712}},
      {{0.029907638,0.00051533885,0.0012162009,-0.0043244427,0.009193966,0.01624828,0.0016748508,-0.001112583,0.00058214716,0.003931895,-0.003183567,0.0012926665,-0.0014037379,0.0087562,-0.0014876663,-0.006573505,0.004979659,0.004819714,0.0026794793,-0.0031219213,-0.013042784,-0.010172532,-0.0024570758,-0.0022212185,-0.0012120053,0.0019108806,0.0039429925,0.01794449,-0.004510802,0.0129167605,0.004344078,0.00027862148,-0.0026606391,-0.0009197312,-0.0044765132,0.004531791,-0.0048964783,-0.0010495859,-0.0011281312,0.005883219,0.0024201632,-0.0016934017,0.001899419,0.0015968565,0.001071658,0.003912456,0.0022292542,0.0027326748,2.6180911e-05,-0.0020090817}},
      {{0.021847406,0.010536194,0.010042063,-0.009455789,0.0032273068,0.01958721,-0.0021000952,-0.012641809,0.0015396023,-0.00051019964,0.009688609,-0.0005146455,0.0068577044,0.0066984682,0.0010159762,-0.008286239,0.005577291,-0.00932154,0.015785534,-0.0026661349,-0.004958101,-0.0059424946,-0.002261029,-0.004223128,0.0018753797,0.003979209,-0.015788017,0.017170828,-0.010472428,0.005706522,0.0031734162,-0.00892727,0.008563785,-0.0033628661,-0.0088601895,0.002909837,-0.006426372,-0.00087223214,0.006571757,0.0005070953,-0.00038015802,0.007541773,-0.003540804,-0.010673722,-0.009388959,0.013642722,0.0044068503,0.009022276,-0.014594442,0.0024976751}},
      {{0.0077014817,0.00648585,-0.0014355341,-0.0006320126,-0.0046294704,0.024915751,0.0023201746,0.0026894133,0.009928416,-0.0053102924,0.00381836,-0.00090490945,-0.0003332953,0.008648346,0.0014284006,0.0033847997,-0.008309085,-0.0028953417,0.017806929,-0.0024614553,0.0034121757,0.008550542,-0.015938172,0.003317385,0.0008602318,0.00069595844,-0.0052324026,0.015027974,-0.017056447,-0.0005631784,0.0054307883,-0.00038118532,0.0043893545,-0.0012802129,0.0061342022,0.0017482738,0.0012239282,0.0038685873,0.00011439604,0.014998819,0.019877467,-0.0048412676,5.0537747e-05,-0.0009357316,-0.0018798535,0.01845824,-0.0045838454,0.00082322373,-0.009862442,0.0031096404}},
      {{-0.013090481,0.004337762,0.002295271,-0.0010460729,-0.014863607,0.025103198,0.00613796,-0.0050651063,0.015977617,0.005067917,0.01569202,0.002526314,-2.006067e-05,0.011415996,0.00025473948,0.003768746,-0.012004305,-0.0070368103,0.007824546,0.014263901,0.012588166,0.0018655725,-0.010617778,-0.004636664,0.0023658175,-0.0040664608,0.01172946,0.0027962672,-0.012112497,0.0046753394,0.0070313145,-0.00085206836,0.0006126024,0.0062027313,-0.0044355737,-0.0022843769,0.0056551425,0.0044702394,-0.0018020399,0.02357825,0.008788307,-0.01402073,-0.0007112065,-0.004738947,0.0063212845,0.030439736,-0.006622459,0.0041029975,-0.009630435,-0.0020053207}},
      {{-0.0022621132,-0.0015434267,0.0027173017,-0.0015581785,-0.008372327,0.011762233,-0.00093054096,-0.003528813,0.0025276768,-0.00044141195,0.018545812,3.396712e-05,0.00033434984,0.0040232553,0.0013396429,0.0021073793,0.013510748,-0.0011304244,0.0020893775,0.0039607715,0.013014739,0.0071070306,0.0012475087,0.0027477664,-0.0016693257,-3.327827e-05,0.005124178,0.02603742,0.0075748633,-0.0032203507,0.003909861,0.00051109196,0.0029977856,0.0014643663,0.004536883,-0.0012712477,0.0023290974,0.00092218065,-0.004726793,0.010973918,0.009529781,-0.00012021134,0.0046237824,-0.0016729537,-0.00017282608,0.01550063,0.00063282164,-0.0032560485,0.010944855,0.0018706303}},
      {{0.016906595,-0.017210674,0.00012943977,0.0056521394,0.015829308,0.0052155447,0.010017214,0.0041708555,0.019076966,-0.002951498,0.03017319,0.002180835,-0.0065502375,0.0029169407,-0.0080696335,0.0055749887,0.0071162633,0.01200232,-0.0140629625,-0.0014161033,-0.009042279,-0.0030150732,0.0010896059,-0.0011778228,0.0045894017,-0.007510423,-0.0023013235,0.024742542,0.040051386,0.014202762,0.0139427595,-0.0070807086,-0.0002913818,0.011619413,-0.0074012997,0.0019590736,0.0042953542,-0.0065552387,-0.0034355493,0.00084694463,0.009060425,-0.0026040399,-0.005873353,0.0035792438,0.010246834,0.019176109,0.0024167765,-0.0054054726,0.012324989,0.007946525}},
      {{0.025120234,-0.0034496686,0.002658553,-0.0018930397,-0.0024295547,0.0127131445,0.0031517835,0.0050585154,0.004335791,-0.0015089711,0.036427397,0.001920909,-0.003847886,0.005918968,-0.00030348334,0.021323252,0.011531218,-0.005205323,-0.0016588017,0.0024409383,-0.003140048,-0.009707136,0.005411892,0.0045971363,-0.006533328,0.0004070778,-0.0039781844,0.029025385,-0.01129204,0.0035572406,0.0075598145,0.0014262177,0.00022739723,0.00023595875,0.0066303033,-0.008386801,0.0019184769,0.0023718083,0.0015618433,0.00040228452,0.020256072,-0.008329956,-0.0028940372,0.0049115247,-0.0037373474,0.016443672,-0.0007279693,-0.0025037173,-0.0058964337,0.0029609948}},
      {{0.04225234,0.0054538827,-0.00072581857,0.002881436,0.008735678,0.010676471,-0.0072605214,-0.006258646,0.012267441,-0.007825657,0.025356023,-0.0013464148,-0.0023081987,0.0042617624,-0.002615566,0.016368713,0.0057930727,0.00080081227,-0.013218832,-0.006351993,-0.013995901,-0.009809721,0.0004927303,-0.006403112,-0.0038189092,0.007582778,-0.0077491114,0.025475785,-0.021856453,0.019112993,0.010782482,-0.002956633,-0.0059570502,-0.0016533637,0.0026067381,0.006834687,-0.004792435,0.0033125936,0.009309404,-0.0075177606,0.013852838,-0.009058458,0.004464892,-0.002142528,-0.001624118,0.0095714005,-0.00023445844,0.0046002944,-0.002293264,0.011153526}},
      {{0.0073995385,0.0018295965,0.003803362,-0.005021187,-0.0048780506,0.014535482,0.00015556862,-4.7545094e-05,0.0055544875,0.00017209016,0.03191035,0.00232842,0.0019961237,0.0068060295,-0.0011941883,0.009785973,0.017440561,0.0023605358,0.0011632334,-0.0010144114,0.0035106349,-0.004838558,0.0016941348,0.0011816836,0.0014620316,0.0020490251,-0.010247887,0.026639832,0.007827898,-0.007711699,-0.0094635645,-0.0024402433,0.0030789345,-0.00046708388,-0.0038175432,0.0008766819,0.0002331964,0.0013549457,-0.0019766665,0.0027937337,0.007496254,0.0021024118,0.00023797201,-0.0016877496,0.0033078429,0.0038263046,-0.0021393304,-0.00048825558,0.016201774,-0.002567869}},
      {{0.0053518224,0.0089180665,0.00811998,-0.005017926,0.010136584,0.013252108,-0.0022114269,-0.0017015492,0.018390108,0.0041603437,0.014566097,-0.00032009915,-0.0044849194,0.007844013,0.0026732595,-0.0032397602,0.010395256,0.002447365,0.023708628,-0.0028850443,0.014625096,0.000810986,-0.0005467979,-0.005355938,-0.005364368,-0.0019187786,-0.021593936,0.016013127,-0.023961106,0.010716107,-0.00456694,0.0041239024,0.005295817,0.0031590224,-0.010222369,-0.007710162,-0.0018453979,-0.0078126695,-0.0040426212,0.006841674,0.010730191,0.00083580054,0.0040493296,-0.009167795,0.012995242,0.012587225,0.0055256938,0.003358582,0.014063925,-0.0014895238}},
      {{-0.0041852244,0.001196659,-0.0034913355,0.009110456,-0.0029409123,0.012277023,-0.005648765,-0.0064865234,0.016119825,-0.0014239184,0.02861554,-0.00484697,0.002950856,0.0075127347,6.1687126e-05,0.010340765,0.008204067,-0.0050654216,0.019620175,0.0025371672,0.005350705,0.0055572,0.0021670016,-0.0027314106,0.0024751157,-0.0058715404,-0.0040516187,0.025520725,0.0068242783,-0.0034499292,-0.00026843345,-0.0027492896,-0.0007093134,-0.00033035962,-0.004797621,9.699032e-05,-0.0021620397,0.0033248388,0.007109841,0.015707236,0.0027942942,-0.00023933346,0.0038476456,-0.00166996,-0.00047606946,0.010624157,-0.0014904727,0.006670565,-0.0080017,0.00593731}},
      {{0.0034734143,-0.0037878454,-0.0012898,-0.0064612417,-0.015632674,0.013159791,-0.0064539043,0.0044479677,0.01086467,-0.00679375,0.041458197,-0.0029031711,0.0043643434,0.0069897613,-0.0015654885,0.0063318685,0.006250459,-0.005033382,0.0021341064,4.4705936e-05,0.0057799052,0.0051480057,-0.0001830211,0.0057887323,0.0041468753,-0.0032021254,0.010578232,0.021514004,-0.0070326943,-0.0011123564,-0.0014676609,-0.0012556138,-0.00055921014,-0.0033731833,-0.008495498,0.007342447,0.0063252375,0.0003039261,0.006094326,0.01768346,-0.003614233,-0.0033051646,0.005061924,-0.009879203,0.005245598,0.023404554,0.009258706,0.0029439293,-0.0055292626,0.008417143}},
      {{0.0029586796,-0.0009578518,-0.0036327818,-0.0048838663,0.006354077,0.013442325,0.0015738824,-0.0014243725,-0.008364549,0.0012810546,0.037329275,-0.0036405425,0.001696868,0.006017227,0.002893456,0.016154425,0.0021808713,-0.00032541648,-0.0024300658,0.0014207694,0.0043686326,-0.0017386173,0.008503572,-0.0013561154,0.0006314014,-0.0021456694,-0.011127979,0.036807105,0.01610234,-0.006013096,-0.005595986,0.0024237917,0.0021394836,0.00085554126,0.005172942,-0.0010699831,0.004096021,0.003220725,-0.00033071951,-0.005235368,0.014518446,0.00052349427,0.0008600965,0.0037970082,-0.0045613507,0.00869252,-0.0022636403,-0.0010934292,0.0064892625,-0.0021886122}},
      {{0.009346462,0.0034652802,-0.001896018,-0.004071976,0.012618401,0.011305704,-0.0068794866,-0.002253685,0.0034629195,0.003526154,0.05514713,-0.004311306,-0.0010628112,0.0024679033,-0.00434837,0.019627703,-0.0031696882,-0.004049917,0.0016687751,-0.0074319234,-0.0017157024,-0.018644596,0.0011566611,-0.0029480273,0.0028322912,-0.011169848,-0.0152512025,0.03807592,8.258145e-05,-0.003173534,0.010185506,-0.006034421,-0.007330429,0.009620545,0.0073605855,0.0029458585,-0.0006681435,-0.0002871553,0.0048093745,-0.014483824,0.0156041905,0.0024424528,-0.003795176,0.0047164992,0.0008326817,0.016242983,-0.0026523918,-0.005510521,-0.0046091387,-0.0012027087}},
      {{0.033985343,-0.0012598672,0.0021787754,-0.0028381536,0.0032938619,0.011125121,0.002962781,-0.0034342723,-0.007436201,0.00036962604,0.030966775,0.003380388,0.0036801829,0.007376503,-0.00012212763,0.018505827,-0.004697703,-0.0027083794,5.7885627e-05,0.0039299186,-0.0032578416,-0.00898749,0.0145050585,0.0038211015,0.0008712863,-0.0031540035,-0.019273119,0.03680417,-0.0022486998,0.007879926,-0.0055928747,0.0050485274,-0.0026704406,0.0017604836,0.0069710794,0.002638245,0.0028160643,0.004120912,-0.0019005855,-0.016481835,0.02149264,-0.0006665312,-0.0012927983,0.00915499,-0.0049792374,0.007573392,0.0049377275,-0.0016213048,-0.012710943,-0.007009488}},
      {{-0.0006425158,0.0042883083,0.0011408785,-0.00044412684,0.0013028752,0.014966148,-0.0014271084,0.00031583774,0.009225486,0.0004451325,0.019467026,-0.01277085,-0.00023924028,0.0055495854,0.004207761,0.0045426185,-0.002862748,-0.011212812,0.0164134,0.0006555656,0.008007906,-0.00017459622,0.004058059,0.0034055202,0.0027254843,-0.011486114,-0.012139911,0.02685783,-0.010760088,-0.0031478696,-0.0077230576,0.009303414,0.007816136,-0.00038933576,0.0055677774,-0.0045732064,-0.0011633699,-0.0020945398,-9.123288e-05,0.002338698,0.018223895,0.0089191,0.00803979,-0.0033906498,-0.0012683418,0.008977353,0.0041417275,0.002462658,-0.0051838667,0.008916885}},
      {{-0.0034215203,-0.0011878142,-0.00032210097,-0.005661908,-0.0012486334,0.01713668,-0.0056510204,0.0025682885,0.0001598153,0.0024057052,0.0206426,0.0007588779,0.001839242,0.0069604744,0.00015850853,0.013135002,-0.009441909,-0.004362509,0.013068955,0.0021821936,0.008604055,0.0023659954,0.00076000986,0.0051265615,0.00294269,-0.00061455125,-0.0034295071,0.020705372,-0.020478439,0.00017691578,-0.014307814,0.0027348194,0.001332073,-0.0011067608,0.0033776236,-0.0012338985,-0.00580692,-0.0016207776,-0.0034882904,-0.013770351,0.007870835,0.004171123,-0.0028461046,-0.000817452,-0.00030497095,0.0070329555,-0.0023358667,0.0008361492,0.0010201001,-0.000938524}},
      {{-0.00043165285,-0.00039843764,0.0023768665,-0.0140602,0.007890843,0.017416315,-0.0055033206,0.0009166131,-0.0013468334,0.002928941,0.029011546,-0.0005418308,0.0023761024,0.005094726,-0.0019206024,0.009680342,-0.013318821,0.004336762,0.0146235125,-0.003157744,-0.011998291,-0.008065194,-0.0020185849,-0.0019903313,0.012724262,0.008358112,-0.011895286,0.01887862,-0.01722778,-0.0047220364,-0.00043588324,0.00032803952,-0.0020960711,-0.0038629125,-0.00032529896,-0.00113981,0.0117615275,-0.0034553702,-0.0033372445,-0.006964389,0.0062533426,0.0051591652,0.007131336,0.00887819,-0.00050216855,0.0078179985,-0.0015840436,0.002529717,0.0015535952,-0.0010389545}},
      {{-0.005783653,0.004985332,0.0013791077,-0.0012772322,0.0011321947,0.012781214,-0.0024791001,-0.00072856457,-0.0054492285,0.00053092686,0.035806634,0.0038993275,-3.0354055e-05,0.003323734,0.00029879384,0.01752469,-0.015193599,-0.0005934887,0.0075501287,0.0012386602,0.007079565,-0.009196893,0.0016349106,0.0032469153,-0.0018556506,0.002310202,-0.010029293,0.024834761,-0.0036374,-0.010144609,-0.0049541,-0.00078633166,0.00028823735,-0.0001961955,0.006836735,-0.0017222402,-0.0011291484,0.0034658117,-0.0060180007,0.0009265205,0.004969816,-0.0032389262,-0.0038846934,0.006547954,-0.0038353784,0.0011749252,-0.004165812,-0.0024675638,0.008177387,0.0024523214}},
      {{0.018510558,-0.0012049945,0.007501093,-0.0024996724,0.0098041985,0.0092728445,-0.010333086,-0.001330088,-0.0057561216,0.00013158718,0.053196006,0.0065104878,0.00044377494,-0.00052639237,-0.005069102,0.024209596,-0.006102544,0.006767111,-0.0088920975,-0.008929024,0.0036367152,-0.022201087,-0.0025390885,-0.00094043784,-0.012642635,-0.0056986106,-0.010337045,0.045686636,-0.013036476,-0.00069737714,-0.006200382,-0.0015848528,0.010603144,-0.005042831,0.0029697812,-0.014240234,0.0026635418,0.008306366,-0.0009747137,0.008168785,0.005366316,-0.007993674,-0.010622298,0.0048826896,-0.0051340368,-0.0035924828,0.004781078,0.0016458789,0.0026837257,0.0024466629}},
      {{0.016306296,-0.009325199,-0.0040694405,-0.005371575,0.004802202,0.028013866,-0.0021646833,-0.0067940806,-0.010266847,0.00064759166,0.030381955,-0.003266787,-0.00050416077,0.016806012,0.0021780753,0.027507707,-0.018894408,-0.0045024925,0.0018569943,0.0025533717,-0.004381614,-0.010662171,-0.0046992456,-0.0026087144,0.0031852212,-0.0013770385,-0.0046178573,0.0331671,0.007688391,-0.018009564,-0.011172258,0.003926757,-0.000921094,-0.0019571767,0.009841585,4.2934465e-05,-0.002022577,-0.00092908536,-0.0040167724,-0.0142309675,0.0006978143,-0.0013176585,-0.004495094,0.005973524,-0.011762844,0.0019962422,0.002018383,0.0052783084,0.011207263,-0.0050820294}},
      {{0.033313543,0.0038526747,-0.0056000645,0.006701509,0.0032102324,0.022029439,0.010599071,-0.00356886,-0.0031032113,-0.0025434382,0.028302904,-0.002569605,0.0036958987,0.008461254,0.009270987,0.024695465,-0.00072265376,-0.005177867,-0.009612497,0.00027939805,-0.011731296,-0.009580305,-0.0013798818,0.0018682565,-0.0027673729,0.0022652866,0.018097192,0.030363139,-0.0107132355,-0.0020395482,-0.010316272,-0.014087261,-0.007446388,0.0055209203,0.0009343707,0.00376364,0.0052060215,-0.0034684893,0.003162217,-0.03136195,0.0024991224,-0.0017799807,0.0015724173,-0.003305445,-0.009629417,0.009999892,0.009430609,0.00351023,-0.009069544,0.00061544}},
      {{0.010850099,-0.0007723417,0.00156886,-0.00042105507,-0.008440955,0.032107692,-0.0031807858,0.0025910318,0.009795715,0.0026899658,0.047842585,-0.0014106561,-0.0016800434,0.012311084,0.0011294428,0.01666467,0.014431987,-0.0032475165,0.010277995,0.009202487,0.014417713,-0.0024078726,-0.03203159,0.0064755613,-0.0011951533,-0.00063045474,-0.007580229,0.026344754,0.0045275996,-0.033762686,-0.010658816,0.0049645323,-0.0013781753,0.0019242368,0.001619546,-0.0030496395,-5.587275e-05,0.0032859917,-0.0008592031,0.0003507044,0.009505501,0.000708165,-0.00075100746,0.0025271135,0.0020713103,-0.0027248906,-0.0005697954,0.0013908243,0.015208995,-0.0026853823}},
      {{0.004699198,0.0064858194,-0.0005365295,-0.008738986,-0.019162366,0.03015382,0.005653122,-0.004139389,0.002160325,0.00036688123,0.04892624,0.00077843276,-0.004068039,0.02003454,0.007672991,0.016099937,0.0015732293,-0.01670288,-0.004129393,0.00948065,-0.0041907574,-0.0064721205,-0.033313435,0.010732039,0.0029600365,-0.0062995357,-0.010796569,-1.57015e-05,-0.020760374,-0.00029418082,-0.0016909061,0.012320731,-0.0010591809,0.0061976295,0.004186222,-0.013536556,-0.0006098681,0.004639814,-0.007483829,-0.0008330628,0.00036291638,-0.008797388,-0.0055582575,0.012467995,-0.0064151064,0.0043917834,0.007934455,-0.007368418,-0.01275507,-0.011221243}},
      {{0.013722364,0.00010345105,0.0011873994,-0.0034267816,0.0009650221,0.025770059,-0.0023921598,-0.0055624754,0.006226831,0.0044178693,0.022620572,-0.0038277367,0.0009170441,0.0083064595,0.0032870355,0.0081686415,-0.0041585313,-0.0048912354,-0.0037704706,0.003833322,0.00594337,0.0030299535,-0.0038426823,0.0027245209,0.00089270994,0.0012170546,0.010056737,0.015638022,-0.032151878,-0.007706515,-0.0082381405,-0.0012620969,-0.0041998136,-0.0040314007,-0.0016038124,-0.005563603,0.0010745544,0.0009894271,0.00062558235,-0.0049129725,0.009154014,0.0037186453,0.0018273116,-0.001927423,-0.008342322,0.0064216135,-0.0012824001,0.0069985106,0.0027072432,0.0059557077}},
      {{-0.0010453132,0.0015931511,-0.0059414995,0.004616078,-0.00986811,0.02494698,-0.00092219154,-0.0036581582,0.0009783068,-0.004729123,0.02172042,0.0035091096,0.0033482485,0.005637815,-0.0056416932,0.0024943936,-0.006213547,0.0017529143,-0.00038889155,-0.007900034,0.00094679435,0.010546911,0.0043303194,-0.0031007288,-0.0050718053,0.0005054189,0.008933467,0.005223056,-0.013234305,-0.007474995,-0.0047872467,0.004898156,-0.0019622429,0.0019210725,0.002655012,-0.008815541,-0.0041152956,0.0028694577,-0.009062568,0.002026236,0.015187515,0.005241384,0.0015043437,0.0017080599,-0.0041672266,0.015715847,-0.00018106088,0.00344254,0.008442569,0.0069391937}},
      {{0.0077171745,-0.0018469042,0.0018061969,0.00650709,-0.0044033104,0.022094715,-0.0025552933,-0.0029911674,-0.0009770065,-0.0006377196,0.058189824,-0.0031649128,0.0038056865,0.01608031,0.0014938841,0.011746752,0.002868025,-0.005059371,-0.017755019,0.0011374262,-0.0056107035,0.0051323352,-0.022141702,0.0039913743,0.0073299166,-0.0023663,0.0041268803,0.025684698,-0.01612731,-0.032122508,-0.0025327215,0.0041895267,0.0033554484,-0.002556102,-0.007824616,0.0016726035,-0.0013204779,-0.0035107394,-0.00010099421,-0.00708947,-0.00033605337,0.0004839672,0.000470215,-0.0011296781,-0.004944019,0.013689466,-0.0003288633,0.0008434627,-0.0022970783,0.0031894161}},
      {{0.0012500691,-0.0013737418,-0.0038173632,-0.0010203727,-0.008876498,0.024631958,-0.00058101397,-0.0013258775,-0.006333022,-0.002194369,0.040541347,-0.008382396,0.007188023,0.015263934,-0.004577295,-0.00026549675,0.0005341986,0.0030375007,-0.015216983,-0.00032298203,0.008366345,0.0066433116,-0.017111873,-0.0064301803,-0.002645641,0.0040621096,0.015023558,0.01270471,-0.020655882,-0.026993217,-0.0038006154,-0.0020443413,-0.00033193076,0.00047776802,0.009058958,0.004725885,-0.0059808563,-0.0035254003,-0.0075101643,0.008348706,-0.0039838986,-0.0020577165,0.002420503,9.377744e-05,0.0043861587,0.010593827,0.0001723415,0.0033055898,0.0017924269,0.0012234714}},
      {{0.016506085,-0.0026336997,0.00010901163,0.0035488582,-0.00091232103,0.017204998,0.001239434,-7.184254e-05,0.0040794117,0.006182232,0.033707682,-0.0014208094,-0.0051576034,0.021384573,-0.0027503837,0.006763709,-0.0013177516,0.0073657664,0.0014665832,-0.0062786806,0.002047327,-0.0024880937,-0.011151422,-0.0035642472,-0.0006158159,5.031648e-05,-0.0038356506,0.022537988,0.01525135,-0.015646143,0.0031385114,-0.003137398,-0.00031583212,0.0024987522,-0.0015613518,-0.00025211246,-0.0019438104,0.0010115965,0.0049725147,0.006844389,-0.002979253,0.0012256433,-0.00049188867,-0.001496201,0.005791405,-0.0068072625,0.0030478574,-0.00055125036,-0.004560218,-0.00095636974}},
      {{0.020795576,-0.0058193086,0.003496973,-0.0019500145,-0.015340031,0.014906325,-0.002838006,0.0045805383,0.020580912,-0.011124782,0.05859706,-0.0040146,0.0018047952,0.020773366,-0.00919411,0.0032873312,-0.0048707663,0.0005813463,-0.0021489942,0.0014069541,-0.0030405421,-0.01847263,-0.01241802,-0.006963409,0.0004904605,-0.0019134609,0.010969405,0.012424646,-0.02414959,0.0032676477,0.0017501928,-0.004133943,-0.0040960144,-0.001443307,-0.011440878,-0.006318452,0.0015203024,0.0032546255,0.009694323,0.0019857471,0.0020413725,0.007978791,0.0007869794,0.00050446537,-0.002450076,-0.006453622,0.00019687718,0.0010077964,-0.010193383,0.0027312331}},
      {{0.020796759,-0.0032449134,0.0012540682,0.0005271135,-0.011141691,0.010225884,0.0006464257,-0.003825373,0.016686624,-9.010009e-05,0.059626076,-0.0023449778,0.0060227723,0.020772066,0.0012012506,-0.011535449,0.0038700616,0.0009954353,-0.004870957,0.0039983606,0.027534926,-0.006341055,-0.008807995,0.0051356847,-0.0029641134,-0.00011452448,0.0007797569,-0.0005348065,-0.021786857,0.0180817,0.0010012159,0.0008597081,0.0013199387,-0.00010599569,-0.0027382122,0.00021794772,0.004572057,0.004337281,-0.0031747883,0.019419856,-0.005929417,0.005925048,0.0048120823,9.2244176e-05,0.004559624,0.004227603,-0.00020138334,0.004492044,0.006986488,-0.0040669157}},
      {{-0.012655583,0.0051667397,-0.0023678783,-0.004813527,-0.0027281882,0.0029250802,0.004195123,0.0102018835,0.036071543,0.001846824,0.041898638,0.011621872,-0.007501998,0.018155266,0.010144495,-0.008190939,0.012291111,-0.00010752101,0.005971087,0.00832738,0.00433316,0.0004990629,-0.001785045,0.0058988603,-0.016121946,-0.00400449,0.0121263405,-0.0084602665,0.0059986487,0.058597844,0.019549089,0.0034231094,-0.008365909,0.012255638,-0.0043619173,-0.009006906,0.0028515097,0.0049708276,-0.0026413277,0.004394905,-0.008232111,-0.003223772,-0.0077628037,0.0036408715,0.0061773956,-0.00388092,-0.0035292008,-0.0001950815,-0.015115002,-0.0025904742}},
      {{0.011269915,0.0035117299,0.00047886968,0.0017533314,-0.004057322,0.010875999,0.002240127,-0.00234612,0.01266803,-0.00020031584,0.061816916,-0.0019743873,-0.00055742287,0.023222052,-0.0013949081,0.005199468,0.003296115,-0.0013328367,0.0057682227,0.008450776,0.010823057,-0.0121824145,-0.0016136533,0.0025668943,-0.0010055825,-0.0011601431,-0.009517443,-0.004292189,-0.013208439,0.01513768,-0.004353305,0.0013736916,-0.0026539813,-0.0013930004,0.0018063425,0.0019803587,0.0032181153,-0.0019549588,-0.001414151,0.007007003,0.002690768,-0.0047230874,-0.0028731364,0.0017964498,0.0041046115,-0.01295306,0.003260686,0.002430101,-0.005465844,0.0016823404}},
      {{-0.015882103,-0.0029361446,-0.0043253796,-0.0117054675,-0.015388623,0.011866906,0.009646739,0.0060996455,0.007895818,-0.0032350733,0.069858566,0.0011068034,0.005248189,0.016723778,-0.0062577706,0.0026190171,0.0006925818,-0.0028404281,0.0013777817,0.011481798,0.01020045,-0.013722201,0.0031301235,0.0051706405,-0.0021145085,0.0014303346,-0.006106363,-0.014493658,-0.009244852,0.025303591,0.005076129,0.00905687,-0.0022384292,0.0032688633,-0.0021856532,0.00093091576,-0.0031791017,0.00932116,-0.00027435273,0.010555979,-0.0075957817,-0.008935868,-0.005767009,-0.0015800404,0.0043249414,0.0017791969,-0.008059007,-0.001783986,-0.01613205,-0.0037144062}},
      {{-0.008274751,-0.00057814847,0.0012033373,-0.0023532868,0.01791201,0.012180833,0.009625504,-0.0002109592,0.0028394128,-0.006515719,0.05211489,0.0018163546,0.0016769909,0.017297624,-0.003823606,0.0041207806,0.011021358,0.00022072936,0.00025966103,0.0048518614,-0.0005647578,-0.0043753786,-0.012000639,-0.002257194,0.00086658157,-0.002808367,0.0039590104,-0.01323561,-0.019113235,0.034996074,0.0070980117,-0.0026257113,0.004987702,0.004205119,0.0047211885,-0.0007632595,0.001863781,0.0056083677,-0.0006871195,0.006767213,0.015163595,-0.0053246324,-0.0030255504,0.0021597196,0.0027054776,-0.00022281788,-0.00034625508,-0.008086572,-0.020491779,0.005593336}},
      {{-0.014561997,0.0020690863,-0.016679911,0.007534659,-0.0016026155,0.009046088,0.0131212855,0.0038018588,0.0209067,-0.00046250256,0.044783324,0.0038024401,0.006673034,0.0210515,-0.008778342,-0.0038604636,0.009649313,-0.0052704634,-0.0034806023,0.004301321,-0.013022188,-0.0016392167,-0.013922396,0.0010198461,-0.009990276,0.011411001,-0.00012440879,-0.018358931,-0.00611618,0.04135756,0.012501576,0.0019175557,-0.0011341852,0.0058248304,-0.0015866756,-0.0052046794,0.0025827768,0.0046997266,-0.00042073618,-0.009543927,0.01568043,6.8359564e-05,-0.009447083,-0.0039532254,-0.001355045,0.017001897,0.000291169,0.008057408,-0.028894875,-0.0017266183}},
      {{-0.0006658386,0.0030147415,-0.0010330625,0.0040320107,-0.017755914,0.010643842,-0.0025047672,0.0032990116,-0.0033142418,-0.00056420267,0.0848212,0.0025970663,-0.0013541098,0.020702304,0.010489115,0.005979347,0.02412259,0.00533526,-0.013452589,-0.0029635702,-0.010872172,0.012571677,0.0032656004,-0.0048247166,0.0020170647,0.0014516757,0.0005981072,-0.026965693,-0.030954536,0.029024934,-0.00067208335,0.00081510254,0.0017574298,0.00030773343,-0.0053029903,0.0023118753,0.00011660822,-0.001476097,0.0026721584,-0.0075917593,-0.0076405997,8.4665735e-05,-0.0037642734,-0.0001474712,0.00059798645,-0.016566813,-0.0010040035,-0.0062055048,-0.0052951896,-0.0009599877}},
      {{0.0014742607,-0.008064476,-0.004835531,-0.006121543,-0.016025843,-0.01054727,0.0075594834,0.00015361901,-0.0052220817,-0.008541915,0.07925665,0.01533103,-0.0008878148,0.018012362,0.0021417825,0.0056745443,0.029567037,-0.0033150567,-0.0059466455,-0.002545092,-0.006043375,-0.00010881011,-0.0030089482,0.0013451205,0.003815059,-0.0066023585,-0.010937704,-0.024491733,-0.013225629,0.028867174,0.00048275437,0.0053060935,-0.0062180865,-0.0006064973,-0.0055860626,-0.009406492,0.005412754,0.000598796,0.006789496,-0.0149352355,-0.010877638,-0.004470873,0.0056980248,-0.003536869,0.00809748,-0.010198099,0.0044417684,-0.0015850075,-0.030588673,0.001233857}},
      {{0.002256122,0.0019110168,0.00020442838,0.0035458563,-0.010761515,0.010198371,-0.0013558706,0.0008697197,0.010531695,-0.0009795005,0.054701734,0.0022119852,0.008320217,0.022926245,0.007237304,-0.007485818,0.028400622,0.003549494,0.0060044327,0.00279649,0.0051758736,0.011739089,0.0072975443,0.0036860663,0.0008210442,-0.0023591416,0.0025464064,-0.03142535,-0.015678534,0.035090297,-0.004508081,0.007818137,-4.377075e-05,0.007407848,-0.0038027044,0.0030814083,0.00070545985,-0.004595198,0.0014083415,-0.013159968,0.004717895,0.00066261494,-0.0011556413,0.0025114138,0.0031067661,-0.009100689,-0.0069527733,-0.0015036861,-0.022971904,-0.0067957444}},
      {{0.01868401,0.0038532007,-0.005982592,-0.004110936,0.0022674757,-0.00903884,0.00060197676,0.005340081,0.0030441666,-0.0025381106,0.041827645,-0.0009357143,0.005887184,0.02026922,0.0017226776,-0.006824347,0.028219093,-0.0015848406,-0.008651233,-0.0015629951,0.011823881,0.006219288,0.0073210956,-0.004199663,-0.0056755464,-0.001211329,-0.004273287,-0.02366024,-0.021920437,0.02423174,0.0072777523,0.0013826059,0.0014061705,0.0043080174,0.003178248,-0.0014013444,0.0032853058,-0.0017437183,0.0017545967,-0.0002596769,0.003957962,0.00318554,0.0027474938,-0.0009857782,6.4758344e-05,0.0027422935,-0.009226578,-0.0040271864,-0.011880973,0.004820262}},
      {{0.009933751,-5.328429e-05,-0.003834449,-0.0003650005,-0.014818153,0.0015429975,0.0069352626,0.004093973,-0.0029066422,0.0007498702,0.057290334,0.001917116,-0.002571148,0.017466074,0.004337345,-0.012796697,0.017214302,0.005617446,-0.0015813777,-0.005861151,-0.0041879774,0.009016577,0.020714292,-0.0013313827,0.00071504613,-0.00014249925,0.012963136,-0.021131037,-0.009060321,0.013767218,0.008986756,-0.0017179867,-0.0040075206,0.0044505093,-0.007660189,0.0023554016,-0.00025776392,0.00024660185,0.0017493396,0.004108086,0.0034744276,0.0041576102,0.008971044,-0.00273611,0.010518152,-0.015980858,0.00081070204,-0.0067983363,-0.00026941058,-0.0031509884}},
      {{-0.0106545845,0.0005027124,0.0025074119,-0.0022210788,-0.013688027,-0.0025719956,0.0016339223,-0.005881615,-0.0072623095,0.001054936,0.024004163,-0.003323873,0.004145619,0.0136218,0.012043193,-0.012683038,0.011659846,0.0021565552,0.023871873,0.010355016,0.018768877,0.0076930993,0.012958382,0.0015964301,0.007913909,-0.0010519485,0.013530183,-0.022759035,-0.008674695,0.011652977,-0.0018924691,0.0012835586,-0.0034472153,0.002271429,-0.009620038,-0.00048702263,0.002299982,-0.0029627401,0.0071267495,0.00023502257,0.01240721,0.006585727,-0.0052825427,-0.0035651643,-0.000856038,0.007356785,-0.00076495716,-0.002041424,-0.02130413,0.0051173433}},
      {{-0.0074403547,0.00011774752,-0.00091428356,0.0026094278,-0.013915443,-0.011141386,-0.00018206004,0.0029059392,0.0137024885,-0.005255376,0.051518276,0.0060968455,-0.00042283468,0.01847878,0.0026744925,-0.005733572,0.023967039,-0.0020954863,-0.0064807246,0.00555836,0.008446843,0.016535504,0.021502223,-0.0016525732,-0.006531414,-0.0018837269,0.012882874,-0.016242126,-0.02537243,0.001249045,0.007256961,0.004973452,0.0005806756,-0.0024131213,-0.00037051938,0.0018777354,0.00082884345,0.0022396245,-0.0021952603,0.013198564,0.008200801,0.0011833287,0.0023071507,0.002419718,-0.00033109513,-0.009881099,0.0010224391,-0.009460148,0.0028059455,0.0012792853}},
      {{-0.0070210695,-0.007654536,-0.005867443,0.005174321,-0.012788527,-0.015065789,-0.0027897882,0.003796767,0.0069021187,-0.0016172292,0.08010515,0.0048137056,0.0034177424,0.015376591,-0.0021399567,0.003502716,0.015357652,0.0022718806,-0.0034768682,-0.0028255954,0.0050392128,0.007966363,0.0046905,-0.0031686292,-0.005388214,-0.00012759323,0.022255113,-0.008255089,-0.016706882,-0.0007489801,0.0056699454,-0.0012439892,-0.0034953621,-0.00023651848,-0.0020286571,-0.0024984926,0.0045247823,0.004266818,-0.0030150425,0.0002148033,-0.005768969,0.0033908412,0.0022769917,0.0034280163,-0.0052093156,-0.018034164,-0.0011814586,-0.0032446103,0.0023241006,-0.0043943957}},
      {{0.017735817,9.296295e-06,0.0014657101,0.004781063,0.007767152,-0.008991824,-0.0019624908,-0.0035786447,-0.000417823,-0.000153719,0.047203004,-0.00269311,0.0040671513,0.018473327,-0.00585844,0.009424153,0.008381202,-0.0030387414,-0.0012491915,-0.0016068427,-0.013035036,0.021665644,0.01942368,0.00081603497,0.0024384519,0.0025395742,0.0048621907,0.007840729,-0.006350033,-0.0066309734,0.0023701305,-0.0009132887,0.0010139402,-0.00028871695,-0.008312951,0.0040833172,-0.008902389,-0.008135169,0.0049772677,0.0010441644,0.0035591675,0.0050892085,0.0011697471,-0.00491585,-0.00974146,-0.010739147,0.0033392727,0.004047054,-0.00038827825,0.0050757444}},
      {{0.009816636,0.00043547028,-0.001597001,-0.006109887,0.0056120763,-0.0066633634,0.0068495385,-0.00067880086,0.025869552,-0.008478076,0.052777216,0.0027728546,0.0077907094,0.011928689,-0.0028095788,-0.0067587947,0.012983956,-8.752652e-05,-0.0029956407,0.00046684765,0.015601909,0.0051225545,0.0043101213,0.0030540791,-0.009709636,0.007734218,0.0159041,0.0015933617,-0.003509637,0.0009938045,-0.0020801735,-0.0031138586,-0.002664323,0.005577006,0.012250981,0.005411915,0.00060747867,-0.00047457046,-0.0033957604,-0.0010818426,0.0118616875,-0.0034621172,0.0045132237,0.006469831,-0.008998782,0.0028014507,-0.0014957477,0.004060904,-0.023214407,0.0031139913}},
      {{-0.012395031,0.0014509753,0.0009263663,0.005861698,-0.0025400238,0.00029064153,-0.0057213563,-0.00037351897,-0.009699583,0.004945675,0.051014863,-0.0040949695,-0.0030357807,0.013448336,0.0008560516,-0.005287532,0.014992747,-0.006467161,8.7785076e-05,0.00056421856,0.009756592,0.021442465,0.0070982827,-0.00499988,0.005997472,0.010861299,0.012668532,-0.0007216008,0.012828096,-0.015479849,0.0021955403,-0.0022715789,0.0058878297,0.004154583,-0.0122479955,0.0043880236,-0.0019067782,0.0026525587,0.0029263888,0.011703544,0.0033947164,0.002063253,0.0012893695,-0.0084570525,0.0021649492,0.005091185,-0.0020615414,0.0037594186,-0.0020191537,0.0006686656}},
      {{-0.01478476,-0.00078409637,0.0026865874,0.0017726865,0.00016901294,-0.0032908807,0.004558691,0.0016609273,-0.0009830954,0.0061069448,0.063000746,0.0037476004,-0.0059015425,0.014907766,0.005664303,-0.0017587328,0.014696301,-0.0004113611,-0.006577685,0.00084572285,0.01323251,0.019612424,0.012177573,-0.0057611023,0.004826551,5.8395362e-05,0.014660593,-0.0025775938,-0.014139282,-0.015245478,0.0014381411,0.0011118061,0.0008411573,0.0013631926,-0.002302132,-0.0031558354,-0.010573784,0.0063646827,0.007807963,0.011399807,0.0025151859,0.0047632745,0.0049513453,-0.00066209474,-0.0025235442,0.0071423384,-0.0013583141,0.00045357973,0.0021136967,-0.0022005967}},
      {{-0.006722014,0.001209711,0.0014895134,0.0006420202,0.011183101,-0.0131682595,-0.0028520452,0.0016695594,0.0055528944,0.000109939436,0.053501677,-0.0023904988,0.0019522924,0.022790307,-0.0052650687,-0.010119036,0.018413696,0.0039247056,0.011001216,-0.0073470785,-0.0020458053,0.03218336,0.007967139,0.0024437346,0.002370472,0.0054248655,0.0006555023,-0.008972327,-0.0051535475,-0.0026589304,0.0006440634,-0.005986061,0.0007026717,0.0023583374,0.002070187,0.00084506517,-0.002071722,0.0011082635,0.0011704008,-0.0033171687,0.007939138,0.0010738993,0.00020464437,0.00020371754,-0.00072909606,-0.0057551153,0.0020612618,0.0025416717,0.0026865865,0.0014935002}},
      {{-0.008319935,-0.010987039,-0.009153077,-0.013679021,0.0069914153,-0.020193383,0.0033349076,-0.0014179945,0.002661948,0.0041803443,0.049019713,0.004399648,-0.0009431932,0.013805545,0.004506086,-0.015548157,0.0021656565,0.0013035607,0.000982934,0.0025061949,0.00015851021,0.021128887,-0.0034929132,-0.0018159252,-0.006740501,-0.007898539,0.0014970832,-0.011664935,-0.005241542,0.012674616,0.009898419,0.0013248706,-0.008057753,0.0011586599,-0.0046258112,0.0015467276,0.0032934318,-0.0036368535,0.00019891368,0.00024135938,0.00841293,-0.0072777825,0.0010321047,0.0025091309,0.008362879,0.016107345,-0.0011388566,-0.005123966,-0.009885458,0.0017233766}},
      {{-0.010024446,-0.0024558178,0.0017776492,-0.0031904753,0.0029222448,-0.018449599,-0.00044878523,-0.0028903575,-0.0012426261,-0.0016745039,0.053710688,0.0016585193,-0.0016290406,0.019454636,-0.003189652,-0.01624619,0.013434186,-0.0021711106,0.0069171432,-0.0006437583,-0.0038702686,0.014793554,0.014641408,-0.0048415344,-0.0036350181,-0.0014983473,0.010105006,-0.021391157,0.010526926,0.0062781963,0.002281352,-0.0028066367,0.0018464313,0.0010296782,-0.0020045515,0.0030679477,-0.0032558504,-0.005900094,0.0047610863,0.004447693,0.0033590123,-0.0022502416,8.589174e-05,-7.119377e-05,0.002639235,0.0032424575,-0.0023973275,0.0028972472,0.0022296351,0.0015979556}},
      {{-0.015518933,-0.0017705177,-0.0005011114,-0.0046188007,-0.016608726,-0.028213618,-0.0020150626,-0.0038154472,0.0045267777,-0.0010313067,0.06312729,0.001685584,-0.005816255,0.0076313172,0.009840997,-0.030854674,0.0014280451,0.0034329384,0.006972092,0.008970819,0.009398853,0.00038238807,0.007585406,-0.0096082585,0.006412299,0.0065995706,-0.01694352,-0.013920743,0.02331429,-8.680849e-05,0.002705633,-0.0063702087,-0.003156468,-0.0022453808,-0.0047046538,0.0020636206,0.008294604,0.005165333,-0.004692659,0.015616477,0.0048958263,-0.009545571,0.008055429,0.001342912,0.01753942,0.00916796,0.0030697498,0.0029297452,-0.0019854323,-0.0044776197}},
      {{-0.005619085,0.00027537646,0.0010450217,0.0025131817,0.01041626,-0.018787893,-0.002291866,-0.0035031158,-0.004511073,-0.004209028,0.043561194,-0.005477281,0.002994637,0.019897135,-0.004167429,-0.013992452,0.010015615,-0.0038868862,0.0071395473,0.0012994334,0.0030298978,0.009427452,0.0045315847,-2.023554e-05,-0.002935892,0.00094853475,0.005825229,-0.016315041,-0.0038984714,0.0022149852,0.00015475345,-0.0075012078,0.0045665535,-0.0034688711,0.00013784385,-0.001376369,-0.00048783736,-0.001419685,0.0044781817,0.002558129,0.012348277,0.0046462636,0.0038712453,-0.0054789963,-0.0046463283,0.002465012,0.0018563044,0.004120805,0.01021784,-0.00016918727}},
      {{-0.0033641728,0.006874111,-0.006211944,0.0063683074,0.0061619114,-0.019244673,0.002144575,0.004426724,0.0062109525,-8.3712395e-05,0.030298382,0.009834248,-0.007311442,0.019216424,0.003793343,-0.011435108,0.0023575816,0.0069552734,0.019930033,0.0014423429,0.0055317357,-0.0020855328,-0.009578236,-0.006720058,0.003316327,0.0025675485,-0.0016928545,-0.020491365,0.041130845,0.021813411,0.012329331,0.019269802,0.00096753845,0.0017886072,-0.004340697,0.002986706,-0.0033585257,0.00354262,0.00033560485,0.0064851423,0.014021791,-0.006034737,-0.0014381281,0.002285383,0.0076357434,-0.004238691,-0.0030343756,-0.0152696585,-0.025486916,0.007136848}},
      {{-0.004651556,0.001472213,0.0010533589,0.00050774537,0.012601904,-0.023287013,0.0027904466,-0.0037302026,-0.0071563786,0.0045213085,0.03488816,-0.0011872584,0.0031358395,0.0158826,-0.0021251438,-0.014695881,0.0027983568,-0.0045030373,0.010914955,0.0008124367,0.0116073955,0.0008006504,-0.0009793246,-0.0005445669,-0.0014262903,0.001212791,0.010795815,-0.019853167,0.009100426,0.004978652,-0.01123597,-0.0009204322,0.002508172,-0.0049358136,0.00022261083,-0.0007410389,-0.00015654485,0.0037124148,0.0009766052,-2.5822848e-05,0.0011406398,0.0067006424,-0.0025783244,-0.0059612957,0.0017404592,0.007861062,-0.0001559534,0.0064375736,0.0030757685,0.0033607231}},
      {{-0.006452031,-0.0050895195,0.003911198,-0.0022598295,0.00026567708,-0.023904884,0.0066250768,0.0035993136,0.012251994,0.004717134,0.044683542,0.004181482,0.011797535,0.016032562,-0.014141322,-0.008901037,0.010222671,0.0022481969,0.00082748116,-0.0021667562,0.010123027,0.0012725849,-0.00074959523,0.004376567,0.0058030332,-5.4022275e-05,0.013003254,-0.02287573,0.021060392,0.018158782,-0.006006576,-0.00086393266,-0.0043536057,-0.003893778,0.0037538991,0.0047643124,0.0067482553,-0.0045960816,-0.0026383582,-0.011579498,0.0018859148,0.0019577781,0.00013576625,0.0018379313,-0.016054865,0.0073662084,0.0011407314,0.010153653,0.011071627,-0.00087955646}},
      {{0.0012375637,-0.002635691,-0.004441828,-0.0034727606,0.008105932,-0.018087447,0.00073106244,0.00012523979,0.0066304267,-0.00063531083,0.041446358,0.001987504,-0.00023557183,0.019463303,-0.0012917668,-0.005669211,0.018097755,0.0006528427,-0.008536178,-0.0025844094,-0.0050978125,0.0014821346,0.008573639,0.0024062926,-0.0066976217,-0.0010342742,0.011850352,-0.021479225,0.00521579,0.008462898,-0.0060672374,5.225669e-05,0.0033588186,-0.0030528544,-0.0030682401,-0.0004452952,-0.004273317,0.0028903228,-0.0016556049,-0.009466899,0.015826723,0.0019706108,0.0017631574,0.0033136874,-0.010369347,0.016456714,-0.00308099,0.0048961886,0.009237904,0.0034583549}},
      {{-0.008088346,0.004167197,-0.0029649653,0.0070397253,-0.0154517675,-0.023590168,0.0010016632,0.0018325353,0.003810278,0.00044420094,0.037326682,0.0014086359,-0.0047569117,0.014777087,0.014610906,-0.007411381,0.006407405,-0.0047267727,-0.0071628145,0.001847391,-0.003685467,-0.00029466022,-0.0033693633,0.0066640754,-0.010793917,0.0060661463,0.019355357,-0.020203706,0.038433213,0.011707861,4.7576e-05,0.006344894,0.0063227494,0.0095110135,-0.0044197873,-0.0003414088,0.007478705,-0.0017258635,0.0043411697,-0.0059674615,0.0065107928,-0.009341693,-0.0023901118,0.0012409209,-0.0020510505,-0.0017141285,0.0017342153,-0.00020793233,-0.0149092795,-0.0016664482}},
      {{0.00754828,-0.0007432022,-0.0009085015,0.00011600314,-0.011279172,-0.0073017613,0.0039035708,0.00083770516,0.003706423,0.001321141,0.042465884,0.0059552803,-0.0022096985,0.01962533,-0.001022307,-0.01912808,0.010158649,-0.0005761351,-0.0041699023,0.00013499081,-0.00036378708,-0.010043698,0.007719389,0.0031967792,-0.0005258192,0.000810312,0.012075316,-0.023736846,0.015732517,0.0018948375,-0.0044195964,0.00030362295,0.0009924653,0.00030475046,-0.0013217563,0.0071898256,-0.0021948714,0.001135804,0.00037394924,-0.012399627,0.008448473,0.0039483267,0.001998494,0.0017054386,0.0011142095,0.01478641,-0.00064306206,-0.0037735705,0.0065610018,0.0025601801}},
      {{0.009759558,0.0011518671,0.0070558204,-0.0020229523,-0.011792954,-0.0048328685,0.0076377573,-0.0023794097,0.0028106004,0.0064172647,0.044977512,0.00029448938,0.0036866914,0.018480228,0.0059654736,-0.014061451,0.0049962658,-0.005566403,-0.008672613,0.00857064,-0.004657856,0.0026564617,0.006201541,0.00064086536,-0.0017981124,0.00255402,0.026155025,-0.011954631,0.01695841,0.0035154447,0.004091634,0.008175047,-0.0095831305,-0.0017742572,-0.008831099,0.004423043,-0.0019063473,-0.010358977,-0.0078161275,-0.017511657,0.014732664,-0.0016351722,0.004988604,0.003947782,0.0014830738,0.014156432,-0.0031216613,-0.012124547,-0.0049407724,-0.0030516125}},
      {{0.023009842,-2.1063306e-06,0.0008797069,0.005025744,-0.0035822033,-0.014033988,-0.008132309,0.0071596196,-0.00179938,0.0011762308,-0.0055073607,0.0014677041,8.225656e-05,0.022991106,-0.0040033897,-0.02635992,0.009831889,0.00070189347,-1.6997127e-06,0.0002913801,-0.013212446,-0.0018769478,0.010827174,-0.0008541798,-0.0011541927,-0.0027639049,-0.009085042,-0.0007251431,0.022203825,-0.007866343,-0.007015707,0.0012002299,-0.0013160479,-0.00042313564,0.008154248,-0.0011067274,0.008838949,0.002352872,-0.0041074897,-0.019578429,0.018253783,0.0027378772,0.0008861818,0.0053574066,-0.0051332274,-0.0009967458,-0.004469689,-0.0047869734,0.013717271,-0.0006142193}},
      {{0.0022939066,0.007953777,0.002407609,0.0005757334,-0.016161194,-0.023865117,-0.002852904,0.004658712,-0.0030595942,0.014000798,0.008694213,-0.008043579,0.012095514,0.0176813,0.0025903413,-0.033079173,0.009047358,0.0083356295,0.0043583964,-0.004497323,-0.005400818,-0.015352107,-0.013537434,0.0027518212,-0.0028254879,0.001699139,-0.014398329,-0.021419033,-0.012241654,0.005109456,-0.01931325,-0.0140709905,0.0040074005,-0.00776529,-0.005997333,-0.0027194666,0.0038975836,-0.00077108236,0.0045695715,-0.0065374686,0.027499167,-0.0024884634,0.008452823,0.005377992,-0.0129664,0.019410307,-0.005098196,-0.0040699863,0.007899212,-0.009227395}},
      {{-0.0018000097,0.000409801,0.0027369692,-0.0050741923,-0.0042053205,-0.022333998,-0.0016592771,-0.0014902976,0.0008562131,0.005394611,0.018814804,0.0013151881,0.0022508544,0.014655371,-0.00041056387,-0.034883406,-0.0005521949,-0.009968005,-0.0037347479,0.0009907886,-0.006000938,0.0034022336,-0.013427611,0.003265299,-0.0016232689,0.0022633949,-0.019593697,-0.0063248146,-0.014041987,0.002235236,-0.0038639759,0.0041752527,-0.0045027193,-0.0034833467,0.0002567797,-4.720086e-05,0.00091451465,-0.0015797588,-1.924061e-05,-0.009140874,0.01054244,-0.0047619822,0.00037603072,0.0026230852,-0.009821836,0.015532975,-0.0021953399,0.0006561336,0.0042509777,-0.00045214398}},
      {{0.008277454,0.0016166195,0.0023488314,-0.00048794216,-0.02244518,-0.027108392,-0.01119435,0.0059071425,-0.010891281,0.0031762142,0.015527604,-0.0024194224,-0.0040524225,0.021078996,0.021012306,-0.038352776,0.0131402835,-0.00250117,0.016685154,-0.003306489,-0.007357979,0.003360565,-0.0013643508,0.0028035985,-0.005002873,-0.010320022,-0.020292433,-0.020865366,0.0024424298,0.027232416,-0.013815197,0.0064456193,0.005956284,-0.0090958765,0.0061907405,-0.0136815775,-0.008003663,-0.011231235,-0.002197287,-0.0091413865,0.04114899,0.012150422,-0.0022852852,0.016709886,0.0080368705,0.011777056,0.005143037,-0.006111046,-0.0020612655,-0.0044880337}},
      {{0.02350116,0.006094987,0.0039952276,-5.5634966e-05,-0.011111878,-0.01696745,-0.0070075854,0.0025003476,0.013500757,0.007386265,0.0017256069,0.001977974,0.00095113326,0.019622425,0.00018085395,-0.030407576,-0.005195299,-0.0024581694,-0.0018764761,0.0027956648,-0.005155844,0.016946716,0.0019621614,0.00011639713,0.004006745,-0.0042835246,-0.015883446,-0.015545627,0.005400209,0.0090848375,0.0007730087,-0.0011659947,0.004644561,0.0016682477,0.0028782089,-0.0018361338,-0.0018541175,0.0025184043,0.0011141049,0.010885747,0.008364491,0.0010651174,-0.003132755,-0.002013828,-0.006880217,-0.0026380208,0.0052703526,0.0094125755,-0.004828081,-0.0024495877}},
      {{0.008839814,0.0078022582,-0.012001533,-0.00040708826,-0.010253109,-0.022301594,-0.0046103317,-0.0032744633,0.006373888,0.0010600359,0.0025336577,0.001630428,0.0014858006,0.024096576,0.0032036386,-0.03186894,0.010140734,-0.010064077,-0.016456315,-0.0018432525,-0.00811747,0.014710387,-0.008262142,0.012350554,-0.009881031,-0.004939475,-0.005456789,-0.02244155,-0.0173835,0.017001921,0.00641043,0.004236422,-0.009917297,0.005119443,-0.0012112355,-0.00896067,-0.0009799012,-0.0012278941,-0.0035872955,0.001654037,0.013313775,0.0060061384,-0.0062182257,0.021102944,-0.0077966177,0.0063798223,-0.0027905528,0.0028289931,0.0025252644,0.004185873}},
      {{0.0039743297,0.0009589625,-0.002047691,0.00022893699,-0.013813366,-0.014449257,-0.003380988,-0.0036804464,0.0005849614,0.0019879031,0.007307268,-0.0014719653,-0.0020171024,0.022353642,-0.0013089402,-0.025869085,0.017436055,-0.0072716363,-0.0023848384,0.0025380233,0.007463786,0.018972388,-0.017410444,0.0058024633,0.003095992,-0.005587015,-0.01908544,-0.019046254,-0.015690267,-0.012962699,0.00569515,0.0075879167,0.0009976338,-0.0048174965,0.008471122,-0.0012591797,0.0036425723,-0.0023726101,-0.0035182438,0.02002578,-0.0058253426,0.0025793377,0.001285076,0.0019973186,-0.00045872055,0.0002036694,0.0014112919,0.0035063038,-0.004018715,-0.009380744}},
      {{0.016970634,-0.004034668,0.0005262916,0.0040121125,-0.012093261,-0.012190386,0.004429436,-0.004894431,-0.019156028,0.005097993,0.0027549954,0.011671911,-0.0020649666,0.022994526,0.0047914865,-0.021144623,0.021954719,-0.00083332026,-0.026371537,0.004441144,-0.0018275287,0.0033622691,0.0024944951,0.005831631,-0.0068938723,-0.0013735471,-0.0030082478,-0.024669504,-0.061397336,0.01530215,0.0047078123,-0.00197265,0.0039742584,0.0080514625,0.009034865,0.01198513,-0.0031149243,0.0040483233,-0.000634473,0.006593886,0.02076696,-0.0020949387,-0.0005424659,-0.0009133356,-0.0033738918,0.007587534,0.005548906,-0.0033405703,0.009567529,-0.0022955423}},
      {{0.0051855743,0.0013475608,-0.0004635421,0.0008455615,-0.0031029899,-0.01588888,0.0037030228,0.0053219027,-0.0026159242,-0.0032357133,-0.009219101,0.0030721559,0.00017755335,0.01871733,0.0032678107,-0.01855123,0.015554035,0.003952694,-0.01112202,0.004262995,0.016402746,-0.0017240476,-0.006828794,0.004278038,-0.00039242822,-0.00060132396,-0.0019096634,-0.018790469,0.006798891,-0.00215854,-0.00092158315,0.002799546,-0.0026393984,0.0020748624,0.01050001,-0.0022281804,-0.00090830313,0.0020036083,-0.0013110559,-0.001413357,0.0027274436,-0.0057170973,-0.005672891,0.0057999664,0.0025851182,0.008862014,0.0013440392,0.0012094313,0.0012974789,-0.003814497}},
      {{0.001347623,0.007757972,0.0023374255,0.004429508,-0.008937498,-0.017006818,-0.006765557,0.007649719,-0.0068301125,0.0077950605,-0.010313231,0.0044433316,-0.002368864,0.020238841,0.008614777,-0.018408593,0.01999535,0.0120852925,0.0073550567,-0.0031626066,-0.0010190869,0.0052445363,-0.005289138,-0.0013024234,-0.0010906232,-0.0038479583,-0.008898597,-0.025390513,-0.0037859986,-0.0022744883,-0.0083656125,0.009821033,0.0051063383,-0.0025766687,0.0030498782,-0.0113474475,-0.0069855195,0.00040591942,0.0063364594,-0.0049870913,-0.0051633106,-0.004668485,-0.0004934222,0.015644616,-0.001789544,0.009527329,-0.0013078902,-0.001498696,0.00023111436,-0.007834803}},
      {{-0.0017748128,-0.0040893164,0.0014676373,-0.00041186967,0.00014135549,-0.016779127,0.001251449,-0.00024358723,0.00419526,-0.0048981975,-0.01611647,0.005513406,0.0031143115,0.022388991,0.0060921754,-0.016815102,0.006283332,-0.002332881,-0.0046543255,0.005266287,0.013549277,-0.007102667,-0.00035969002,-0.0017911696,-0.006471659,-0.006706724,0.017733239,-0.023548044,0.018845027,0.0017627281,-0.008194278,0.0018618352,-0.0023812342,-0.0038014946,0.0007427616,-0.0005434922,-0.0008280488,-0.003926,-0.0015653239,-0.014831907,-0.0027524054,-0.0014838431,-0.0045799473,-0.00081206777,-0.00263554,0.011494654,0.00019089655,-0.0006731508,-0.004531632,0.00091229536}},
      {{0.016263643,-0.0038267884,0.002747415,-0.00064725423,0.008701624,-0.021361537,-0.0052488903,-0.0038315717,0.003809879,0.010992923,-0.013108611,0.008433587,0.0053713922,0.02139458,0.008527273,-0.008604398,0.008129298,-0.00035504493,-0.01609844,-0.00991713,-0.0083625065,-0.023092352,-0.0005648597,0.0042064213,-0.00016397415,0.007401927,0.01206711,-0.022211941,0.034104045,-0.002591757,-0.010500242,0.0021451027,-0.007416324,0.005446197,-0.0029675988,-0.005598014,-0.0021575128,-0.008133101,-0.0012276099,-0.025238402,0.014215925,0.0023999724,0.009779491,0.0038882259,-0.008884927,0.007846704,0.000781926,-0.0038514845,-0.0028770037,0.0033492907}},
      {{-0.0010228199,0.0010450444,0.0024167534,0.0032129323,0.014526573,-0.019268166,0.007994753,-0.00016855547,0.00071360066,-0.0018369906,-0.007729725,-0.00033845956,0.0022992853,0.01886026,0.003286539,-0.010663244,-0.002528415,-0.0050817016,-0.0087854555,0.006724423,0.014962636,-0.013200826,0.011026299,0.0028941708,0.0004341584,0.0048099905,0.01752707,-0.010228225,0.010666087,0.0055295844,-0.006641279,-0.0007073358,0.0020121327,-0.0033560668,0.0026170246,-0.0015210403,0.0072906823,0.0027020627,-0.0044967,0.001968215,0.019399686,-0.003428991,-0.0039805397,0.00093779224,-0.004224656,0.018414866,-0.0005461007,0.003028369,0.0040295157,0.00021892987}},
      {{0.015041411,-0.004546621,-0.0071042445,-0.0082661845,0.010123422,-0.022453254,0.015084104,-0.0006615554,-0.009245667,0.012676505,0.0015689108,0.0027879775,0.0029447982,0.014068122,2.4181523e-05,-0.016216744,-0.0039018658,-0.0070028333,-0.012379702,0.01384367,0.007865957,-0.029580375,0.0020024406,0.003363708,-0.014012841,0.002733133,0.0029200045,-0.0099348985,-0.017053619,0.006739358,-0.01112918,-0.005344617,-0.0006133142,-0.0018817049,0.007217894,0.0037313316,-0.0036158662,0.005261012,-0.004510967,-0.022963252,0.012282375,0.00605998,-0.0067977463,0.0014628064,0.0026915926,0.020736264,0.0030402162,0.005722432,-0.007381244,0.00018652859}},
      {{-0.0049460083,-5.4744578e-05,-0.00051801105,0.0027356022,-0.0040830458,-0.01945996,0.0054566315,-0.0011439419,-0.005924014,-0.0045267865,-0.0019177273,0.007773183,0.0037306934,0.019446662,0.0042346423,-0.020262295,0.012050728,-0.004301117,-0.0025943562,0.0065561817,0.0117234215,-0.007508102,0.014636278,0.005525724,0.0019085371,0.003126944,0.00711657,-0.021108259,0.019257821,0.0073264097,-0.0054984167,0.0021747116,-0.00015416121,-0.003152962,0.0057019815,0.0027678316,0.0032629813,-0.00023605728,-0.004362129,-0.004987955,0.0047450024,-0.004901773,-0.008335961,0.002562219,0.0009085327,0.012448255,-0.00093803875,-0.005140174,-0.00042659885,-0.006220706}},
      {{-0.0026004405,-0.0039242567,-0.00026981917,0.0050890185,-0.016548984,-0.02926951,-0.011668283,1.0621444e-05,-0.0013933547,-0.002325994,0.011035175,0.0044807456,0.0016674494,0.016459564,-0.0030667693,-0.0044418527,0.014815522,0.0009405871,-0.008252121,-0.012162797,0.011250698,-0.022074705,0.016466888,0.0021284937,0.0046987943,-0.00390756,-0.006257824,-0.029515723,0.022508407,0.004595448,0.0070729163,0.0041789007,-0.0076934686,0.0018712978,-0.0011679335,0.0014638474,0.006680713,-0.0014435739,0.0035907375,0.008972672,0.00765461,0.009430282,-0.0013627533,-0.007905986,-0.000899558,0.008226723,0.0015870061,-0.0035739476,0.0021977162,-0.008402725}},
      {{0.0144000165,-0.003085813,0.00044949644,-0.0042429785,0.00022005646,-0.01716898,6.593081e-05,-0.0036520527,0.0006025329,0.0025526136,-0.014283588,0.0011781246,0.0009219717,0.02397575,0.002032726,-0.020471102,0.004881797,-0.0033371472,-0.00032777627,-0.0014396759,0.008361895,-0.00041592852,0.0072458778,0.0035179341,-0.00015508202,-0.0054330123,-0.0031525888,-0.016255293,-0.005413495,0.009750668,-0.007733428,-0.0024192163,0.001867574,-0.0004940212,0.005873646,0.004546175,0.0024505486,0.0002276351,0.0023043032,0.009917141,0.006232663,0.0023380101,-0.00081604836,-0.0009628115,-0.0030625968,0.006412471,-0.0010972343,0.0030294263,0.008203537,0.006801451}},
      {{-0.00039355623,0.009550774,0.012934086,-0.003333111,0.0036243782,-0.013861264,-0.0034504635,0.0028087536,-0.011816806,0.0020035938,0.01156472,-0.0012581953,-0.0050947247,0.02399848,0.0050874064,-0.02017301,0.015898699,-0.008818884,-0.0044263317,-0.0017327525,0.0070439577,-0.012596831,-0.009628012,0.006578818,-0.0009060729,-0.0009418974,0.0034603341,-0.019473976,-0.013988029,0.0068725706,-0.010758999,0.0018461347,-0.0006075768,-0.0039202445,0.012789104,-0.0069155656,-0.0017828442,1.897284e-05,0.004212648,-0.012981121,0.00012142657,0.0062264544,-0.005912753,-0.00011434504,-0.012752381,0.002132585,-0.008006227,0.0040495526,-0.0037919974,-0.000857875}},
      {{0.0035116351,0.0020406821,-0.0023644194,-0.004704667,-0.0075886124,-0.018467879,0.0028796147,0.0006077967,-0.009926274,0.0026330987,-0.0031411254,0.0018917575,0.00092241756,0.021464242,-0.0021217281,-0.021487657,0.017086005,0.0012372021,0.0028050612,0.0028794687,0.023524217,-0.010888451,-0.003932782,-0.0021230455,-0.0027910285,-0.0020701457,0.008068438,-0.025437854,0.017537909,0.009710849,-0.0050639617,0.0050527663,-0.0026426585,-0.0026627416,0.0040724436,-0.0021940952,0.00035574316,-0.0007853882,-0.0041787256,-0.00048748095,0.0030214977,0.0028855796,0.00035966508,0.00473319,0.0027043354,0.014957695,-0.003286943,0.0016003103,-0.011106525,0.0022534716}},
      {{-0.010267797,-0.010565778,0.007557906,-0.0049778107,-0.007889788,-0.017754946,0.0057927445,0.003689992,-0.003623384,-0.00032520498,-0.002913338,0.0042936592,0.0002918011,0.021652717,-0.0015206679,-0.029073436,0.025623156,0.003691214,0.0030126907,-0.0058107744,0.018960407,-0.0038427755,-0.013998287,0.002089123,0.0060015493,-0.0017992285,-0.004798973,-0.029643709,-0.015483242,0.012387176,-0.013318678,0.0043920847,-0.00083904545,-0.00073972385,6.5405635e-05,0.00042308724,0.01251679,-0.004341052,-0.013068416,-0.00070521765,-0.0036039788,-0.0019777971,0.0038049368,0.00648882,0.0048868014,0.0059479782,-0.004448092,-0.0008866408,-0.016635489,0.005355267}},
      {{-0.005083435,0.0024962686,-0.0018238815,-0.005426902,-0.002139511,-0.01320461,0.004307309,-0.0073079346,0.0067277276,-0.004956086,-0.008058205,-0.0015970415,0.0033958785,0.019758197,-0.0048394776,-0.021079317,0.012870937,-0.012840425,0.0016246965,0.0079974,0.007131521,-0.019026142,-0.0163148,0.0076325466,-0.0017134525,-0.0038732602,-0.0034412153,-0.03684857,-0.028421665,0.012817669,-0.0033923858,0.005710803,-0.0022149927,-0.001105673,0.009754244,-0.0054302234,0.0040420904,0.0005715747,-0.005032147,0.009372355,0.008310658,0.00095516915,0.0017419292,-0.0029335583,-0.0017831344,0.0034091442,0.0010645733,0.008858919,-0.0057539255,-0.0051684584}},
      {{-0.0028952155,-0.0037977006,-0.0051389746,-0.004503849,0.0077174217,-0.017836394,0.00023518206,0.0047854735,-0.003036402,-0.0036661995,0.020462656,-0.006772696,0.0050001,0.017328156,-0.004451043,-0.011355262,0.016449582,0.0018189099,-0.0075322776,0.005243662,0.00072347664,-0.01765153,-0.007936256,0.009955265,0.0015292263,0.0014524143,0.011297566,-0.014336003,0.020787928,0.008631256,-0.0016794351,2.8989436e-05,-0.0003310186,-0.0062182536,0.0029349802,-0.0020560087,-0.0014095427,0.0070893713,0.0007884876,0.0016450742,-0.002776767,-0.0055154017,0.0003757733,0.0007809996,-0.004737517,0.0038661407,-0.0065132966,0.00057954836,-0.004364269,0.003881021}},
      {{-0.0011603222,0.0040089055,0.0031313724,-0.0011316657,0.0012083729,-0.022374718,0.004644958,-0.0035776398,-0.004804174,0.0052412413,-0.0022858696,-0.0006397935,0.004201926,0.025686093,-0.0009305007,-0.018767556,0.015561565,-0.005822513,0.0032023764,0.0055734697,0.009104576,-0.008346216,-0.01880319,0.0022813117,0.0025428133,-0.0067568864,-0.0011053887,-0.035031874,-0.018123206,0.004135698,0.0021284742,-0.00028991577,0.0011183561,-0.00080993655,0.0022315206,-0.0017729716,-0.0004790774,0.0020288161,0.004591982,-0.00032571045,-0.0013325814,0.00084917323,0.00218617,-0.002255873,4.9909948e-05,0.010476914,0.0025946405,0.00080562825,-0.012150597,-0.0015815697}},
      {{0.010012693,0.014601842,-0.008609952,0.0030638762,0.0053844564,-0.026229993,-0.0028173996,-0.014060055,-0.0033459086,-0.0011226666,-0.007252751,-0.0071036234,0.00068730616,0.026524251,-8.655359e-05,-0.022746762,0.019647343,-0.0020283263,0.008417621,-0.0026314678,-0.004122518,-0.009803486,-0.018702198,0.0024101103,0.0137050655,-0.006570669,-0.005813463,-0.030424602,-0.009963009,0.013822932,0.006246218,0.003026203,0.00016713954,-0.0091185635,-0.005428059,-0.00011383903,0.007098842,0.00084740325,-0.002644984,-0.009594934,0.009754501,0.003922875,-0.006745154,-0.010968021,-0.004077923,0.012049054,-0.003025638,0.0027739767,-0.01770981,-0.0029577394}},
      {{-0.006710127,-0.0047669876,0.0033730005,0.0006188439,0.00029355765,-0.034040075,0.0009482748,-0.0024674057,0.008107997,-0.0037041386,-0.009387262,-0.0013959467,0.010079721,0.024907663,-0.004179834,-0.02033318,0.009210685,-0.006074774,0.011708176,0.0033505196,0.011907847,-0.009083402,-0.011049645,0.0032768843,-0.0026095693,-0.00045715275,-0.012856653,-0.025719913,0.014126409,0.011547045,-0.0066465577,-0.0004653353,0.0061189365,-0.0034804514,0.0031456512,-0.001724327,0.004643468,-0.0001745355,-0.005628173,0.0035368097,0.0020316034,0.006688974,-0.0014285481,-0.0011802291,0.0021586963,0.013304273,0.004313956,0.006934786,-0.0075087207,-0.0047353045}},
      {{-0.0064368383,-0.0015258412,0.0058416273,-0.0049402295,-0.0013957706,-0.042735565,-0.015463159,-0.0039889487,-0.0004249147,0.01385189,0.02313105,0.0023079412,0.0046759583,0.022269204,0.0070559853,-0.012567173,0.016719284,-0.007174168,-0.0017502536,0.007845219,-0.0053883498,-0.022735361,0.003974392,0.0042100223,0.0058322605,0.00037722927,-0.0122471005,-0.019757697,-0.03453404,0.002875263,-0.0077502164,-0.005617946,0.004722647,0.005066958,0.007212948,-0.0035758421,-0.000120011384,0.0042522536,0.005204144,-0.009315045,-0.0045708413,-0.0019211149,-0.0018491808,-0.0005713467,-0.010450405,0.004265452,0.001402812,-0.0033499075,-0.010684313,-0.00045110346}},
      {{-0.0058383495,0.0037113512,-0.0014805959,-0.005619822,-0.0014523993,-0.029928979,0.0049013677,0.0043821437,0.000981509,-0.0063962275,0.005311372,-0.0023411897,0.007319994,0.027782554,0.005814772,-0.016587632,0.013420496,-0.005883938,0.00324286,0.004962149,0.008125047,-0.0031364542,-0.013450941,0.005664731,0.00024382607,0.001449792,-0.002105234,-0.020794876,0.009425938,-0.0018893016,0.0043499405,0.002234657,0.0049301307,-0.0027294268,0.010069569,0.00079548196,-0.002962798,0.001548889,-0.00220582,0.0034176365,0.00067297625,-0.0038581307,0.0008629223,0.0037822784,-0.0053662015,0.0053730644,-0.0038125594,0.0015203009,-0.006757209,0.0022028768}},
      {{-0.008782395,-0.00024874555,-0.010065351,-0.006510157,0.0035759858,-0.029775579,0.0026939302,0.003991332,-0.012408646,-0.009667298,0.0057466016,0.0019916312,0.0058356314,0.032092057,-0.0031812324,-0.01700732,0.015077317,-0.002668632,0.0014243659,0.0053348513,-0.006405817,-0.0016186016,-0.011224697,0.007138926,0.002779897,-0.003530553,-0.00787749,-0.020624181,0.0011521055,0.0033531166,-0.0063951374,-0.005498688,0.004641647,-0.0009926182,0.0109254,-0.010159185,0.017700402,-0.0048835184,-0.0055961558,-0.00075641356,-0.013453301,0.0015480188,-0.0014079151,0.00042956648,-0.0075299377,0.013885388,0.0033631304,0.010966182,0.0017004836,0.0016070042}},
      {{0.0054886322,-0.0024920914,0.003633782,-0.009071285,0.005147441,-0.02865406,0.0005979046,-0.0037606517,0.0003974415,-0.0046457187,-0.0038567046,-0.0062292423,0.00014392902,0.025723917,0.00716631,-0.009605618,0.0050851135,-0.008704314,0.0046161343,0.0012168783,0.014705847,-0.004286489,-0.008627842,0.001921877,-0.0017726741,-0.00426183,-0.0013302611,-0.020683344,0.00016882058,-0.006148083,6.8647634e-05,-0.0010520726,0.00030955646,-0.0009681508,0.0053521194,-0.0022398448,-6.091803e-05,0.0009960254,0.00025460336,-0.0021277578,0.015818741,0.004981692,-0.004308462,-0.002854698,-0.0004641533,-0.0061191046,0.0005972051,0.0009614274,-0.0028464412,0.013914376}},
      {{-0.0020182615,-0.0035868662,-0.00285407,-0.013380047,0.007879734,-0.04206942,-0.0047895703,-0.016240336,-0.005006075,-7.3893098e-06,0.008770573,-0.010847415,0.0019011971,0.026086539,0.0010112149,-0.0060632443,0.011367044,0.0013964287,0.0071110204,-0.013769937,-0.00037398312,-0.02020126,-0.0076510096,-0.007899108,0.0021696305,-0.0005863919,-0.00086442026,-0.02210424,0.022518482,-0.009484507,-0.012358445,-0.0011258605,0.0063650017,0.006367032,0.0002892982,0.00253268,-0.006180352,-0.0053427564,0.0028857521,-0.0042127725,-0.0002368861,0.0026710664,-0.010334134,-0.0050196853,0.0017253205,0.005215975,-0.0011744542,-0.0035420035,-0.0026620864,-0.015251223}},
      {{0.013067951,0.0016787788,0.0018400808,-0.007491375,0.0066064424,-0.024727032,-0.005820709,0.0020784815,-0.004902698,0.003974886,-0.007147074,0.0030055346,0.0072878227,0.029662954,-0.0041940496,-0.007593329,0.0070755244,-0.00044862795,0.0057771746,0.003109313,-0.0020880932,-0.016996965,-0.0024413015,0.00607781,0.00011093483,-0.00051179866,-0.0038287304,-0.017833017,0.024874428,-0.026551478,-0.0036863014,-0.002635279,-0.0011223707,-0.0019010062,0.0031915363,0.004430065,0.0028574732,0.00021573015,-0.007589057,-0.010005018,0.013795756,-0.0032132883,-0.0013231746,0.00014944148,-0.009052423,-0.0033946312,0.0006951196,0.008158056,-0.005997871,0.0013804284}},
      {{-0.0025714743,0.00022451249,0.00043036687,-0.0025848197,-0.0024270152,-0.031450685,0.0051299776,-0.0068915496,-0.006114436,-0.0021175537,0.003189007,-0.00223551,-0.006446947,0.032564826,0.0023315183,-0.012460639,0.015002543,-0.009927477,-0.012080802,0.00033279049,-0.0067859963,-0.007476335,-0.019619564,-0.00049557135,0.0033070142,-0.0015998454,-0.011610966,-0.022772353,-0.006266109,-0.019974284,0.000267381,0.00414019,-0.0062270383,0.00991756,-0.0013246965,-0.0006766038,0.0058141802,8.4978994e-05,-0.0039153076,-0.0043757414,0.005904573,-0.00033735757,-0.009223179,0.010156735,-0.0058571845,-0.0006368975,0.005100658,-0.0019618156,-0.0054687425,0.0046632346}},
      {{0.017314496,-0.002628727,-0.0028771334,0.0003655182,-0.0031350954,-0.026585136,-0.0025348691,-0.0018981241,-0.008873005,0.002208674,-0.021135628,-0.0017552555,0.0026783748,0.030829454,-0.0008589919,-0.01384453,0.0027648308,-0.005021906,-0.0032476096,0.00774213,0.010193767,-0.0071265316,-0.0043521333,0.0019381599,-0.0028841859,-0.0014631423,-0.0015672598,-0.008930979,0.0017902637,-0.02560771,-0.0033030598,-0.0037105535,8.3109175e-05,0.0009838162,0.0016632249,-0.0027232163,5.6683393e-06,-0.0008789285,0.0036821817,-0.006295877,-0.002519543,0.0040872833,-0.0011550133,0.0017797797,-0.00052818295,0.00013841102,-0.0004719648,0.0070250565,-0.02428077,-0.004613753}},
      {{0.014125219,-0.0065443306,0.0042690947,-0.0020768421,0.01780584,-0.036241118,0.005274921,0.00339405,0.018325796,0.0031430053,-0.004871977,-0.01162372,-0.002529848,0.030241344,-0.005148813,-0.009820602,0.00046753854,0.013808035,-0.0062442017,0.0030225078,0.011806226,-0.00044124198,-0.0035461434,-0.00966499,0.0017772723,-0.0024633764,0.0046860445,-0.0140571995,0.013401824,-0.0291553,0.008825991,6.671777e-05,0.0009882589,0.0021197468,-0.006940289,0.0032049462,-0.0056693726,0.0011294121,0.005320583,-0.009644501,-0.0064503686,0.0008645107,0.0059315385,0.003006175,0.004529585,0.01066938,0.00029775788,0.0007341342,-0.006251186,-0.0034226372}},
      {{0.00033198553,0.0025000686,-0.005201781,0.0016373906,0.0031996148,-0.027959203,-0.0060121375,-0.0023372667,-0.0026204514,-0.0023324392,-0.014351696,-0.0038768493,-0.0012365693,0.032585055,-0.0036862916,-0.011352156,0.0002486486,7.9222526e-05,0.011408228,0.0029329224,0.0022107854,0.001923344,-0.00033164333,-0.0014764682,-0.0019319977,0.0072226385,-0.007945263,-0.016460747,-0.008793808,-0.02918932,-0.0045913537,-0.0013064892,0.0034716295,-0.0013620523,-0.0054812427,-0.0038457469,-0.0054146973,-0.0014821475,0.00514701,0.0010338259,-0.0072190873,0.002639819,-0.00039885932,0.0032766478,0.0028143947,-0.007014605,0.0064348127,-0.0018168151,-0.005709882,0.0045142537}},
      {{0.014602594,0.0021494017,0.0007984807,0.00010693296,0.010036665,-0.03322544,0.0027035698,-0.0064076604,0.011781862,0.006203004,-0.0143186515,-0.006919813,-0.0054443954,0.033496875,-0.006807941,-0.020452963,0.0033762914,0.004620631,0.012640883,-0.009927578,0.0010315053,0.002473431,0.005781841,0.0038316357,0.0022360682,0.00024909858,-0.006949627,-0.01986515,0.0045134765,-0.013106367,-0.0030128155,0.0059764152,0.010341927,-0.01022158,-0.0032711064,0.005419059,-5.9523052e-05,-0.009882405,-0.001029945,-0.0016131569,0.0060830098,0.0038762917,0.00028810572,-0.0036568302,0.0075057507,-0.0052778013,0.00033210404,-0.009043781,-0.0087923175,0.010100009}},
      {{0.013272826,-0.002091433,-0.0035098328,0.00043110296,0.0024680754,-0.030927867,-0.0046474193,-0.0017675381,0.0108662015,0.0010340494,-0.01591333,0.00075121655,-0.0020434845,0.033358097,-0.008954601,-0.0142032355,0.002905201,-0.00645193,-0.0031626835,0.0059392597,-0.0016477937,-0.005345256,0.0040939944,0.0038758488,0.00082809373,-0.0026247394,-0.012763423,-0.007884651,-0.014227075,-0.022486575,0.0015619122,0.0008105634,-0.0011186727,-0.0021121043,-0.0025889284,0.0029401905,-0.002543758,0.0020574105,-0.0030020108,-0.005751495,-0.001069081,-0.0006761663,-0.003475694,0.0019405381,-0.0032462135,-0.010043029,0.0026766197,0.0044632973,-0.018164068,0.004843912}},
      {{-0.004064837,-0.0076932693,0.0033544293,-0.0040807207,0.0046940935,-0.03554187,0.0014225262,-0.003923038,0.0024414312,0.0010888237,0.015288283,-0.006894353,-0.0051493314,0.029906178,-0.004347736,-0.012054096,0.013419054,-0.0015502058,-0.0053370283,-0.012964226,-0.017359378,-0.014335384,-0.003027925,0.0020414258,0.0024346483,-0.0051027536,-0.024875881,-0.018154135,-0.010226932,-0.019757308,0.0012598046,0.003359016,-0.0033032335,0.0042691072,-0.0025371816,-0.0046393005,0.005977969,0.00011789666,-0.0024669757,-0.003245424,-0.010988931,-0.008863175,0.0006155747,-0.00061356934,-0.009532972,-0.0044305846,-0.0026460811,0.006619641,0.0027017212,-0.0049195145}},
      {{0.0014761755,0.0042610182,-0.0005244946,-0.004407055,0.00015700977,-0.031881295,0.0035443308,-0.0019274299,0.0108090155,-0.0036008067,0.0074235974,-0.004206059,0.0016442782,0.030212644,-0.00027415584,-0.0026256419,-0.008395398,-0.0004523452,-0.004677256,0.0034194016,-0.015037486,-0.0052235005,0.0028679767,0.0030529597,-0.0058305315,0.0011255395,-0.004833785,-0.0058467677,-0.029877588,-0.030027725,0.0055924077,0.0011633667,-4.838946e-05,0.002383929,0.008570849,-0.0037779126,0.0016139656,-0.0011752467,-0.0020696025,-0.008127838,-0.007831161,-0.0008969424,0.0032125735,0.0056766453,-0.0024413513,-0.020512316,0.0024950842,-0.0029257,-0.00073223823,-0.005260472}},
      {{0.009225383,-0.0020919088,-0.006542526,-0.0042513483,0.0066625387,-0.028492112,-0.006421584,-0.0026164616,0.011612161,0.00941176,0.0023643777,0.0068048774,-0.009659558,0.028143995,0.00015215274,-0.009909832,-0.011205542,0.0046765516,0.015813757,-0.0064393487,-0.021973528,-0.013739427,0.018308677,-0.011192324,0.0053972537,0.002980486,-0.009059511,-0.007894096,-0.013134423,-0.023519032,0.0030976676,0.008642285,0.010542725,0.0018272807,0.0012845551,0.0060656657,-0.008028972,-0.010481792,0.008991078,-0.020005558,-0.00068609347,-0.0007782026,0.0042431857,-0.00013834679,-0.013181758,-0.011952361,0.0032387446,-0.0028185477,0.005252362,-0.011952105}},
      {{0.002100778,0.0072705066,0.0029411658,-0.009306464,0.011066747,-0.029445404,0.002660081,-0.00280974,0.020263009,0.0002108266,-0.013090982,0.008327476,0.0045935097,0.02997963,0.0006611439,-0.0122011425,-0.007798884,-0.0044169673,0.001810611,0.0020030849,-0.015916891,-0.0024691077,0.0055004205,0.002342566,-0.00056222576,-0.004931527,0.00081095763,-0.0024266585,-0.009634572,-0.032868873,0.0024605729,0.001329805,-0.0032902742,-5.6502708e-05,0.0058030863,-0.00046905727,9.485471e-05,0.00025408017,-0.004179445,0.001797324,-0.008881943,-0.0055847443,-0.0015658536,0.0046811076,-0.0068590664,-0.019358117,-0.0022328778,0.0014832559,0.002937752,-0.001178456}},
      {{0.0008883967,-0.013781689,-0.008401043,0.0016709972,0.010933916,-0.03585572,0.005010569,0.0023110635,0.0011665964,-0.0009627425,-0.01355297,0.0059359223,0.00013591073,0.030521529,0.003218593,-0.005040684,-0.0074676946,0.006726497,0.028151846,0.0025363646,0.0029481964,-0.026680073,0.004555106,-0.0029970952,0.010245184,-0.0007547839,0.020244503,-0.01098517,-0.004663999,-0.021458954,-0.0007598488,-0.007248945,-0.00029800803,0.006739073,-0.0068547255,0.006445053,-0.0032017224,0.0071774274,0.0075272517,-0.008579087,0.023239162,0.0003958058,-0.0022682787,-0.008949805,0.015256341,-0.013644072,0.003710966,-0.004602882,-0.004959338,0.0029919504}},
      {{0.008591073,0.00044516305,0.00024074009,-0.0045903586,0.009099044,-0.033335783,-0.0004978142,0.0064694206,0.001182139,-0.006988493,-0.009494375,-0.0014868276,-0.006130817,0.03195976,-0.0003048361,-0.012870717,-0.0009427412,2.3691826e-05,0.003966999,-0.00041378572,-0.014257629,-0.022798281,0.013490515,0.0006042033,0.00037328512,0.0013226005,-0.009293215,-0.021474948,-0.0216056,-0.019909985,0.00919595,0.0041478104,-0.0025803433,0.0065809367,0.0072732475,-0.0056931605,0.0013310366,0.0035815574,-0.0050815055,0.0026261008,0.00059170683,-0.0012679342,-0.0010306722,-0.0002572761,-0.0023088888,-0.020315163,0.0018610732,-0.0003671523,-0.005324942,-0.0025670049}},
      {{-7.8442215e-05,0.0048836702,0.0024451744,-0.0012787435,0.0025479503,-0.0352561,0.002697431,0.003640501,0.017246986,0.0014435414,0.0013536738,0.003579419,0.00029608698,0.03240407,-0.0024793611,-0.020494882,0.003998989,0.0065930784,-0.00080300507,-0.011877314,-0.011021014,-0.019451698,0.01588171,0.0036067078,0.00042036787,-0.004728461,-0.00085920567,-0.021615978,-0.00499479,-0.021503394,0.00395573,-0.00017971234,0.00056453736,0.00074852846,0.012039129,0.007243782,-0.003792634,0.0042227833,-0.0011147475,0.0076010595,0.009328873,-0.0014231006,-0.0014508194,0.0057060737,-0.012371487,-0.0044073598,0.0059030773,0.0024361073,-0.0050841803,0.0057955575}},
      {{-0.00319646,0.0048141545,-0.00044001316,-0.0033422995,-0.0068742596,-0.033119805,0.0018096085,-0.0016174451,0.0064967386,-0.0002955845,-0.012594984,0.0060290187,-0.0053273835,0.030483918,-0.0025075034,-0.012403442,6.7735695e-05,0.00038753054,0.0041082283,0.00022801007,-0.019614046,-0.015529892,-0.0018017368,0.0019475172,-0.0012849866,-6.769295e-05,-0.007199648,-0.016529677,-0.01245106,-0.03316194,0.0042692926,0.003319511,0.0030952983,0.003851054,-0.0030224258,-0.0021625694,0.001019702,-0.00011096684,0.0034215883,0.00084194366,0.0051699653,-0.008444811,-0.0031077333,0.007137404,-0.005181493,-0.013724206,0.00020490063,-0.003695049,-0.0016343116,-0.006711485}},
      {{-0.0055747097,-0.003387523,-0.0062783696,0.0110272635,0.0071479427,-0.038922157,-0.0035964032,-0.0060969903,0.011787139,-0.0022867604,-0.01812545,0.0013562297,-0.002669402,0.03528164,-0.0033867955,-0.014901225,0.004153941,0.020221813,0.009141416,-0.01211267,-0.009622948,-0.0074913222,-0.00035602908,-0.008711389,-0.007297074,0.0042713094,0.008818685,-0.014082581,-0.00886096,-0.029751824,0.005514754,0.0058692545,-0.0014166156,0.011295687,-0.010452871,-0.005686024,-0.00089362747,0.0007534192,-0.0076612257,-0.0070485612,-0.001032966,-0.00996382,0.0015992825,0.0019872405,0.0025315543,-0.0041796523,-0.00094301644,-0.005356227,0.008408756,-0.0019898147}},
      {{0.011901348,0.0019685135,-0.001957219,-0.0019802968,0.0037862083,-0.035662137,0.0035290685,-0.0013837861,-0.0056533706,-0.0012858713,-0.0058937985,0.0011269633,-0.00850351,0.031001687,-0.0022586333,-0.013172492,0.0031434884,0.010595182,0.008601376,0.0006668734,-0.012910451,-0.022986528,0.0013359779,-0.008656015,0.0020148526,-0.0031153138,0.0031389538,-0.014436868,-0.0023292203,-0.020876464,0.0049182093,-0.005137862,-0.0033586763,0.0019698676,0.0005699898,-0.003117275,0.0022770877,5.32152e-06,0.0044230586,-0.006879202,-0.010532082,-0.0034236086,0.00074241485,0.0015222162,0.0024241265,-0.014253857,-0.005480769,0.00055621704,-0.009235015,-0.0010383535}},
      {{0.0129369525,0.006713913,0.005712201,-0.0016808076,0.0065044425,-0.03694733,-0.0013144963,-0.0011462856,0.004614408,-0.0017258353,-0.01107168,6.348132e-05,-0.0053844904,0.03066512,-0.0009987232,-0.020784082,-0.0016623619,0.0097878855,0.016550856,-0.005121086,-0.0049828277,-0.018704072,0.0062703104,-0.001128253,-0.0018128549,-0.006115117,0.002138953,-0.015976371,-0.0180601,-0.018791674,-0.0034088616,-0.0011321404,-0.0049633826,-0.0033250162,-0.0061916844,-0.0040845266,-0.0021941506,-0.00028096573,-0.0030191003,-0.007514544,-0.014776553,-0.0018579371,-0.0007279332,-0.0055413204,0.0055713817,-0.010023763,0.0035505446,-0.00979813,-0.009506831,-0.0052541033}},
      {{0.01656624,0.0012757216,0.00046331534,-0.00040173455,0.006253262,-0.03160595,0.005811285,0.0007607563,-0.008297134,-0.0027780302,-0.01729727,0.0049958625,0.0013031276,0.032006603,-0.001658605,-0.008378898,0.0035321566,0.00074631505,-0.007642754,-0.0067601423,-0.0023108136,-0.024597155,-0.0015379161,0.0025221743,-0.002797985,-0.0015696994,0.01262246,-0.015933765,-0.022231583,-0.028607279,0.0049638636,0.00011975907,-0.007245401,-0.0013447262,0.0019961526,-0.0015279859,-0.00043542343,0.0026026287,0.0015349311,0.0004804215,0.007719397,-0.003957118,0.0015818225,-0.0012744741,0.004155012,-0.016614087,0.004032323,-0.0030857208,-0.002191768,0.0020798051}},
      {{0.039748397,-0.0038797127,-0.005385269,0.0017920358,0.0043049715,-0.039085947,0.0008356965,0.0029032277,-0.014268928,0.0004992377,-0.023707354,-0.0024958458,0.003493912,0.035674293,0.006097172,-0.0073955795,0.0024676486,0.011230832,0.005074192,-0.0009148552,0.0012760592,-0.02175722,0.0071281353,-0.0047504664,-0.00045141304,0.007950991,0.01067405,-0.01436722,-0.004218851,-0.03162926,0.006869832,-0.002145692,0.00010540182,-0.0020241037,-0.0022328517,0.0033313767,0.0068940283,-0.0004425314,0.002384978,-0.007304461,0.015895054,-0.0013026105,0.00079541275,-0.0018621697,0.0046029356,0.008422111,-0.0016884857,-0.00044534326,-0.010972313,-0.007888256}},
      {{0.011335594,0.0039627706,-0.00078745256,0.00087135454,0.0027597167,-0.03325415,-0.0005966471,0.0012321626,0.0032200806,-0.0037852689,-0.004355887,-0.0004225488,0.002966589,0.032902643,0.002228652,-0.013095161,-0.0018045895,-0.001396409,0.0043909727,0.0025673024,0.004503854,-0.00792501,0.008210502,-0.004178798,-0.001758395,0.0017427958,0.010677562,-0.017961869,-0.017787606,-0.031103969,0.0031392353,-0.00020210702,0.00040164558,0.0007757378,-0.0039723865,-0.0019989389,-0.0013220918,-0.0016763083,0.0020820987,0.0070909453,-0.0017851099,0.0026073859,-0.0068140426,-0.0013607234,0.0023161722,0.0015416689,-0.0027995466,-0.0017072174,-0.0037206344,0.0059308466}},
      {{0.008726076,0.0075865686,-0.004085552,-0.002299271,-0.012912918,-0.039239954,-0.0016220382,0.011640806,-0.00879748,0.0014365255,0.0039834566,-0.0005204722,-0.002238509,0.028722698,0.0070339614,-0.006769641,-0.004496212,-0.006380201,0.0011838515,-0.0019927395,0.0056285807,-0.02650874,0.0057768817,0.0025001143,-0.004597978,0.0035987808,0.009789683,-0.021933287,-0.01687077,-0.024339085,0.003364558,0.004641398,0.005182308,-0.0050310544,-4.8023256e-05,-0.0077492595,0.004836377,0.002368465,-0.006188459,0.0020568673,-0.0036412687,0.0038614597,0.0017290402,-0.007417837,0.0091033885,0.011013637,-0.0065484,0.0011827045,0.005183568,-0.0025563976}},
      {{0.015540192,0.0036748138,-0.0014714287,0.002250379,-0.007832345,-0.034223627,0.004415617,0.00279064,-0.010071131,-0.008217356,-0.010718673,0.003423365,0.00047419735,0.03377923,0.009693326,-0.011282706,0.0005479684,-0.0022359693,-0.00052637496,0.0034962024,0.011976526,-0.0063554193,0.00537395,0.0010936996,-0.0041492777,0.0010585426,0.011857124,-0.016718153,-0.020322813,-0.031422418,0.005067914,0.0030218652,-0.0027444467,-0.0015619409,-0.0022741752,0.0005367279,0.0018667378,0.00023436353,-0.0023505818,0.009159203,-0.0007416764,-0.008309443,-0.0064685484,0.0029750878,0.0022869334,-0.00073386036,-0.004490187,-0.0019482988,-0.0076776133,-0.00042150007}},
      {{-0.005056304,0.004013144,-0.0012173587,0.0039091837,-0.008563042,-0.034469023,0.0073941993,0.0027669284,0.0003450761,0.000504115,-0.0010985263,0.0016733838,0.0059888256,0.03132329,0.0009387431,-0.011677625,-0.0027023535,0.0043125334,-0.001877475,-0.0050056595,0.008400338,-0.003294044,0.000947111,0.0024472133,-0.0023280669,0.0035884536,0.014190008,-0.019478118,-0.020085862,-0.031553432,0.0016178251,-0.003172776,0.0020260217,0.009767586,-0.0056246757,0.0032394892,0.007090609,-0.0016943133,0.004220172,0.0048373956,-0.010738534,0.0007650822,0.0018996752,0.0009845892,-0.0035969978,0.0021176448,0.008826532,0.0068007642,0.019357823,-0.003488532}},
      {{0.031514864,0.0014598551,0.00016324657,-0.0040650037,-0.0055919825,-0.036460377,0.0040619294,-0.002197493,0.009801828,-0.0002700457,-0.006831778,0.0028487993,-0.008953957,0.032727763,0.0009689079,-0.01514054,-0.0015838366,-0.003468414,-0.0020479867,0.00407229,-0.0091647655,-0.0108701335,-0.0008977204,0.00037429444,0.0016241341,-0.00089494954,0.0032176906,-0.016935406,-0.014598845,-0.036541525,0.009113698,-0.0029620365,-0.0020737057,0.004991073,0.0055112652,0.00022963365,0.0012444393,0.0020262098,0.000888256,0.0036795668,-0.0042547965,-0.004191496,0.0011074395,0.0026277609,-0.0038454763,0.0031025596,0.00012415256,-0.0028097287,-0.0020280203,0.004691953}},
      {{0.025236417,0.0038352767,-0.0015370023,-0.0016061775,-0.010121115,-0.043649178,0.0064176125,-0.0010410104,0.00043274896,-0.0019241946,0.0032287408,0.00037559177,0.0030447436,0.029650856,0.00780787,-0.014091416,-0.006420614,-0.0034627265,-0.010164134,-0.0053853933,-0.013028363,-0.02052163,0.017440565,0.0014607558,0.006908408,0.002082385,0.004485623,-0.0071165035,0.002541583,-0.030188365,0.011107786,0.0037666354,-0.00030777956,-0.0016036109,0.0045376844,-0.0009658359,-0.0023554857,-0.0021925129,0.0041501117,0.0003004556,-0.01829412,-0.011428227,0.00020900191,0.002002002,0.0066610537,0.011767919,0.0007920591,6.379376e-05,-0.0081660515,-0.0005330922}},
      {{0.028205978,-0.00094086456,-0.0010296475,0.004527805,0.0012360816,-0.042858485,0.004608527,0.0032018484,0.0043551535,-0.0036724736,-0.0058492576,0.0050555677,0.0024873817,0.027456068,0.0015482923,-0.015671598,-0.008533827,0.0016943906,-0.0071710832,0.004380373,0.0014731649,-0.0077554053,0.006398073,-0.000119930686,0.001819167,0.0012180147,0.004907914,-0.012891083,-0.005296909,-0.024249557,0.008487112,0.0014761095,-0.0062778355,0.0022971306,-0.0020155013,-0.0019885257,-0.003181481,-8.6829874e-05,-0.0037644084,0.011193867,-0.0024954486,-0.0049539995,-0.00038857645,0.0009722086,0.0007234803,0.008400799,-0.0019406122,-0.0018742902,-0.0074275522,-0.0009855266}},
      {{0.033665963,-0.0029164425,0.006802616,0.0123175485,-0.012632553,-0.048037563,0.0074345693,-0.0016658172,0.012345645,0.0032378815,-0.0036034565,-0.005697836,0.0004140754,0.028362904,0.01602789,-0.014857874,-0.009060455,-0.0025369911,-0.0032973213,-0.0007791645,-0.00036779282,-0.018043028,0.009476829,-0.0024301906,0.0009354608,-0.0021270746,0.011033609,-0.022971103,-0.016420059,-0.02200581,-1.8343602e-05,-0.007153457,-0.0032217954,-0.0022240486,0.004895682,0.0049134507,0.0020388062,0.0020191923,0.005328641,0.00072866085,0.0019271808,-0.0075485287,0.0028618427,0.0028889875,-0.0016357258,0.01205842,0.0025954032,-0.008390523,-0.00086955744,-0.0029346212}},
      {{0.0149887875,-0.00022426846,0.00085726834,0.00446394,-0.001162797,-0.04380344,0.0037045164,-0.0019619123,0.0013903646,-0.005673538,-0.0003200962,9.721576e-05,-0.00094129593,0.029340034,-0.004485327,-0.014179425,-0.0081956,-0.0041957777,0.014582137,0.0029978105,-0.009183251,-0.010163588,0.0009131536,0.00051787664,-0.0047342973,-0.0015299056,0.0035464002,-0.0145144705,-0.025922118,-0.03855589,0.0073730694,0.0021018244,0.0021164594,-0.0020159802,-0.0038029035,-0.0038038495,-0.006494508,0.0045511206,-0.004992839,0.0038451932,-0.00343458,0.0004116006,0.0024157737,0.0016989108,-0.0017764567,0.009614465,0.0025586137,-0.0044305576,-0.0018111479,0.0019436268}},
      {{0.014064231,0.006860422,-0.0013219274,-0.0015065642,-0.004856631,-0.047350436,-0.002609779,-0.001841869,0.0055085635,0.0011574328,-0.0010055806,-0.0050724023,-0.0013168986,0.029706476,0.0063616172,-0.017175706,-0.0037559597,0.0011544364,0.01154964,0.0028290611,0.0016680551,-0.011743721,0.0027444614,0.007265635,-0.00523468,0.0048444923,0.014862906,-0.021191357,-0.0071028234,-0.03225493,0.01362975,-0.008328667,0.0072068833,0.0058293478,0.0019159185,-0.0009825744,-0.003955721,0.0042232084,-0.001411253,0.0038783336,-0.0057211965,0.0061422875,0.0074424758,0.006739307,0.001601201,-0.0026065754,-0.0021537486,-0.0026563064,-0.00823645,0.010866471}},
      {{0.018759646,-0.0009992558,-7.174843e-05,-0.0030191308,-0.00039878496,-0.045508046,0.006150146,0.0049464866,-0.0016789414,-0.0030720641,-0.00034526814,-0.0027636404,-0.00066421746,0.028139997,0.00010102263,-0.013116784,-0.013314336,0.0026954089,2.0730593e-05,0.0037031092,-0.004704689,-0.005650608,0.0040586763,-0.0014300914,0.0035166286,-0.0033458397,0.009319775,-0.009740765,-0.025389073,-0.029441105,0.005356041,0.0003143108,-0.0006194356,-0.00021599655,0.003076049,-7.499246e-05,-0.0013827059,-0.0061189374,0.0011356791,0.015133171,0.004640183,-0.003674218,-0.004074513,-0.0024549286,-5.3781205e-05,0.005717983,-0.0005767448,0.0007256703,-0.007681499,-0.00023444128}},
      {{0.025806803,-0.0073153945,-0.006982533,-0.0024301407,-0.0042889216,-0.04643592,0.00089002005,0.0032178378,-0.001876819,-0.0112154335,-0.008195186,0.012157237,0.0027233034,0.029523721,0.004521793,-0.016791712,-0.011285982,0.004273343,0.0024335615,0.0040508313,-0.009135622,-0.0035580231,0.010954687,-0.002376917,-0.00020131147,0.00019091491,0.00025379602,-0.01156531,0.002267188,-0.04151782,0.0076991534,0.002875994,0.000743707,0.00090042397,-0.0015788029,-0.0062480513,0.0043173167,0.0031947982,-0.005572856,0.013039727,-0.0011621112,-0.00084757933,-0.0020735785,0.0020282085,0.004541333,0.0097409,-0.003479122,-0.009300326,-0.0025256681,-0.0046527726}},
      {{0.023785226,-0.00570795,-0.0031630057,-0.0011647926,-0.009810772,-0.0445928,-0.005973389,-0.0025169477,0.0027306161,-0.0016772335,-0.0076971105,0.0014935484,-2.86819e-05,0.027997402,0.001842076,-0.016411312,-0.01547714,-0.005922351,0.005325815,-0.0026331358,-0.0011128202,0.0052247713,0.014830467,0.00094099704,-0.0016036,0.0036630204,0.011107004,-0.013529674,-0.0036015462,-0.018485071,0.0036544644,-0.0034254363,-0.0014537184,-0.00073832617,-0.0010441096,0.0049429564,0.0014606713,0.0004786022,0.0076516108,0.009582306,-0.0042998805,-0.0018690347,-0.0021149805,-0.0045023644,0.0023567283,0.0077458606,-0.0011444943,0.003381444,-0.0039612236,-0.0008132121}},
      {{0.014995821,0.0034532114,0.0015537272,0.0024404593,0.0013484875,-0.04503301,-0.004769252,-0.0021058484,0.0031566748,-0.0039934292,-0.011996547,-0.006429286,-0.00068371696,0.026275778,0.0008060069,-0.009217887,-0.011645715,-0.0033603972,0.002440204,0.0038926112,-0.00022423505,-0.007843644,-0.00062586257,-0.0027960981,0.009216838,0.0022706816,0.0042864922,-0.00854489,0.02026997,-0.04543491,0.0070987586,-0.001445436,-0.0051224,-0.0089789415,0.002349677,-0.00029429735,0.008409428,0.0026208565,0.004131262,-0.0023698327,0.003354505,-0.0018566693,0.0041495315,0.0038926266,-0.0019018018,0.0057270373,-0.0014784278,0.0068041217,-0.017323699,-0.0009302669}},
      {{0.008016512,-0.0004915167,0.0021907852,-0.0011991424,0.005663584,-0.05184204,0.0058237608,-0.0032371285,-0.0020084511,0.0035336069,-0.017698942,0.0057475013,0.0040045087,0.028602721,0.0013720649,0.0009065543,-0.0052519795,-0.0043306774,-0.039384525,0.0041414793,-0.011507498,0.0063506225,0.0046401476,0.0029964715,-0.00582521,-0.002782171,0.001524563,0.0097719,-0.010400934,-0.041490547,-0.0015107634,-0.00084162847,-0.001634269,0.003913397,0.006480223,-0.0029127316,-0.0004348709,0.0036528113,-0.00045139773,-0.01432812,0.0064646644,-0.0029373036,-0.0013331715,0.0049652993,-0.010813197,0.016685937,-0.0030400497,-0.003024522,0.0019236581,-0.0032044656}},
      {{0.008304163,-0.007537208,0.006415802,0.006390243,0.027325355,-0.056723252,0.0041382406,0.0025117344,0.0026607986,-0.0049588196,-0.01195597,-0.004046238,0.00019249103,0.026694095,0.002795897,0.00010446897,-0.0023777462,-0.0011064749,-0.01866371,0.010025534,0.0060391463,0.010040095,-0.0013712146,-0.004053083,-0.009617485,0.002796612,0.0023713033,-0.0026869976,0.0055175894,-0.04255539,0.0012095933,-0.0030033858,-0.0068844226,-0.00084625586,-0.004514161,-0.0068296692,0.0038761909,0.0047475034,-0.00061654265,-0.005879383,9.1248825e-05,0.012606247,-0.0028963978,0.00609815,0.00036961792,0.045899723,0.00028725414,-0.007116057,0.0042301924,-0.0016531768}},
      {{0.006181753,-0.0014338092,0.0009726953,0.002148701,0.00081650965,-0.056720506,0.00064150855,-0.0037795822,-0.02605559,0.0005081277,-0.017340165,0.0029334202,-0.0020683592,0.019833116,0.0018061183,-0.0007999909,8.336232e-05,-0.0013696299,-0.015779704,-0.0035386165,-0.00910853,0.01589404,0.002775121,-3.92269e-05,-0.003632178,0.008030372,-0.0020490817,0.0065339715,0.010131605,-0.043492474,0.001572518,0.00736653,-0.002053857,0.0055266633,-0.004714112,0.00089178095,0.0021101146,-0.002767841,-0.00013004654,-0.013079759,-0.016158305,0.0013038743,-0.0033213214,0.0031713303,-0.003248155,0.019221107,0.0029396536,-0.0064510866,-0.0019147409,-0.001970109}},
      {{-0.006373614,-0.001461305,0.0002617155,0.00020104088,-0.00092949066,-0.06900637,-0.006472482,-0.0053044185,-0.02274106,0.014933805,0.00012675456,-0.0109420195,2.8441682e-06,0.014947931,0.003654128,0.01404569,0.004560998,0.008213056,-0.009694751,-0.005143228,-0.0041560973,0.016920986,0.02797638,6.844692e-05,0.00958327,-0.00569543,-0.0049608056,0.0074158725,0.0034369442,-0.04371858,0.0041742898,-0.0072477334,0.0033624957,-0.0048899204,-0.007213928,0.005913105,-0.0071659894,-0.009243887,0.0043707634,-0.005101696,-0.012513362,0.0109830145,-0.0049937177,-0.002284011,-0.008075726,0.022698356,-0.0057822443,-0.0008204645,-0.0023737994,-0.0027611863}},
      {{0.011556393,0.0007493276,-0.0027251747,0.0037372615,0.008585642,-0.06168937,0.0036107544,0.0017195645,-0.0077592516,-0.0036989201,-0.025802681,-0.003569612,-0.008626066,0.016553005,0.004716243,-0.0027295195,0.010819268,0.005140381,-0.010799646,-0.0048319134,0.00093645486,0.015123399,0.007878029,-0.01169012,-0.0010124408,0.0026992674,-0.003960489,0.013594219,-0.008476728,-0.039319694,0.0061108717,0.00025691238,0.0015542099,-0.002096731,-0.0034416597,0.0063352496,0.0038082718,0.0018548977,0.0020014043,-0.007438049,0.012920609,-0.0005411536,0.00082562235,-0.0021030086,0.011703552,0.0031109124,0.0026209462,-0.0054649618,-0.006629671,0.00284445}},
      {{0.009845401,-0.00035422575,-0.0037733386,0.0140180355,0.011693213,-0.06723295,-0.0114620235,-0.0064155604,-0.0060893917,0.00048460398,-0.016751101,-0.0017821935,-0.0016745998,0.011687306,-0.0007992437,0.0033310214,0.012132501,0.018794565,-0.008791739,-0.0049658995,-0.002597386,0.0017085858,-0.002546989,-0.013063099,0.0036667234,0.0050679324,-0.003945503,0.0087306015,0.0043460065,-0.03585367,0.003447111,-0.001272761,0.002041773,0.011051283,-0.007528123,0.005523038,-0.009129128,0.00017818106,5.8326492e-05,-0.0004388934,0.009631099,0.011553293,0.0065508154,0.0004165685,0.0032462827,-0.0034978369,0.0023625211,0.0031943202,-0.023744872,-0.0076546427}},
      {{-0.004619269,-0.0052352827,0.0010161235,-0.00040157785,0.0053005805,-0.06645898,0.0068545244,0.00023151013,-0.0183177,-0.003578594,-0.019881668,-0.008191717,-0.0028879074,0.005734051,-0.001544632,-0.009557168,0.017314423,0.004808929,0.006178363,-0.004686891,-0.0058076438,0.017987162,-0.0048350696,-0.0006692491,-0.0033570023,-0.0024927913,-0.002944527,0.01760198,0.025874043,-0.040780928,-0.001586213,-0.0013875702,-0.0015743178,-0.0015006034,0.0021499367,0.0018163527,-0.004645922,-0.0018352154,0.0033889473,0.0020681752,0.005884411,0.001987387,0.0020121236,-0.0028765376,0.0073824283,-0.01671935,0.0012753092,-0.0017588267,0.006309404,-0.0075187837}},
      {{-0.0024287503,-0.005476854,-0.0005467277,-0.009246056,-0.0071732886,-0.07325365,0.0004225436,0.0028418002,-0.017693864,0.010349408,-0.02559229,0.0027977466,0.012708537,0.0078910785,0.0005314131,-0.015964126,0.014951998,-0.009336723,0.009178212,0.0008734874,-0.0026290086,0.031148447,0.0065994794,-0.0003109198,0.002374348,0.002591122,-0.012154765,0.027491441,0.009121114,-0.029953942,0.0078452015,0.010632878,0.0052737948,-0.0076932576,-0.0007049668,0.0048389584,-0.0039253514,0.0023872803,-0.008924553,0.004757935,0.0013665782,-0.0015806349,0.00055930734,-0.005585266,0.0064884354,0.0035972302,0.00031057265,-0.00026198785,0.0068704966,-0.010632779}},
      {{-0.003146145,-0.0030381444,3.4090408e-05,0.0038188817,0.014130584,-0.06216189,-0.005068352,-0.0049403254,-0.02397738,0.012441768,0.0027357787,-0.005347851,0.0031878601,0.0018500793,-0.0040986044,0.012689856,0.020863377,0.003584307,-0.00044583267,0.0005023926,0.009487893,0.00098172,-0.0055432906,-0.0057351408,0.0051886532,0.0054272735,0.010918591,0.021516792,0.004888328,-0.03049075,-0.0087200105,-0.007950347,-2.4065304e-05,0.0012254382,-0.0044279303,0.0054726214,-0.005537929,-0.009328771,0.0057227514,-0.005638477,0.024750749,0.012636387,0.009832175,-0.011341709,0.007849682,-0.019328432,-0.0050156494,0.0048209536,-0.0021634966,-0.00023947765}},
      {{-0.01554446,0.003537169,0.012446576,0.0017633049,-0.004027767,-0.07065805,0.011025202,-0.009092668,-0.004351283,-0.0066151237,-0.00157645,-0.0050038747,-0.0059107253,-0.0030292245,0.0029314014,0.007236241,0.023842538,0.018866155,-0.0047775093,-0.0010895695,-0.006526374,-0.007555468,-0.022635244,-0.006558577,0.0019297982,0.00087753846,0.011681879,-0.0060015675,-0.005446517,-0.027996724,0.0046717813,-0.007624023,0.0037526407,-0.005379975,-0.006920303,-7.499411e-05,-0.00021922855,0.010579833,0.004855527,0.0076949904,0.031886928,-0.008139318,0.008188886,-0.006703768,0.01259885,-0.01932549,0.0017226352,-0.0037727486,-0.0073233806,-0.0020896865}},
      {{-0.0055961073,-0.0051945425,-0.0037894256,-0.00022471913,-0.0041711843,-0.06003385,-6.249961e-05,0.004772086,-0.0074105957,0.003633965,-0.018676598,-0.0005455828,-0.006237904,-0.005406597,0.0032254898,0.015420244,-0.0032613447,-0.0023483355,0.033979576,-4.490344e-05,0.018374583,-0.0047902656,0.013317647,-0.0026741757,0.0070750443,-0.0007545642,-0.0012882377,0.024814798,0.016130278,0.002213192,0.0032256355,-0.00018900861,0.0010289006,0.00073948747,-0.006183428,0.007962614,0.0018733634,-0.0017744347,-0.003061072,0.0034807026,0.01611147,0.004067988,0.0012225253,-0.01034493,0.013030302,-0.005746849,0.0046034832,-0.00027118903,-0.03431181,5.6127814e-05}},
      {{0.012069717,-0.0034262554,-0.00037556328,0.008300638,0.005471069,-0.07202546,-0.0022374876,0.0014570882,-0.0031494875,-0.0016932739,0.0014887702,-0.0033158911,-0.0021898856,-0.012719664,-0.0006795576,0.02539627,0.0032063597,-0.004507216,0.025429362,-0.0056462702,0.005342483,-0.031296022,0.029091693,-0.0002675151,0.008150626,0.009597603,-0.003286192,0.029483682,0.047129143,-0.0039233705,0.021710407,-0.0018285447,-0.0016062115,-0.0013950828,-0.006804664,0.0056879045,-0.004465041,0.0011338488,0.017037377,-0.0021849666,0.03651029,-0.0006307281,0.021307135,0.0010300509,0.023114145,-0.005189453,0.0009508157,-0.003660907,-0.0315974,-0.002532695}},
      {{0.0062583345,0.0022715675,-0.003101668,0.002740218,0.009198436,-0.05559954,0.0021377879,0.0025390296,-0.0061369776,-0.0032979446,0.027032938,-0.002010052,0.0011823642,7.157443e-05,0.0026332252,0.030111473,0.02874795,0.00018572359,0.014734628,-0.00075858575,0.02053127,-0.012966578,0.008539072,0.00086234184,0.008839582,0.002343881,0.002507599,0.025420325,-0.007610899,-0.0012816355,-0.0054445653,0.001384085,-0.002337625,-0.0044798194,-0.0038216799,-0.0006642978,-0.0027147331,0.001049769,-0.0035659312,0.010946462,0.019932868,-0.0018959461,0.0029231831,-0.00227507,0.01196256,-0.026040733,-0.0034499809,0.008184995,-0.0020219036,0.0063039004}},
      {{-0.005197262,-0.0059051407,0.014691554,0.0026888405,-0.004122894,-0.060796928,-0.0068705482,-0.00061266567,0.02112023,0.012950039,0.00046265067,0.0025062035,0.0057903333,-0.005622192,0.021765023,-0.003946774,0.02784941,0.016412903,-1.0816632e-05,0.009058223,0.031933714,-0.029295849,0.0005982548,0.0072556115,0.0043857372,-0.0109660365,-0.0026954368,0.016917743,-0.003459997,0.0039233165,-0.011091744,0.004725195,-0.0012090366,-0.0016798853,-0.010193058,0.00018007023,0.007372771,-0.002651759,0.0054815263,0.008737173,0.042788714,-0.0008903555,0.007862836,-0.009334733,0.009498575,0.0038964376,-0.0029696573,0.007478563,-0.0040623494,-0.0024430081}},
      {{0.0066993413,-0.0034274973,0.0045125796,0.0012795557,0.0049943244,-0.09091079,-0.0054873577,0.0027235395,-0.0031995676,0.008837034,0.03456853,0.0020673936,-0.0070728655,0.0066151246,0.0024497863,0.006019875,0.00042070597,0.009937111,-0.008892209,-0.004444125,0.020947767,0.011693885,-0.0068210512,-0.0065312968,-0.009043223,0.009148155,-0.002777283,0.0352539,-0.03437236,-0.040244713,-0.014196433,0.00029301568,0.00010602303,0.0042414395,-0.0033162052,0.0008980341,0.0009349958,0.0049364236,0.0024961196,0.0015858201,0.006265366,0.004147824,0.0008467677,0.0007317215,0.005562192,-0.009120679,-0.0022254353,-0.007763563,0.0360417,0.0021556944}},
      {{-0.0075592147,-0.0054983073,0.00066906214,0.0008351127,-0.011069053,-0.0934258,-0.0102891,0.01609481,-0.0043299976,0.00067267474,0.018416788,-0.009875666,0.009052023,0.0008518201,0.004413701,0.0046506193,0.0017298918,-0.007945819,0.0069463714,0.012593303,0.031271152,-0.0058479626,-0.010806412,0.003049727,0.012347557,-0.0008490147,0.0163343,0.029224018,-0.0058737,-0.02016536,-0.023747265,0.005509609,0.0074373162,0.00012049295,-0.00401318,0.0035420244,0.0047735013,0.0040709483,0.00021703824,0.005399336,0.0134169245,0.0044252723,0.0038212878,-0.00015571785,0.010507434,0.025959855,0.0071085147,-0.0010229808,0.010347715,0.0071257874}},
      {{-0.0064285225,0.0018555317,0.0013051844,0.00029256032,0.008621295,-0.07969091,-0.0035792147,-0.0044083768,-0.001854137,0.0033159752,0.015481938,0.0011811855,0.0030468882,-0.008256176,-0.0032022393,0.0058171796,-0.0030379128,0.0036105502,-0.006195476,-0.0051499107,0.0074712005,0.0032360295,0.028325249,-0.0016495456,0.0035063198,0.0021831866,-0.007867562,0.025680825,-0.046503935,0.025236957,-0.008377428,-0.0019235269,-0.0010946906,-0.004076839,-0.00025469315,0.001216816,-0.0067124334,0.0034910904,-0.00544424,-0.009551071,-0.0033932545,0.0032798443,0.0053673354,-0.0021367893,-0.0065014926,-0.0015392166,-0.004100539,0.008185718,-0.0012667562,0.006579674}},
      {{-0.002655281,0.003661964,0.00081471354,0.0020478743,0.009065235,-0.080407046,0.0008716037,0.006657224,-0.007830173,0.004431032,0.017737566,-0.0010369641,0.007874726,-0.018064937,0.004954274,-0.005294406,-0.00020959128,0.0070193303,-0.025228467,-0.0020603621,0.008463314,-0.008649002,0.020074543,-0.003542954,0.0062683225,0.0031124519,-0.013114146,-0.0031431192,-0.014091244,0.02274839,0.0032410035,-0.005455609,-0.0035099771,0.001111123,-0.0035491644,-0.013041218,-0.00064139074,-0.0017189678,0.008510378,0.000742658,-0.0014642674,-0.0012666872,-0.00467819,0.014012595,-0.0011729333,0.0068331985,0.010622328,-0.0058340128,0.00282713,-0.008745676}},
      {{-0.00935184,0.0069142063,0.0025266553,-0.00064528745,-0.00018765505,-0.084722325,0.003224189,-0.0023777948,-0.023587069,0.0011629934,0.05136982,-0.0010355545,0.0032137993,-0.021350186,0.0018995336,0.013391347,-0.0023066334,0.0044389777,0.0007105037,-0.0009514901,-0.0036653266,-0.016036058,0.011019689,-0.0066421544,-0.00035857662,-0.0022895169,0.0037939276,0.012908474,-0.036408763,0.023530018,-0.002974479,0.0007688509,0.0015117896,-0.007276861,-0.0050548995,0.0032959876,0.0015756364,-0.0019824104,0.004164601,-0.016442884,0.0016120614,0.002265848,0.00015983506,-0.0004934674,0.005617813,-0.0049078097,-0.001211875,0.0012519837,-0.009508992,0.006228913}},
      {{-0.01583404,0.003845866,0.007090271,0.0058314456,0.0046951817,-0.08113633,0.00038729212,-0.0021726503,-0.010847758,0.007329157,0.018209364,-0.0029343688,0.006890365,-0.020880327,0.001088591,0.004327698,-0.00018107101,-0.018984107,0.007298708,0.001444046,0.0014330744,-0.026083954,0.00860617,0.0017448484,0.0047575613,0.006559138,0.004672984,0.028035156,-0.0018474736,0.03958555,-0.011456298,0.00013644937,-0.008607307,-0.00768321,-0.005280549,-0.0015430633,-0.0046361033,-0.004217155,0.0057957605,-0.020514056,-0.011219466,0.009014256,-0.008332566,0.0026522945,-0.0007527569,-0.0002970263,-0.0015842747,-0.005920234,-0.012465325,0.003922523}},
      {{-0.025050111,-0.0048892237,0.003000896,-0.0012738378,0.0042647584,-0.0786527,0.006691802,0.008750509,0.0044898223,-0.002283381,0.048356686,0.002293343,0.004087207,-0.015145367,0.0021602584,0.03252481,-0.018855957,0.00168822,0.005138001,-0.0014919412,-0.003940556,-0.019654257,0.025244119,-0.002211762,-0.0046361084,-0.001233622,0.00680955,0.035365146,-0.056708593,0.036597118,0.008849666,-0.0067498405,-0.00026376423,-0.00268248,0.0020103045,-0.006013108,0.0020943773,-0.0025448594,-0.002494405,0.005754672,-0.010757049,-0.008218595,-0.002777349,0.0040885424,0.0045153205,0.0027519,-0.009141248,-0.0038700467,-0.0042024576,-0.00014804432}},
      {{-0.013433158,0.0024654313,-0.011082333,-0.006634239,-0.017609011,-0.08510205,0.0033647537,0.006552042,0.0018877076,-0.007840459,0.0016489036,-0.002120697,-0.006213008,-0.02297585,0.024504034,-0.01330126,-0.0011506538,-0.005961903,0.023713388,-0.0029850407,0.0071275043,0.009123747,0.015377082,0.0041479836,-0.0096845655,-0.017757505,0.0046551405,0.013161558,0.004357293,0.03680792,-5.75651e-05,0.002838354,0.0058390694,0.0026293502,0.007149074,-0.020005815,0.011736456,0.0063090418,-0.024240786,0.005899573,0.0040974934,-0.0090302,-0.0034326017,0.014580127,0.0071293344,-0.0017482252,-0.011915085,-0.012930234,-0.007189313,0.003914029}},
      {{-0.027225947,-0.0012015523,-0.006069991,-0.002252985,0.013035205,-0.0853188,0.0138578,0.00040540262,0.003936415,-0.005425336,0.019922297,-0.008208294,0.0022212623,-0.020527743,0.0037647574,0.006248511,-0.01919471,-0.00013271485,0.0130508365,-0.0030956552,0.023441695,0.009989644,0.013441313,-0.004047305,0.00070901687,-0.0018754671,0.001854374,0.020898622,-0.03798547,0.044874504,-0.009317959,0.003571498,-0.0030355428,0.001070414,0.00246071,-0.0063107554,-5.2991876e-05,0.0054200566,-0.00361367,-0.0053351275,-0.005600907,0.008453376,-0.001956176,0.0006486859,0.013976903,-0.01172884,0.003249645,-0.0012668049,-0.006983585,0.0055022254}},
      {{-0.022681473,-0.0012082332,0.007539079,-0.000390083,0.013921711,-0.090874046,0.0076821293,0.00017219211,0.012250961,-0.0104498565,0.028990304,-0.0031372285,0.00043400552,-0.02756063,0.010072816,-0.010956424,-0.015190554,0.0035065676,-0.0047182734,0.007585537,0.015468143,0.012870623,0.015275822,-0.00541686,0.0021552837,0.011230752,0.010170366,0.017632416,-0.014993612,0.034391083,0.0024548802,-0.008525756,-0.00199861,0.002876165,0.003805809,-0.0020235882,0.011007854,0.0012898431,0.0010662366,-0.0054788636,-0.010135029,0.0018820858,-0.0024567076,0.006622913,0.016520076,-0.0275255,-0.014610574,0.0035800843,-0.013796998,-0.00086882967}},
      {{0.0014221384,-0.0027914273,0.0011814735,0.0016423279,0.01062494,-0.08929375,0.0040036533,0.001873356,-0.0022511992,0.002924398,0.03735947,-0.003675702,-0.0018435679,-0.0216004,-0.00031401406,0.00072789576,-0.008179077,0.0037537082,0.009131343,-0.0016808676,0.0091358265,0.0069492296,0.023079047,0.0018022762,0.0065643988,0.00035243417,-0.02040491,0.023564039,-0.0029829096,0.023866711,-0.0012642036,-0.0017364192,0.0039500613,-0.002556039,-0.0058820457,-0.004686407,-0.0046113785,0.002215028,-0.003695603,-0.0019156818,-0.03065274,0.0016181535,-0.0012864643,-0.0027516887,0.0014614163,0.002783957,-0.0022127354,0.0051422217,-0.008246784,-9.611967e-05}},
      {{-0.029080868,-0.0036936936,0.016195513,0.0018079162,0.003991407,-0.0919905,0.015746204,0.004827908,-0.0035349359,-0.016089642,0.030506872,-0.0070277075,0.0010813829,-0.027720688,0.012150145,-0.004051625,-0.008222621,0.005369369,0.022277791,0.018232744,0.01915759,-0.004350414,0.0024133432,0.0042678183,0.0023941712,0.0015734734,0.018882398,0.014198408,-0.0067879157,0.031219896,0.008741652,0.00056632626,0.00020587459,0.0009783662,-0.0056031905,-0.002018267,-0.009843912,0.005216736,-0.0045865257,0.0013814507,-0.015800722,0.012126113,0.0042572883,0.0012188382,0.009760273,-0.0025064864,-0.0061873393,0.0076101394,-0.003809173,0.007211368}},
      {{-0.0134475995,0.0020483008,-0.003911225,0.002848889,0.012143814,-0.087236464,0.0031970202,0.0052926275,0.0036033697,-0.0008403343,0.025016,-0.0028263861,0.0009660407,-0.020288529,0.000701943,-0.003169477,-0.007778747,0.0023338567,0.012180149,0.004931674,0.005037273,0.011066714,0.0016377323,0.0029428897,-0.0019439211,-0.0037316731,-0.003324624,0.026522778,-0.046384376,0.033282783,0.0013328749,0.00034540455,0.0049853865,-0.0032482282,0.008344187,-0.0041159107,0.008179812,-0.002071997,-0.0067671537,-0.007904522,-0.011157171,0.0006695462,0.0013063602,0.007786034,0.013732129,0.0005608443,-0.0013585422,-0.0037725137,0.0018852943,-0.004342639}},
      {{-0.013268693,0.008818333,0.0044476646,0.0010938991,-0.008145326,-0.09132707,-0.0036885892,-0.0033924857,-0.0045568924,-0.009527407,0.0769825,0.009075439,-0.009354137,-0.030288186,0.012090865,0.0013263507,-0.0123718,0.003491551,0.014125782,0.011216948,0.0054182615,0.0080327755,0.0148602165,0.0015625881,0.004461349,-0.01524345,0.016270993,0.017798703,0.003265397,0.033990584,-0.004485813,-0.0041651735,0.00064592744,0.007315389,4.273424e-05,-0.002007986,-0.008073914,0.008210001,0.0073302193,-0.0014962998,-0.013852806,-0.0031000923,-0.0010540383,-0.0050882967,0.018773222,-1.5770502e-05,0.004409268,0.0077122003,-0.021419434,-0.0028513353}},
      {{-0.013326619,-0.003361709,-0.0034955111,-0.0071792547,-0.0038478258,-0.08437689,0.0019987165,-0.005565768,-0.013371232,-0.00072950777,0.031126913,4.9984716e-05,0.0047873245,-0.021291845,-0.00087296125,-6.805282e-06,-0.008690711,-0.004314044,0.015334924,0.0029418606,-0.0021759088,0.0052493205,0.0054723113,0.0019789345,-0.00033681377,-7.3761774e-05,-0.00615209,0.034235384,-0.056647185,0.03589153,0.0021207337,0.003431582,-0.0005663639,-0.005307878,0.005382211,0.0033063232,0.003210827,-0.0021858888,-0.0022672783,-0.001218122,-0.011183113,-0.0006921403,0.0005622449,0.007440333,-0.0033611234,0.008309311,0.0026413016,0.0032980556,-0.013519207,-0.002758381}},
      {{-0.019856542,-0.005660893,-0.0039049094,0.0016098943,0.0036879652,-0.09309234,-0.006220852,0.0031613214,-0.0208621,-0.00073995115,0.031023847,-0.0016413168,-0.0033658335,-0.029036907,-0.000113931135,0.000185148,-0.0043896907,-0.00727757,0.005600179,0.008080878,-2.6149193e-05,-0.0037697179,0.011606982,0.0037793603,0.0037608633,-0.0012894648,0.0037221955,0.01703081,0.0077234698,0.03359895,-0.004033665,0.0030079624,-0.0014720705,-0.0042165616,0.007810271,-0.0058850977,-0.0025968258,0.00074594584,-0.010641244,0.0056904573,-0.0019106298,-0.009332115,0.0039241808,-0.00087723974,0.00048238286,-0.002111013,0.012366612,-0.004907105,-0.014454219,0.00309135}},
      {{-0.006373111,0.0036527344,-0.00017808662,-0.0019281862,0.002553406,-0.08727851,-0.00040682865,0.00049860793,-0.01124299,-0.000955833,0.010784186,-0.0029522562,0.003358581,-0.020805573,0.0037905104,-0.007575097,-0.009875196,0.0016319087,0.02387424,0.0010365946,0.004295263,0.017247058,0.00044857655,0.0004276602,0.005985525,0.00015935556,-0.007378946,0.025683548,-0.04183065,0.039449386,-0.0010009328,0.0069205374,-0.0022462993,0.0025152992,0.0017790233,0.0013800632,-0.0054545472,0.0049871183,0.0055294614,-0.0033999952,-0.016381897,0.0013728497,-0.0037217143,0.006448119,0.009001401,0.005877642,-0.00486755,0.0028416205,-0.00064707396,-0.0028764857}},
      {{-0.017448235,9.9657525e-05,0.0015066436,0.004471478,-0.008168847,-0.0830938,0.012867598,0.009066406,-0.0034275246,0.005856948,0.011325008,0.0008164894,-0.0077941897,-0.02152233,0.01190048,-0.008362041,0.011865679,0.0064936844,0.020306092,0.0014370211,0.00818993,-0.021146685,0.005407033,-0.012457188,0.0034761508,-0.00039432288,0.017325012,0.013524382,-0.003609716,0.032600127,-0.0009112157,0.010871327,-0.010905315,0.008243237,-0.005431057,0.008109374,0.00035209116,-0.007819407,0.008295078,-0.014067306,-0.0028808045,0.003910887,0.011630133,0.0088387495,-0.0074872887,0.007083937,0.00039548433,0.0030219469,-0.0007711292,-0.0060524666}},
      {{-0.013302058,-0.004419437,-0.0042616013,0.0011973487,-0.0037458958,-0.09230518,0.0116618695,0.005485773,-0.0008287819,-0.0058623976,0.01671718,0.0033137526,-0.0029469756,-0.016818872,-0.007439089,-0.001621403,-0.0124452375,0.0020571875,0.015939398,-0.0011790358,-0.0075484742,-0.0007960094,0.012492127,0.003308574,-0.01049708,-0.0057799704,0.0021596185,0.033950143,-0.0073186792,0.04142119,0.010776129,0.010320302,-0.006085834,0.005447922,0.0071739913,-0.0011717515,0.0030385694,0.0012160412,-0.0059214984,0.009931225,-0.011849432,-0.005863111,-0.0054736524,0.0043637203,0.00056741555,-0.012458096,-0.0002477042,-0.0015104227,0.0026943253,0.001061117}},
      {{-0.021210607,0.0016373408,0.007728822,-0.014590781,-0.008876945,-0.09544612,0.014538939,0.0026484912,-0.0038192382,-0.0029751149,0.032286063,-0.00829264,0.007030139,-0.025494538,0.0048624305,0.0036542362,-0.008034415,-0.005987134,0.016938135,0.006049901,-0.004809644,0.0021581175,-0.016087964,0.0076939766,0.00024824968,-0.00024800145,0.021233326,0.012272663,-0.002899164,0.025457358,-0.004632469,0.0016259286,-0.00080069725,-0.006981858,-0.0011738087,0.004357457,-0.0072587673,-0.011632388,-0.0015043697,0.0020316162,-0.0120039545,0.0060963966,0.0041521485,-0.0022676033,0.007323188,-0.0019771832,-0.004198391,0.011376255,0.006418958,-0.0062666256}},
      {{-0.027837917,-0.005579357,-0.0041243755,0.004921415,-0.01702649,-0.089945324,0.004038057,0.0031186324,-0.02486019,-0.0055191023,0.019267714,-0.0025914505,-0.00084242923,-0.018464347,0.003089624,-0.003275536,0.0055522276,-0.012242138,0.029419355,0.0033432294,0.0019981228,-0.008391338,-0.021191634,0.00048443687,0.0030540666,-0.00487455,0.017473787,0.031305958,0.0039903386,0.028977187,-0.0020608148,0.0014787988,0.004794193,0.002031309,0.0007733484,0.00086514716,0.006951707,0.00032362744,-0.001305334,0.0020888618,-0.0032591783,-0.005236349,0.000106420324,-0.0007573774,0.0014438807,0.00091786537,-0.0052034818,0.0028034614,-0.008651161,-0.0063358867}},
      {{-0.027887072,0.00075728924,0.0021403134,0.005119648,-0.013751181,-0.09434392,-0.0095494725,0.016552113,-0.026202166,-0.01594363,0.048451077,-0.0019675565,-0.0028818417,-0.022195354,0.0022352852,0.003645527,0.008263553,0.0016053434,0.014343556,-0.0002197933,-0.019335732,-0.027393546,-0.014555683,0.009142053,0.0028293573,-0.0009591749,0.0135645205,0.029379372,0.034338146,0.018441968,0.009566677,0.0021006877,-0.004912367,0.003997401,0.005567665,0.001153679,0.008554115,0.0056247404,0.0024720049,0.003093005,-0.0016716792,-0.014245837,-0.0014566511,-0.0023986162,-0.0024800696,-0.00813567,0.010465671,-0.020435065,0.0060429415,-0.0023745585}},
      {{-0.025021335,-0.0025721225,-0.0026663875,-0.00020775879,-0.0018367058,-0.09221961,0.004912773,0.0042386786,0.0065521775,-0.0018469631,0.028831787,-0.004478172,-0.0017821788,-0.0174532,-0.0023123533,-0.011241582,0.012718405,-0.0048607276,0.012230938,-0.001163721,-0.0034500624,-0.0064174626,-0.026876615,0.0025375667,-0.0024393622,0.0002225823,0.019171998,0.02585138,0.014973698,0.027261388,0.005931963,0.0070546637,-0.0022992569,-0.00013455491,0.007790552,-0.0060229884,-0.0013894854,0.0018216309,-3.616107e-05,0.002827065,-0.020774836,-0.0074578887,-0.0057685236,-0.0004384281,-0.0017905609,-0.016924378,-0.0036465775,-0.005235487,0.012060289,0.0060987337}},
      {{-0.012925805,-0.0014897693,0.006182947,-0.012507577,-0.022367302,-0.08800361,-0.013560349,-0.008670894,-0.0018844088,0.0015726942,0.019165214,0.007131336,0.008383672,-0.017308367,0.0035092845,-0.012025103,0.03717249,-0.010343848,0.010454139,0.0019447467,-0.016112888,-0.022111192,-0.032905377,0.0022869257,-0.00485876,-0.005617296,0.0031674525,0.016546177,-0.0135894315,0.012008104,-0.0072200256,-0.007390639,0.0070067374,-0.012532968,0.0015531938,-0.0026779687,0.002225686,-0.005941017,-0.0019859413,0.0027050783,-0.009744342,0.00090468675,0.0058369995,0.007972859,0.007133352,-0.013882806,-0.0027470724,-0.0007212776,-0.0018963626,-0.010244761}},
      {{0.01671191,-0.0077524553,-0.00060168933,0.0022162322,0.0013295687,-0.08986379,-0.006440793,-0.0024435178,-0.005585724,-0.00489198,0.01491971,0.001452361,-0.0002301603,-0.01206006,-0.0056406804,0.0029786234,0.00072435214,0.0020670206,-0.006279364,-0.00874121,-0.0180641,-0.021346087,-0.035202105,-0.006909965,0.0051966375,-0.0026223485,0.0019591984,0.019412324,-0.010229408,0.03390205,-0.000892076,-0.0032859687,0.0038366811,0.0050968863,-0.0055928514,0.004692063,-0.0041030315,-0.002824312,0.00470583,-0.0024837926,0.005786033,-0.00076705596,0.0016075997,-0.0036410824,-0.008291986,0.004580196,0.00323367,0.0035395576,0.010481451,-0.0032722747}},
      {{-0.008391112,-0.009105332,-0.0036707956,-0.013074329,-0.04985644,-0.0822286,-0.004202034,-0.012127111,0.010716917,-0.0043105055,0.02951579,-0.0008697629,-0.00989227,-0.018559108,0.016137445,-0.0023438765,-0.019841142,-0.012391257,0.005618463,-0.0019112111,-0.028207373,0.012556997,-0.053470116,0.009665823,0.0059185135,-0.014271184,-0.013646829,0.027756581,-0.005432473,0.013062328,-0.00026304496,0.014206298,-0.0029061784,-0.0033812544,-0.0057138423,-0.019350149,0.014175981,0.0051461495,0.0012289712,-0.028782692,0.038075093,0.0005560769,0.00079484924,0.0014807654,-0.007331955,0.04448292,0.012012091,0.006777617,-0.02104289,-0.0062182737}},
      {{-0.0028078912,-0.0016290662,-0.0020717662,0.0011211514,0.0072212745,-0.10846674,-0.0052582957,0.00047523653,0.024490872,-0.00029149663,0.0075632352,0.0020376523,-0.003570288,-0.017608682,-0.010107852,-0.012545,-0.0019226557,0.006453898,-0.009022731,-0.0017318799,0.0002489431,0.018029824,-0.053496204,-0.0011346217,0.0028363308,0.0016439925,-0.016253952,0.032646447,-0.0022762401,0.025261652,0.0070602577,0.004312051,0.004610015,0.00085890485,-0.00047188473,-0.005095661,0.005007036,-0.0015129596,0.0027630886,0.014028541,0.021067962,-0.0048333257,0.003264158,-0.0046684872,-0.0011305554,-0.016966034,0.0059809233,-0.00046768936,0.012699267,0.0013227097}},
      {{0.020506833,0.004893173,0.0064014145,0.007727869,-0.006104277,-0.07479565,-0.013326612,-0.014165734,0.014717853,0.0050559053,0.0441879,0.008216121,-0.005364392,-0.03327656,-0.013646103,-0.0015812371,0.026034273,0.01463648,-0.019541984,-0.018924268,0.0044696946,-0.013315511,-0.038784485,-0.007717419,-0.0030900363,0.00046481585,-0.01776798,0.031091698,-0.0029403004,0.017496068,0.0046063573,-0.00015849527,0.00074334914,0.0045526032,0.0034714197,-0.0044093495,-0.012092039,-0.0045168577,0.004640489,0.033242244,0.04411178,0.0068155923,0.002647256,-0.014006473,0.0013152355,-0.012316705,-0.0033010088,-0.009123818,0.029499695,0.0020286161}},
      {{-0.01998664,0.000702164,0.0006352728,0.0063549853,-0.00022635855,-0.08227199,-0.004354954,-0.0057789814,-0.00037338957,0.0035480328,-0.0023810356,0.0028067704,0.0085728355,-0.010894226,-0.010626114,0.0019536729,-0.021226838,-0.010780027,-0.01706624,0.00049482804,-0.01215984,-0.01159714,-0.007931121,0.00025780997,-0.001308585,0.004996404,0.011478102,0.030948129,0.016028887,0.044081833,0.004417119,-0.0075247255,0.009702734,-0.00023086362,-0.010607522,0.013153437,-0.0070103724,-0.00087395083,0.0052812304,0.008359575,0.0037479447,0.0035179285,0.006439428,-0.008300734,-0.011767725,0.0030054015,-0.0057515968,0.0071769455,0.0010220032,0.0014658934}},
      {{-0.004971439,-0.00048441195,0.0072882404,-0.0074933153,-0.03392459,-0.084022455,-0.0062828367,-0.0076508457,0.009520545,0.015874047,0.052731697,0.022564696,0.010984937,0.006236038,0.00015987245,-0.0022582742,-0.013151241,-0.0070647327,-0.016643872,-0.0023028539,-0.034619372,-0.013693084,0.025537295,0.012700975,-0.0050681224,-0.0031537588,0.02355884,-0.013709295,0.013770011,0.12221333,-0.0032482315,0.0037239485,-0.0039738268,0.0075490884,0.003591102,0.017435858,0.0068105757,-0.007095285,0.01600356,0.0106425155,-0.0022638054,-0.0072520217,-0.0055645253,-0.0015816416,-0.022968944,0.0025889832,0.004739133,-0.0032008318,0.026042443,0.010436512}},
      {{-0.032116182,-6.674626e-06,0.0034413196,0.0067545706,0.0031101152,-0.07890337,-0.0052708816,0.003112303,-0.0023771455,-0.0030129005,0.00029465728,0.0012237292,-0.0025155237,-0.005326231,-0.0026617986,0.0042169765,-0.048231907,0.008451359,-0.0007591863,-0.012659169,-0.016198304,-0.0096138185,-0.07556912,-0.0075788037,0.0020615757,0.0031815902,0.028721288,0.004607941,-0.0031356665,0.026072131,0.013288282,-0.0117088,0.0042738155,-0.0020709627,-0.0007810175,0.008598693,-0.00023956446,0.00020540717,-0.0023570738,0.0037502258,0.013711611,-0.003952451,0.005244314,-0.010464969,0.004305785,0.025116421,0.0016110677,-0.005937743,0.016781671,0.0032876509}},
      {{-0.020908589,-0.010972937,0.0029186504,0.010526449,-0.0038011693,-0.0929449,-0.0017846334,-0.010544559,-0.020070093,-0.010261236,0.03540148,-0.0047568493,-0.0023485166,-0.022261158,-0.008604405,0.0064128507,-0.026603187,0.005080868,0.0077940533,-0.022334984,0.0019513569,-0.00947164,-0.05540692,-0.010585739,0.0023031256,0.0061721997,0.0051775128,0.015171089,-0.004571124,-0.006600854,0.010282109,-0.005241102,0.010016465,-0.0102959955,-0.013443733,0.0145630725,-0.0049490337,0.0038241039,-0.002623639,0.019432148,0.0052194404,-0.0034873565,0.0076486715,-0.0039208923,0.020928428,0.049176924,-0.0021576954,-0.0023203748,0.012446891,-0.007165793}},
      {{-0.014546757,-0.0020549207,-0.0047055674,-0.0019095761,0.0058246166,-0.08522771,-0.0024866422,-0.0021265668,0.0009187274,0.00077574124,0.023487953,-0.0015833623,-0.0053278604,-0.013370088,-0.014197359,0.0044885697,-0.026149902,0.0021962947,0.005350259,-0.013461746,-0.03232834,-0.015922247,-0.041800097,0.001222609,-0.00047952886,0.0020639766,-0.008222505,0.04677695,0.009210013,0.029262025,0.016420657,-0.0025098296,0.0012069687,-0.0032553247,0.0007387333,0.006571693,-0.008269412,-0.0064318515,0.0009433539,0.013524533,-0.011889667,-0.0049635386,-0.0060943523,-0.0057200175,-0.0049734362,0.023554442,0.0012033446,0.0020255675,0.009940111,0.00053188205}},
      {{-0.009308257,0.004761677,0.010533623,0.0077008847,-0.0029876877,-0.08318851,-0.007525481,-0.00878977,-0.0054560206,0.016755654,0.016872456,0.0060388865,0.006203777,-0.018505402,-0.006330675,0.013815199,-0.0026555324,-0.0009795191,-0.019507973,-0.010905205,-0.0031183283,-0.054709826,-0.019726291,0.0028192233,-0.0049399883,0.007888085,0.010078691,0.021915834,-0.014960358,0.03428729,0.011626385,-0.011035652,-0.008331024,0.006136178,-0.003460651,0.0059500863,-0.019168148,-0.0038454582,0.013497675,0.0004808138,0.01657997,0.011655725,0.0048592035,0.0014631973,-0.00029147064,0.007865446,0.004122814,-0.006315984,-0.0009850912,0.014940672}},
      {{0.019172223,-0.0040286854,0.00055120105,0.0017258717,-0.004201184,0.049463842,0.007950943,0.0039033357,0.0046647927,0.0010209882,-0.034901194,-0.00070876454,0.004821539,0.050636042,-0.0014275506,0.057655547,-0.033341788,-0.0011114603,0.0071376567,0.009941373,0.011639533,0.04609136,-0.017565554,0.002439836,-3.0128635e-05,0.0002157442,0.0029807314,0.012362088,-0.038910683,-0.013140588,-0.0056181103,0.0060551497,-0.006481801,0.004402664,0.0013919855,0.0033039532,0.0019994196,0.0067387996,-0.009961556,0.014332353,-0.018431522,-0.0023971172,-0.003675361,0.010487514,0.0016600366,-0.023234382,-0.002896261,-0.0042175436,0.012471716,0.0017519807}},
      {{-0.031082392,-0.009317171,0.017370047,0.005222933,0.014563409,0.025117809,0.018519696,0.005918921,-0.035687212,-0.01506394,0.007141842,0.0070398157,-0.005558004,0.0072014197,0.018530387,0.055777628,0.015262064,-0.0032469027,0.009005016,0.0113225905,0.0039102584,0.016707944,-0.036969773,0.008449192,-0.01039942,-0.013681031,0.045969304,0.017012425,0.018684117,-0.030457513,0.0072021745,-0.025441477,-0.020959798,0.005395391,0.0033035257,0.0007143957,0.005662022,0.004291004,-0.004045512,-0.017830463,-0.005062923,0.010603886,-0.004297285,0.0094751455,0.014745895,-0.00413184,0.0032442433,-0.007973477,0.0007994552,-0.0006069992}},
      {{0.012620179,-0.015778834,-0.0025458757,0.003386246,0.008368454,0.037385613,0.0068591814,0.0017973202,-0.015681043,-0.0026842053,0.018313413,-0.008018079,-0.0007767618,0.040939968,-0.0057439855,0.060445894,-0.031182956,0.006230229,-0.011347631,-0.0053083505,-0.004728132,0.016652966,-0.013837386,-0.004026927,-0.004252639,0.0037372797,0.022054896,0.01740919,0.013154662,-0.021999983,0.0053476165,-0.008211443,-0.0035873426,0.00581076,0.0072428463,0.005136294,0.0015415119,0.002314946,-0.007591312,-0.011820632,-0.014140151,-0.0010893856,-0.00016525826,0.006331653,0.0028472336,-0.015036399,-0.0031620204,-0.005912287,-0.0012037271,-0.0013049849}},
      {{-0.018286142,-0.0009383869,0.00070174836,-0.009599627,-0.011650474,0.020226352,0.008940649,0.019304214,-0.012165957,-0.018909298,0.018184152,0.019314075,-0.0054001547,0.039384753,0.00689637,0.070964985,0.0028922635,-0.00832607,0.0055763396,-0.00359617,0.01307815,-0.010874195,-0.022504479,0.00027114738,0.016493559,0.005458914,0.040179092,0.008230439,-0.027589582,-0.021035388,0.007675378,0.0048376713,-0.010878756,0.008441324,-0.0077113993,0.009434097,0.0059691593,-0.0025741528,0.010701572,-0.009800562,-0.02184909,-0.005553113,0.0119159585,0.0036033401,0.018580278,0.0020994109,-0.0019426992,-0.024461882,0.0012843111,-0.014683749}},
      {{0.014051847,0.00410556,0.0017538093,-0.0007010422,-0.02273767,0.008613735,-0.0070607727,-0.007650729,-0.009411594,-0.00092209305,0.0048905155,0.0033472576,-0.0073129726,0.039001215,0.0027844596,0.02742893,-0.037254162,-0.010278589,-0.007200165,0.008268777,0.0090558175,0.016130066,-0.012946174,-0.0016269841,-0.0049232473,-0.010502927,0.0063216924,0.020614542,-0.048053134,-0.023609266,-0.016842213,-0.0018005029,-0.0003210323,-0.0028619932,-0.0024961636,-0.00085607584,0.0012533545,0.0062659523,0.005178329,0.012699671,-0.004105834,0.0014903245,0.00084764266,-0.0014255507,0.0005316707,0.0104899835,-0.0011267866,-0.0024365578,0.016869353,-0.0085020475}},
      {{-0.004051906,-0.010589257,0.007505844,0.019393994,-0.0071216705,-0.0064337375,0.0023871837,-0.0025191647,0.007730566,-0.010375725,0.009707369,-0.005295632,-0.0046533262,0.008549991,-0.009257507,0.05437849,0.010384251,-0.0017558761,-0.00048471295,0.0020500366,0.0074428846,0.03749229,-0.013849771,-0.0053931903,-0.012115711,-0.007880334,0.0026836214,0.02440378,-0.017694812,-0.017655926,-0.0070252777,0.010086978,-0.00070372573,0.0026880028,0.0072516133,-0.00034443903,0.0017529611,0.005100587,0.006861033,0.0045545716,-0.024116376,-0.012508337,-0.018317968,-0.005524474,0.019519355,0.0144541515,-0.017748589,-0.010483333,0.005586126,0.0095738135}},
      {{0.015568444,-0.0008476252,-0.005542041,-0.00078670174,-0.0051674657,0.0048845443,0.011186545,0.008904291,0.010659967,-0.0006266782,-0.008772275,0.0037921732,-0.0035844354,0.029850302,-0.002729888,0.043227673,-0.01268001,-0.0075312797,0.0019517228,0.0063006957,0.004036515,0.01875246,-0.0020227646,-0.0013970924,-0.0013412284,0.00019590463,0.022445451,0.024163201,-0.021165302,-0.013926914,0.0055105584,-9.1319234e-05,-0.001883191,0.00026388493,0.0012765547,0.0018402125,-0.0019699477,0.012106832,0.0061233826,0.006048556,-0.01563417,0.0044043856,-0.0033639045,0.009961984,0.0037217631,-0.005693735,-0.0014831715,-0.005707478,0.01294418,0.0016700657}},
      {{0.009065067,-0.002764825,-0.005549458,-0.008461166,-0.004792898,0.010489146,0.006432731,0.01392492,0.005270225,-0.005938679,0.026264112,0.0011671365,-0.0016298724,0.010259656,-0.021032361,0.07756174,0.004102184,0.003783725,0.010803898,0.0074786274,-0.017284304,-0.015892118,0.010635398,0.010826479,0.0037086986,-0.004391655,0.0046264464,0.029512646,-0.025207678,-0.010356417,-0.008018243,0.0050958437,-0.018744068,0.0050100465,0.014953954,-0.014408339,-0.012833562,-0.0038672835,0.000957937,-0.007853485,-0.02202627,0.007725646,0.01367321,0.0032052016,0.0005040924,0.0063467156,-0.005914241,-0.011962944,0.007646441,0.011945685}},
      {{0.010080053,-0.0010774089,0.006229754,-0.0023999799,-0.024248684,0.017955817,-0.008444159,0.007528805,-0.011019652,-0.0034958948,-0.019415047,0.0007762827,0.005061213,0.03538682,0.0052521336,0.025123568,-0.018139673,6.226734e-05,-0.0028212874,0.014675974,0.03601452,0.003555028,-0.010244991,0.0042888266,-0.0059757154,-0.0060863076,0.01865747,0.017352147,-0.061542396,-0.0035509546,-0.0219599,0.0051258546,0.0034880955,0.00065008143,0.0063605877,-0.001234708,-0.0023301807,-0.0020901621,-0.00146138,0.01327843,0.010170646,0.001465461,0.007024851,-0.009755398,0.0039572003,-0.0068596397,-0.0075432165,0.003048354,0.017423987,0.00520778}},
      {{-0.0021679185,0.0068618706,0.00020228751,-0.007350799,-0.01670789,-0.0052313716,0.014567334,0.008134221,-0.004178675,-0.0066355397,-0.01873218,0.006763914,-0.0016485903,0.008485528,0.007916857,0.040407486,0.024393197,-0.004943913,0.014736033,-0.005688759,-0.0015080977,0.00062609464,-0.0016686792,0.0028593661,0.0068780617,0.007602154,0.007240762,-0.0019912461,-0.036279377,-0.0127794705,-0.00086132996,0.013330364,0.007405998,-0.0017722936,-0.011795317,0.0014794318,-0.0013458417,0.0049446444,0.012775991,-0.0116063785,-0.010959007,-0.015797473,-0.008363755,0.009461967,0.0047930893,0.0021487905,0.0048587476,-0.018635025,-0.0066205924,0.0043178014}},
      {{0.014385616,-0.0011053178,0.0037024037,0.00172965,-0.004875791,0.020714074,-0.0026832859,-0.0077921744,-0.012303129,-0.009496756,0.024315642,-0.002139425,-0.0016130736,0.045327287,-0.0017838617,0.059086934,-0.020933636,-0.0077460166,-0.0016130249,0.0014895151,-0.008330482,-0.00095875724,-0.0029257305,0.0030905479,0.001003774,0.014464178,0.013521775,0.025878254,0.0077008223,-0.026698079,-0.00022359096,-0.005654136,0.004124292,-0.011138558,0.0004233176,0.00042482867,-0.0019383777,-0.0037047106,-0.0038071403,-0.0081700655,-0.00997352,-0.007414887,-0.0044432306,0.004977735,-0.006687878,-0.009250677,-0.0017030839,0.0021871214,0.005309966,-0.0024233768}},
      {{-0.008059788,-0.0077591348,-0.00013378968,0.0073877866,0.006065607,0.012374586,0.012500567,-0.0053195925,-0.0005624343,-0.009324653,0.017370077,-0.0071915337,0.013991018,0.037159834,0.0010754031,0.060130253,-0.019278178,-0.005691031,0.0149657065,-0.010285529,-0.010679964,0.01572198,-0.017683001,-0.004028042,0.0036024028,-0.0046608546,0.021776902,0.004971929,0.0028667524,-0.016688904,0.015136814,0.0020104197,-0.005912473,-0.0053647994,0.0056398804,0.0057249176,-0.020465408,-0.0052682874,-0.00056988763,-0.0067301802,-0.014826635,0.016632523,0.014328268,-0.008499223,0.027932024,0.008684886,0.010821268,0.007146422,-0.014276267,0.01152801}},
      {{-0.00400968,0.0034096858,-0.0022522865,-0.00018751986,0.0021964612,0.027068738,0.0026518777,0.004909562,-0.015109801,0.0030408646,0.015992515,-0.013163701,0.0026748015,0.03665931,-0.0029559701,0.064402,-0.034076955,-0.012234026,0.0168558,0.0039241384,0.013836656,0.01526049,-0.010040769,-0.005003078,-0.0040731532,-0.0051096426,0.012666169,0.004958422,-0.046006568,-0.014696107,0.0040045697,-0.0024779222,-0.003680598,-0.015641209,-0.0010927096,-0.007031753,4.1986026e-05,0.0045762514,-0.0054186196,0.013950819,-0.015008463,-0.00639673,-0.0070367907,-0.0012388505,0.0011865196,0.008707043,0.0066525736,0.0063188863,-0.0050627855,0.002913431}},
      {{-0.003284451,0.0087896325,-0.015936675,-0.007223331,0.0076299408,0.01230232,0.015496046,-0.0020250806,-0.028723879,0.0017295665,0.019308254,0.0018288131,0.011364115,0.030873703,0.0026200863,0.039257824,-0.0038482314,-0.008316929,5.346094e-05,0.0038755687,-0.026284395,0.024667842,0.0046393294,-0.008753133,-0.0031712065,-0.0060299756,0.021435767,0.016678063,0.0065101464,-0.011770921,0.0042871665,-0.005477981,0.0073164473,-0.016798593,0.004215629,-0.00223802,0.015106928,0.014286731,0.0020771308,-0.0100776935,0.003381871,0.0074547976,-0.017288942,-0.0049678828,-0.007358414,-0.0014369016,0.0092714345,0.0023950883,0.0014329321,-0.015283623}},
      {{-0.019255918,-0.00409877,-0.0075780796,0.002673662,0.0008826929,0.012684254,0.014365125,0.00012361228,-0.021536104,-0.0121621275,0.008666959,0.007986653,0.0077571543,0.03012104,0.012067342,0.07615149,0.002922562,0.0027413678,0.015115321,0.0079157725,0.004955384,0.015471542,-0.013388855,-0.006089613,0.0031033992,-0.0021238066,0.017013635,0.028361117,-0.015010065,-0.025353303,0.012599425,-0.0044915895,0.015510216,-0.0035300246,0.0056353556,-0.00034791316,0.0005265952,0.0031141986,0.0123079335,-0.00044152467,-0.027180932,-0.009914829,-8.199676e-05,-0.0028085224,0.0026367742,0.00052812934,-0.00027404912,-0.0061347503,-0.018475529,-0.0015509719}},
      {{-0.029190276,0.0030989165,-0.00078474684,-0.0100326175,-0.0096584475,0.011969245,-0.006895739,0.00084997894,-0.018505652,-0.010920734,0.027654696,0.015697893,0.0004898332,0.03971516,0.009811721,0.059187524,0.0021790788,-0.0145111205,0.015877288,-0.009110517,0.00088356604,0.023786776,-0.0089423945,0.015731947,0.0014058794,-0.00534902,0.028895315,0.0045853104,-0.020571223,-0.02111901,0.01085706,0.0011215641,-0.017817685,0.02372309,0.001088299,-0.013478466,0.0049199224,-0.01188551,-0.008513166,-0.0038855614,-0.009988102,-0.0014037923,-0.016674286,0.0017965193,0.012207289,0.004917287,-0.00051265635,0.0007618362,0.0062201177,0.004827744}},
      {{0.0034582112,0.00017927763,-0.0036226562,0.0032408517,-0.0074971607,0.023004502,-0.0058319913,-0.008742823,-0.0029417514,-0.0058255326,-0.017036974,-0.0045094555,0.0059393076,0.04502812,-0.0021954577,0.03278439,-0.0098816315,-0.020095324,0.006209766,0.013985782,0.00651569,0.046659127,-0.0091594355,0.005030366,0.00608581,-0.0107918205,0.006587333,0.02730198,-0.0028790263,-0.018770931,0.0016020688,-0.0014195422,-0.0015124354,0.0016579863,0.007946995,-0.0015037294,-0.0018006965,-0.010411502,-0.0034636885,0.0077670407,-0.0072072926,-0.0008747252,-0.0054180776,-0.0043765004,-0.0062244763,0.0050991615,-0.0013650776,0.00773783,-0.010733813,-0.0019461884}},
      {{-0.0259043,0.0058436734,-0.0042980374,-0.0015937448,0.004311369,0.0067524095,0.0008536258,0.0008544057,0.0047126394,-0.005749383,0.035863046,-0.012037427,-0.021000573,0.03207496,-0.0029021741,0.10913196,-0.03179437,-0.0026241571,0.025808332,0.0028926744,-0.005429483,-0.03016429,-0.013808946,0.0053020446,0.02007063,0.006171929,0.002315214,-0.02615299,0.0037602743,-0.020800082,0.0073037,0.027966555,0.0063639386,-0.011923084,0.009732624,0.011425852,-0.00083609513,0.011690287,-0.00793303,0.013322068,0.002352923,-0.011166635,-0.008332477,-0.00756941,0.0103753405,0.01573109,-0.005350912,-0.021461979,-0.0037861574,0.0057347585}},
      {{-0.023839705,-0.0010035166,-1.9205218e-05,-0.0041751075,-0.0060043745,2.860979e-05,0.011365694,-0.0013053744,0.0007966198,0.0034482824,0.0014696701,0.0009957883,0.0058480892,0.021930443,0.0029481726,0.051102642,-0.0047597317,-0.010537201,-0.0012164713,0.012029387,0.016181631,0.004372517,-0.0022624044,-0.00369174,0.0056406106,0.0013077781,0.011036703,0.023918213,-0.013710425,-0.011350368,0.018539565,-0.0068521746,0.00342189,0.0026340613,-0.0025746487,-0.0063108373,0.0004985626,0.00028344523,-0.008294512,-0.0008573451,-0.017377881,0.002922568,0.0035979638,-0.0045186304,-0.0021438235,0.01864896,0.0026951795,0.008675468,-0.008294958,0.0012715359}},
      {{-0.03795724,0.0053911787,-0.016872682,0.023956852,-0.0028226722,-0.003116947,-0.00062575995,-0.00074472174,0.0047509586,0.0055044536,0.0033220868,-0.013751068,-0.0011008157,0.029715648,0.018589742,0.058905076,-0.009082283,0.0015591448,0.009073196,0.010649775,0.0056592794,0.003773459,0.0051158,-0.00015543873,0.0069980267,0.018285245,0.02052953,-0.006906292,-0.005019447,-0.008851537,-0.004306716,-0.007105492,-0.0064450046,-0.017229706,-0.006569784,0.007899999,-0.008051334,-0.0034233828,0.0025369483,-0.026262598,0.0044550467,0.009832312,-0.005189911,-0.002800246,-0.012865697,0.022875132,-0.013084035,0.0041138553,-0.0149222715,-0.007041252}},
      {{-0.0028655592,0.00072966126,0.0018100488,0.0016654973,-0.0019400439,-0.00041425836,0.0021861037,-0.003200427,0.0065287375,0.0009930457,-0.0019011422,-0.004127936,0.0045703235,0.018845119,0.00973976,0.03898914,-0.0030847182,-0.0077570477,-0.0067160367,0.0034062841,-0.0024114638,0.026949264,0.0105018485,0.0017451391,-0.0039485367,-0.0007299333,0.020106703,0.021961443,-0.0056244065,-0.025098791,-0.00450442,0.004994636,-0.00077557104,-0.0025512057,-0.013322358,0.005146826,0.0018350611,-0.0011209976,0.0015984423,-0.020656804,-0.016911073,0.00042036484,0.0020823788,0.0046768123,-0.006505387,0.012896733,-0.0012827823,0.0034367808,0.004488018,0.0050786445}},
      {{-0.013905772,-0.00970053,-0.0040230122,0.009911521,-0.020203669,-0.015677445,0.0027376467,-0.014660257,-0.01294551,0.019862916,-0.0065152706,0.0031160633,-0.00754917,0.013759084,0.0063393186,0.031199621,-0.0061487276,0.014488532,-0.020885991,0.017055603,0.0004139461,-0.0022966124,0.0027371943,0.008960448,0.008158,-0.00080378185,0.029095791,-0.019566385,0.008504512,-0.015526285,-0.0056500197,0.0034098015,-0.0054588523,0.0028626237,-0.027362563,0.0014057471,0.0078069996,0.0135424845,0.008541179,-0.022231948,0.0022371016,0.006870225,-0.0019451886,-0.013911809,0.0080541065,0.0069801644,0.019344628,-0.0020352313,0.016264455,0.009937267}},
      {{0.010303965,-0.0069558476,-0.0067797657,0.010961441,0.00040551435,-0.007131497,-0.0032670114,-0.0031305451,0.0136293145,0.014164008,0.00058302993,0.005480471,0.0053754887,0.021186568,-0.00044894684,0.046768803,-0.010787833,-0.009823418,-0.00022729664,-0.005013057,-0.010540766,0.015871875,0.02460593,-0.0022716303,-0.002342906,0.0070635104,0.0031955966,0.027646434,-0.002207823,-0.018238846,-0.0016369232,-0.012089197,0.011930901,0.00030150087,-0.0018604168,-0.0036488788,-0.009637684,-0.007037756,0.0062791314,-0.009486266,-0.008576213,0.010402928,-0.0066187927,-0.0073419246,-0.011513263,0.014401543,0.00976396,0.012974881,-0.00544543,-0.0049839206}},
      {{-0.011856788,-0.01098607,-0.020661484,0.0057402314,0.0021423218,0.0021853028,0.012436069,0.017266506,0.026829688,0.003472323,0.0025009585,-0.016147455,0.0075888894,0.03925699,-0.0030095878,0.063006535,-0.012938196,0.0045312634,-0.011042765,0.0024198222,-0.01697469,-0.0066355453,0.011285506,-0.006508302,0.00414219,-0.0076323156,0.013815071,-0.014577194,-0.025426086,-0.007620473,-0.00878207,-0.017115586,0.017479913,-0.006471284,-0.013180849,-0.011746998,-0.011846543,-0.00073096156,0.0063396967,-0.008397925,-0.020780424,-0.004532151,0.0012685809,3.6588895e-05,-0.0061613796,0.003476892,0.00044175083,-0.002661149,-0.009129619,0.013086527}},
      {{0.023006953,-0.0089412145,-0.0029400082,-0.004749699,-0.00046226848,0.0016053416,0.0013718563,-0.011565373,-0.002556767,0.0020382875,0.002485467,-0.0019943942,-0.001186168,0.021970011,0.0013337224,0.051590286,-0.005042673,-0.0066129006,0.006582242,-0.0027313721,-0.0089917295,0.043789405,0.02376045,0.00037988936,-0.0019100826,0.0007469908,0.0020271535,0.019267228,-0.046640165,-0.03302369,-0.005706165,-0.004148491,0.0031520918,0.0041162516,0.0006211158,0.0012080144,-0.00028703857,-0.00057761086,-0.0028736927,-0.03608879,-0.019131577,0.0026577464,0.0023632464,-0.010078298,-0.008379744,-0.006143314,0.00063716195,0.004063483,-0.015695743,0.004025259}},
      {{-0.00036962747,0.0011843017,0.0036774273,0.0084655825,0.022833047,-0.00094940607,0.0023004704,0.0037768579,0.0135279,-0.011476456,-0.013998057,0.0022075905,0.015628293,0.033999585,0.0102616735,0.05972707,-0.0064797644,0.013673751,0.013747214,-0.009211372,-0.002708035,0.028963555,0.00078711647,-0.003992484,0.0030605802,-0.006366708,0.032362714,0.004907364,-0.017870346,-0.018212857,0.0061014816,0.008021361,-0.017368132,0.0020328905,-0.007024285,-0.0032173877,0.018719068,0.018388063,-0.007616032,-0.024431203,-0.0035701063,-0.008656759,0.0013519853,0.009955072,0.02384761,-0.018330893,-0.0070695756,-0.013456298,-0.016500253,0.008750942}},
      {{-0.0131268855,0.0032008314,0.0028591359,-0.0025101334,-0.009788367,-0.004152965,-0.007396379,-0.005160892,0.021479461,-0.009120046,0.016793642,0.006983432,0.00054413994,0.02452625,0.0058743437,0.061496764,-0.006432761,-0.0071451925,0.0005269311,0.006268382,-0.0015678409,0.044862565,-0.002301889,0.0045618033,-0.0012901559,-0.004795042,0.020900082,0.021470087,-0.012148553,-0.020408165,-0.00038644942,-0.0038511043,-0.009867225,-0.0036531768,-0.010888235,-0.0014128471,0.007101917,-0.0009919035,-0.01027909,-0.013746591,-0.03442538,-0.00031982575,-0.009337493,-0.0042267893,-0.004387216,-0.009309538,0.005980479,0.00955283,0.006933441,-0.0013019796}},
      {{0.005016189,0.007527531,-0.0012195823,0.012429203,0.0049478896,-0.013661799,-0.00033233035,-0.004659047,0.025854299,0.0022799023,0.0120068295,0.017890273,0.010290546,0.01844436,0.0029340305,0.08702033,0.0016151067,0.0019428032,0.0046888147,2.7396645e-05,-0.022995306,0.034072228,0.027163835,-0.00773703,-0.005453727,0.01886989,-0.0057452987,-0.020986496,-0.0019956918,-0.026958771,0.0038478663,0.013414988,0.0007437507,0.0022341285,-0.0008943092,0.014640678,0.014826736,-0.013539093,0.013247626,-0.048268948,-0.020780306,0.02345129,0.0020365526,0.008774113,-0.02305941,-0.015268427,-0.010560045,0.0022118932,-0.0045130057,-0.0033689388}},
      {{0.01455998,-0.003454916,0.002110555,-0.0018142482,-0.0010336639,-0.010909931,-0.009066349,-0.0009917845,0.0077632745,0.0066649737,-0.01575322,-0.0028213237,0.00061902625,0.01780558,0.0045076665,0.051528856,0.0053012,-0.0047939504,-0.0015843671,0.008388716,0.002987672,0.059440095,0.014891729,0.0047522127,0.0036364628,-0.0018833725,-0.0046015414,0.009062594,-0.021446792,-0.025232546,-0.023405084,-0.0016096631,0.0024378716,0.0013301229,-0.0018106591,-0.011355029,-0.0052083205,-0.009834994,-0.0005912443,-0.024750575,-0.0014585786,0.008555801,-0.001686305,0.0041511087,-0.016649315,-0.012152667,-5.191394e-05,0.009817589,-0.01020029,0.0071963635}},
      {{-0.020803604,0.0032636828,0.0037469943,0.0023077133,-0.0029067786,-0.0068526682,-0.0039634504,0.011411937,0.010044843,0.0020836573,-0.009500069,0.015759056,-0.0062040957,0.027138747,0.0039874343,0.061077904,0.009054049,0.020636156,0.0035257507,-0.0061071967,0.011026798,0.04601036,-0.0022913017,0.0055626933,0.0015754974,0.005378773,0.00810626,-0.015429184,0.0034687135,-0.020739373,-0.010613523,0.00047399747,-0.0006403249,0.013271695,-0.00516149,0.0059367646,-0.0013930675,-0.0032834024,0.0045738476,-0.01005273,-0.017197987,-0.009125632,0.008703056,-0.017593855,0.012635382,-0.005930239,-0.022555135,-0.0030611774,-0.0077550737,0.0022114746}},
      {{-0.007256458,0.000556398,0.0025351464,-0.002808272,-0.012575436,-0.0059745517,0.010533098,-0.0010661035,0.0054556644,0.011250119,-0.01541681,-0.010929323,0.0053548715,0.027260061,0.01035796,0.0612489,0.01658743,0.0025622626,-0.017835893,0.0155845955,-0.009172218,0.0345881,0.010959098,0.0048753205,0.0060198526,-0.0052868933,-0.0020908364,0.011171298,-0.023408696,-0.017933516,0.0065015303,-0.0064067068,-0.005760886,-0.004422296,-0.0011668593,-0.0047558355,0.011517626,-0.0034339996,-0.0063111135,-0.025018064,-0.01204843,-0.0043692375,-0.0071852813,0.004178418,-0.0070360797,-0.013636613,-0.0043567764,0.010161944,-0.024045967,-0.0047508483}},
      {{-0.011977737,0.009537781,0.007789469,0.009966411,0.022960193,-0.016607301,-0.013360817,-0.006990183,0.016913578,0.008547988,-0.0065822005,-0.0114273215,0.006794924,0.028820964,1.965057e-05,0.08098567,0.016592823,0.007906682,-0.018311758,0.003534646,-0.018913057,0.003778678,0.008075978,0.012636218,-0.0006319395,0.0081154825,-0.026485896,-0.004742063,-0.001367532,-0.018483557,-0.011681977,-0.014241346,0.0132873105,0.00031289362,-0.01569222,-0.0011069243,0.017679598,0.00012797103,-0.0112758055,-0.005921683,-0.0036905603,0.007975061,0.022345243,0.0017934875,-0.006447309,-0.0074622696,0.008763629,-4.159719e-05,-0.0372863,-0.0033951863}},
      {{0.021315666,0.0015548652,-0.0027823716,0.002026298,-0.0050671315,-0.019008422,-0.011574054,0.0039065387,-0.0025414352,-0.0023490645,-0.026275221,-0.008763216,9.672423e-05,0.021700963,0.00085993856,0.057206918,0.019414281,0.0030240787,-0.006250423,-0.0032463006,-0.0014181065,0.042701986,0.017006813,-0.0025010428,0.0031045496,0.0034008431,-0.009091165,0.009054107,0.0031380467,-0.0065377504,-0.0022868244,0.011936077,0.007283898,-0.0027876792,-0.011934178,0.0010989098,-0.008662941,-0.00046697046,0.004913322,-0.016282065,-0.010279208,0.0009694156,-0.0041621104,-0.009579167,-0.0060809674,-0.007503173,-0.0031171094,0.006402419,-0.016645057,-0.0040596407}},
      {{-0.006287373,0.014309942,-0.005279358,0.0026329344,-0.0069146557,-0.02915742,-0.014659636,0.005561456,0.0069943867,-0.0009283266,0.0004234341,0.00054170913,-0.010740869,0.018106353,-0.0013259883,0.062595665,0.017623581,0.015859343,-0.022877686,-0.0021736873,-0.0009909042,0.007200522,0.006560659,-0.0151645,-0.020897811,-0.0056718346,0.0040153763,-0.0018536252,-0.0075245295,-0.0005950214,-0.025104506,-0.01792943,0.0113242585,0.007426667,-0.0069010565,-0.001964413,0.0021324346,0.0043285224,0.0087797,-0.010450561,0.020242274,0.010389133,0.007626617,0.004540077,0.0057815826,-0.008518847,0.0033662538,0.0010806316,-0.008176852,-0.0055630696}},
      {{0.0037442725,0.012384505,-0.006987245,-0.002225095,-0.008647112,-0.03407482,-0.008117668,0.0034072222,0.01566834,0.0073344377,-0.012863885,0.00054286607,-0.00084745494,0.017812556,-0.00350884,0.060354743,0.013469068,-0.0070376396,-0.005385958,-0.0010275982,-0.0036783766,0.03423309,0.011248872,0.0030555462,0.0044612633,0.009124961,0.00060726097,0.0025241342,0.0024648088,-0.0053370437,0.0042800396,-0.005571242,-0.008699011,-0.0027710614,-0.0024292155,0.009544531,0.0029520663,0.0005392066,-0.0036683858,-0.020200789,-0.02735249,0.0026204821,0.00062308816,-0.0027151278,0.0015129513,-0.018196087,-0.004029229,0.0025276286,-0.018007942,0.010986636}},
      {{-0.0148432,-0.007611005,-0.0008377171,0.005925227,-0.0015753183,-0.037107307,0.006282841,0.010758736,-0.015527646,0.01243501,-0.019393735,0.0013310174,-0.0013302213,0.01074465,0.025844332,0.06599368,0.031758305,0.00818741,0.0069842706,-0.00728126,0.0038243104,-0.027169047,-0.02264969,0.011022191,-0.004726207,-0.0023311197,0.030445307,-0.029849716,-0.015457549,-0.0012594025,-0.024410298,-0.0050785984,-0.0148064,0.025828939,-0.003572824,0.009765143,0.009024866,-0.0020299,0.012393744,-0.036396142,0.043507338,0.0148964785,0.001694389,-0.0019452501,0.02351726,-0.02307308,-0.0006455979,-0.003871864,-0.024924261,0.00040383317}},
      {{0.0067086355,0.008823062,0.00035792837,-0.005038081,-0.015527594,-0.036780104,-0.011143887,0.001708813,0.010533605,-0.0029447144,-0.0010961317,0.0007564898,-0.0038678262,0.0056860507,-0.0021722384,0.04502385,0.00043436905,-0.0038913793,-0.017917104,0.0006287632,-0.010551469,0.016070055,0.0076831155,0.0007157319,0.0039527356,0.0024758584,-0.010719805,0.019071493,-0.035958417,-0.0016275728,-0.005002856,-0.001917779,-0.001412052,0.0063787797,-0.0020832196,-0.0049518873,0.0026103812,0.0060453434,0.013047569,0.0009780072,-0.014569575,2.2259335e-05,-0.0019309705,0.002464995,-0.0056766644,-0.008863293,0.0019057479,0.0056173685,-0.0097582815,-0.0030865746}},
      {{-0.006434266,-0.0059020636,0.006401205,-0.009321054,-0.022966506,-0.03752299,-0.017342161,-0.000921841,-0.004358907,0.018852687,-0.009726695,0.004756984,0.007817897,0.015447169,-0.014780645,0.0431373,0.01146285,-0.009201484,0.0018580417,0.008132477,-0.00799031,-0.0039939154,0.028379444,0.004661392,0.0018622363,-0.014624971,-0.019069394,-0.02160624,-0.019875009,0.004030227,0.010008199,-0.021548185,0.0024132433,-0.002678299,-0.014050294,0.013362972,-0.009423002,-0.004394096,0.007959587,0.017793259,0.0048608626,-0.0010403013,-0.0015184967,-0.010015175,-0.011197754,-0.00028200803,0.0028449565,0.004854979,-0.008858986,-0.0065671527}},
      {{0.005886536,0.0075818133,-0.0024969438,-0.009238101,-0.0013936388,-0.033251416,-0.00055283523,-0.0025751768,0.026139695,0.003654857,-0.0074858204,0.00076630013,0.00013086517,0.00748267,0.002729845,0.050523195,0.013379278,0.009334213,-0.0067505157,-0.004016816,-0.018569345,0.031666912,-0.00070391264,-0.0020931805,-0.0025227463,-0.0073946654,-0.0124869365,0.011509223,-0.01530377,-0.0055866432,0.00019369145,0.0062314104,-0.0020364837,-0.004085286,-0.0035444,0.005291549,0.002338374,0.0022114248,-0.0013464751,-0.0036831961,-0.031693965,0.0043944605,0.0059219934,0.008779292,0.00026951655,-0.0058236285,-0.006688554,-0.0065617687,-0.002707001,-0.0058840206}},
      {{0.0129798595,0.0009898546,0.00013727188,0.0045143915,-0.014169592,-0.031099522,-0.02370587,0.0056872508,0.021986308,-0.01444275,-0.033065453,-0.008009488,0.026957842,0.0068676947,0.00014058419,0.0506484,0.014227519,-0.0032274455,-0.014471445,-0.014523234,-0.017201964,0.021079853,-0.0011828106,-0.0029405542,-0.010198521,-0.010882088,-0.006592458,-0.008036383,-0.026877787,-0.0051631746,0.00073434034,0.009629376,-0.0067997724,0.0018907569,-0.00077984773,0.009218808,0.0034844335,0.009121903,0.01730812,-0.01911756,0.024881614,-0.0056127217,0.010919928,0.011690389,-0.021932472,-0.020747416,0.0067715095,-0.007983489,-0.019193836,-0.0069529}},
      {{0.018237112,0.002847773,0.00802514,0.00040216921,0.00035582413,-0.031440906,-0.004130315,-0.002262367,-0.0028198047,0.0028519046,-0.0036373402,-0.0021186436,0.0070501165,0.009171683,0.0012700071,0.057461526,0.0036180224,-0.009352275,-0.027552592,0.0038214752,-0.012975129,-0.00012524625,0.008467023,0.014968764,-0.000701593,-0.005746529,-0.007039616,0.019521926,-0.08734486,0.013843966,-0.01137289,-0.006856826,-0.009080493,-0.0010717631,-0.0014401263,0.00030966176,0.006902827,-0.010402752,0.012181519,-0.0097724,0.0013074277,0.006757281,0.00060984853,0.00016578582,-0.021837471,-0.0133784115,-0.000116403426,0.008247481,-0.001119333,0.0051930957}},
      {{-0.008675045,0.014341902,0.010467058,-0.0055348487,-0.0014427588,-0.022521276,-0.025637925,-0.012033092,0.0013747474,0.0041761626,-0.0060563316,0.00027634486,0.0143440105,0.019315451,0.0032063087,0.07082508,0.029491996,-0.0037242165,-0.019164043,-0.012432005,-0.011850802,-0.031072881,-0.0018888618,0.004622059,-0.0073348796,-0.0013676459,-0.007298427,0.010060474,0.01637399,-0.011819945,-0.017596563,0.01091725,-0.0066876155,-0.0110532055,-0.007481389,-0.019604955,-0.0086717,0.005942599,-0.0069374647,-0.0030333463,0.0082849115,0.0007509455,0.012799702,0.0064034173,-0.008058649,-0.011403426,-0.01454615,-0.0036124052,0.005880207,-0.013061465}},
      {{0.005820012,0.0059295865,-0.0033117032,-0.005811051,0.0051694103,-0.025312828,-0.010254116,-0.00073130144,0.032152824,-0.006262046,0.002568017,0.0046048053,0.0013320349,0.011618862,-0.009439084,0.044546418,-0.0038332858,-0.0104523385,-0.0119895935,0.0068281363,-0.025353123,0.019101968,0.018651018,0.00537184,-0.005402187,-0.0013452037,-0.029351385,0.045009833,-0.021058854,0.0071754605,-0.0050536385,0.00103889,0.00057573564,0.000951073,0.01220866,-0.0034782568,0.009707038,-0.01224013,-0.015421875,0.0035576776,-0.029587751,-0.0061331084,-0.0005554168,0.0042544766,-0.030646171,-0.01157924,0.0021934665,0.0072449725,0.013664326,5.3965716e-05}},
      {{-0.0182054,0.00049526576,0.0011073595,0.0074420366,0.0035923407,-0.028064722,-0.005831366,0.0070446604,0.02697411,0.010730653,0.02277462,-0.008346922,-0.009175812,0.01765723,0.02136619,0.06218885,-0.011663701,-0.0065571796,0.023321819,0.0076923384,0.008874863,-0.014373429,-0.00572877,0.004023099,0.009968231,-0.009011517,-0.0065624425,0.035519104,-0.011398202,-0.000944656,-0.03121387,-0.0023905863,0.0049651633,-0.009392178,0.0071501327,-0.009947232,0.0083385585,-0.0029807084,0.0044718613,-0.0047379313,-0.013385077,0.008257362,-0.014478453,0.007082486,-0.0057017407,-0.009253235,0.008975934,0.012429135,-0.00091349287,0.0036328947}},
      {{0.00401287,-0.004565072,0.0013861343,-0.0038937407,0.0006922686,-0.019534145,-0.0059192264,-0.007963778,0.015267728,-0.0009900657,-0.036183488,0.005208079,0.0022595858,0.011784888,-0.005891793,0.060710143,0.04386942,-0.015391895,-0.017929206,0.0076860967,-0.016078394,-0.00792527,-0.0041307565,0.00927241,-0.01388381,-0.004976643,-0.015163006,0.04808427,-0.009151359,0.00013437509,-0.012887074,-0.007789606,-0.0023487692,-0.008322435,0.008770191,0.007369936,0.001196008,-0.0010397562,-0.0051420596,0.00057777116,-0.027912762,0.0036480078,-0.0069002784,-0.0039366544,-0.02243987,-0.011569018,0.0008938284,0.008155711,0.011324518,-0.0016132273}},
      {{-0.025151685,-0.016635746,-0.0059845992,-0.0078109116,0.0036873892,-0.032091253,0.013025286,-0.0068163313,-0.0012934331,0.00014001632,-0.0022850295,-0.0054010246,0.0047779265,0.026035838,0.0040472737,0.056350708,-0.0031645882,-0.032233454,-0.002275363,0.0051556835,-0.0051525095,-0.02123802,-0.00728458,0.006031954,0.012091201,0.0056026154,0.023501037,-0.011906026,0.030756785,0.024032854,-0.007673488,-0.005199536,0.000513139,-0.0125632435,0.0065706065,0.009382463,0.012765828,-0.01230005,-0.00792123,-0.02104961,0.0020703292,0.006426219,0.005839874,-0.0025062617,-0.016440485,0.007973424,-0.0070620063,-0.006588449,-0.00803416,-0.0021972747}},
      {{-0.0036144855,-0.002035821,-0.004448068,-0.00037245537,0.0059095775,-0.0038288983,-0.0081706615,0.00033264214,0.0041430937,0.0026252205,-0.05463143,0.0010244645,0.013292641,0.035908483,-0.009792686,0.08275363,0.04660799,-0.0023803515,-0.00054476154,0.0046933494,0.0007615276,-0.009819228,-0.02433268,0.010674728,0.004089146,-0.010354904,0.005006175,0.027980536,-0.005959774,0.003983617,0.0021394338,0.0015873931,-0.0037418646,-0.0006987407,0.0030753838,-1.1504817e-07,-0.009826017,0.009855364,-0.012785916,-0.0032310858,0.0056286473,0.0058719264,-2.54901e-05,0.00937627,-0.004104814,-0.01260233,-0.0021231559,-0.0013067712,-0.0036811584,-0.010557963}},
      {{-0.018530488,-0.0045186235,-0.0043102554,0.015281896,-0.0015464543,-0.0077436417,-0.0019976594,-0.010359414,0.022326797,0.020124428,-0.013460363,0.0023847655,-0.003449402,0.036468923,-0.0064721643,0.080159284,0.029320866,-0.003994204,-0.0039482648,-0.005039082,-0.011677244,-0.01426839,-0.01015118,-0.0046311594,0.004949063,0.0023447995,-0.011000019,0.029856669,0.0070187994,0.01622282,-0.0062251184,0.0076687424,-0.00943563,0.0053035687,-0.010050566,0.0027859774,0.0013935459,0.0014044694,-0.014061779,-0.010123395,-0.0046985704,-0.01597497,-0.018805835,-0.002122636,-0.0034516721,0.011672509,-0.0015300065,0.0025212117,-0.021253297,0.00045810407}},
      {{-0.006741286,-0.0052565457,-0.00019112663,0.0033831687,-0.014864704,-0.014900755,-0.0007412734,-0.0057202885,0.0019101207,0.0032059902,-0.031313535,-0.001547557,0.008587743,0.034798563,-0.00038447746,0.05335409,0.035867363,-0.016941804,-0.0063849143,0.0154604465,0.002345068,0.0057689496,-0.029340923,0.0041416516,0.004415098,-0.0028156408,0.020941185,0.00062637456,-0.0034251527,0.032703023,-0.009193305,0.00019251535,-0.002115872,-0.00049718254,0.0020824084,-0.0034429014,0.0060742614,0.00069113256,-0.012284309,-0.0053853085,-0.01191293,-0.002701194,-0.004333459,0.0044010994,-0.0033273785,0.0021525025,-0.0006233353,0.0057456493,-0.0053365207,-0.00422144}},
      {{-0.017726237,0.00890279,0.01879692,-0.008995472,-0.012834064,-0.017836144,-0.011634429,-0.0113852,0.00039659656,0.00023698779,-0.053480618,-0.008715811,0.008692666,0.024660174,-0.0044631143,0.04623083,0.041441433,-0.024247093,0.030879037,0.0065953843,-0.00050250324,-0.016300462,-0.023498764,0.010109843,0.007532137,-6.662416e-05,0.0027289046,0.009512879,0.0035432044,0.028540649,-0.014432695,-0.0027222836,0.010853009,0.0015610167,-0.0016648265,-0.011607664,-0.0038002653,0.01090309,0.006406405,0.004173951,0.003689435,0.0012067648,-0.0042447043,0.001213571,-0.024323974,-0.0049652467,-0.0055646235,0.01704172,0.012378984,-0.0073961304}},
      {{-0.012738145,0.003898752,0.0085251285,0.004562779,-0.005247905,-0.034156792,-0.004858063,-0.0014686832,0.007780956,-0.0052481266,-0.0028412263,-0.0014294313,-0.00064345566,0.022659656,0.0061928057,0.036048103,0.01941528,-0.016270718,-0.004671773,0.005633253,0.018750219,-0.022598173,-0.010643122,-0.0005290643,0.0067048,-0.0054422864,0.015656412,0.0046326243,0.008209461,0.03990168,-0.007585329,-0.0073031364,-0.0054230294,0.0052203652,-0.004689003,0.012330405,-0.0038197,-0.0050132745,0.001185911,-0.0011648036,-0.011361057,0.0054933545,0.0038279179,-0.0023346692,0.004223094,-0.0032755504,0.0084050745,0.01244995,0.010511231,-0.0018045733}},
      {{-0.032550696,0.021088896,0.016663918,-0.0144192595,0.01024057,-0.031043774,0.0061975587,-0.0033635409,0.011603558,0.0006226475,-0.01231979,-0.00047240133,-0.0020423192,-0.015452052,-0.025285987,0.04048738,0.039151404,0.014832802,0.0033111135,-0.005474038,0.007688197,-0.004402598,0.014170942,-0.011417335,-0.013618412,0.009570305,0.015045958,0.01741036,-0.0034642047,0.023296874,0.0013085324,-0.0025215957,0.009542415,0.014844387,-0.016739534,0.0068100365,-0.005957265,0.008132939,-0.003438387,0.0069729444,0.002745371,0.004880211,0.009212763,0.0039726016,0.0028492725,0.0018972417,0.009226281,0.0067696637,-0.0022930058,0.007757779}},
      {{-0.00210752,-0.0067557325,0.0074378904,-0.0003264111,-0.005345127,-0.024594618,0.003961637,0.0016187527,-0.0017403694,0.009191354,-0.020090196,-0.0007073147,-0.0014372315,-0.00049320416,0.0023790647,0.043595437,0.05851519,-0.003295475,-0.0050817053,0.006076444,0.0036046233,-0.02924757,-0.0038878296,0.0032284565,0.006004456,0.0021718733,0.014533092,0.032997973,0.0052413684,0.0125191165,0.0032875957,-0.00021110341,-0.013034186,0.00013623096,-0.0044045667,-0.004046583,0.001202695,-0.003154929,0.01090332,0.0007930658,0.00873223,0.007392553,-0.0025187102,-0.0026782241,0.0024333482,0.009809295,0.005226081,-0.0017016164,-0.024499714,0.0010507175}},
      {{-0.021454362,0.00031953608,0.0038177187,-0.012509285,-0.004652701,-0.022270367,-0.006969505,-0.013537182,0.0044648424,-0.00043267998,0.015015703,-5.9577593e-05,0.0073806294,0.021982554,-0.008358969,0.019668592,0.010876882,-0.008196474,-0.0043308963,0.010160011,-0.0013316313,-0.011974915,-0.0004888669,0.014982051,0.008735635,0.0049345307,-0.0069154776,0.005118397,-0.001186934,0.030108979,-0.014989752,-0.01562564,0.000330189,0.01723357,-0.014825068,-0.005454896,-0.0057519428,0.0063201454,-0.0095712915,0.01287656,0.008643151,0.008330133,0.004836552,0.0071379044,0.005179287,0.008565022,-0.0061182575,0.0012321174,-0.00025316695,0.0015486929}},
      {{-0.011746655,0.005147018,-0.0043046083,0.0007678432,-0.010419261,-0.0029479158,9.148356e-05,0.00035993126,-0.0011796647,0.01607077,-0.0032953604,-0.006332327,0.016647987,0.04105154,0.012288914,0.043187708,0.0343075,-0.0069988333,0.008255766,0.009463796,0.017757574,-0.04434458,-0.017707126,0.004823952,0.004763042,0.0068697003,0.013323879,5.0316794e-05,0.020025212,0.02977556,-0.011544979,-0.00028970288,0.003486293,-0.008655369,-0.016531568,0.003709155,-0.005523444,-0.0018696676,-0.0018242272,0.0018706574,0.026921876,0.016353033,2.6899068e-05,-0.004647991,-0.0037067346,-0.0056316163,-0.0026188353,0.0062914253,-0.009696002,0.0030415251}},
      {{-0.016993204,-0.0030796865,-0.002162018,-0.0043809703,-0.014436173,-0.0050260327,-0.0077787936,-0.010712097,0.022712445,-0.0026914482,0.021235812,-0.003072138,0.015800225,0.03759616,-0.0030230184,0.038347766,-0.001872022,-0.00811859,0.020462127,0.014386714,0.024772393,-0.057943266,-0.018452471,0.0027387785,-0.012392871,-0.0028813137,0.019515172,-0.013998605,0.005822902,0.031250913,0.0041563967,-0.0050949934,0.020458631,0.0055593145,-0.015052731,-0.0075681857,-2.95906e-05,-0.009003632,-0.0060202302,-0.005162709,0.016161742,0.010313338,0.009989916,-0.002295688,-0.0056114537,0.014341671,-0.0018934757,0.009423261,-0.00740541,-0.016732993}},
      {{-0.002966032,0.004641848,0.0018812525,0.0046910658,-0.0062895026,-0.026013406,-0.0016113187,-0.0061313417,0.015298943,-0.0022355884,0.022425272,-0.0012770186,-0.0029134816,0.02218003,0.001176564,0.023208065,0.0140146,-0.0031437748,-0.02335094,0.015880937,0.013763656,-0.029737871,-0.0033009744,0.0014208625,-0.007239591,-0.00032916787,0.014015794,-0.041832402,0.0028491674,0.040851552,-0.016568387,-0.00014422864,-0.0055443044,0.0036566034,-0.0098438375,0.0027258168,-0.004486673,-0.003756999,0.00479107,-0.005838992,0.007745458,0.0012316592,0.0013129778,0.0020928094,0.0013260634,-0.0067838063,-0.0023991615,0.0044917376,0.0015099219,-0.008871052}},
      {{-0.026091084,0.00772847,-0.0016599374,-1.2594966e-05,0.011766586,-0.04077408,-0.010447148,-0.0071188402,0.009414833,0.0054567256,0.013177449,0.0030238123,0.0046233926,-0.014553646,-0.0014331304,0.014599062,0.013868372,-0.011398976,0.0002338992,-0.006289477,0.00067776657,-0.014114058,-0.016692897,0.0012069871,0.005251225,-0.0018724576,-0.008204088,-0.018572917,0.013315896,0.009599785,-0.020602409,-7.077839e-05,-0.0013194807,-0.0154987965,-0.0031426451,-0.0046452843,-0.012844558,0.00020535792,-0.009176391,-0.0036892495,0.0073703327,0.0043988912,0.0031407408,-0.0035207316,0.0017309084,0.015585936,-0.014436567,0.0023572394,-0.0034301796,0.00031440982}},
      {{-0.0025393665,0.00040839973,-0.012512602,-0.00753637,-0.018771546,-0.014672967,-0.0146647105,0.008997825,0.04706239,0.008979979,-0.014436874,0.0025631408,-0.0063351085,0.042375095,0.0074597606,0.019687582,-0.046448026,0.0006288283,-0.001759212,-0.00043561397,0.029234052,-0.021883816,0.002965487,0.0009435146,-0.0019365507,-0.0010105432,-0.010559868,-0.051890124,-0.021293357,0.050715085,-0.0042116777,-0.00047102539,0.009303067,-0.004123722,-0.003926405,-0.007389824,0.0028305824,-0.0034794973,0.007040623,0.019535484,0.008411982,0.007338789,-0.002983812,-0.0017533343,-0.004492596,0.005350187,-0.0017639659,0.0019118267,0.008256987,0.0008520719}},
      {{-0.011257837,-0.0011974673,0.0038499737,0.00741835,-0.0110772075,-0.005645225,-0.008236802,0.015033025,0.024846591,0.004314848,-0.01669206,-0.0078456765,0.005012766,0.04328523,0.020307269,0.016854782,-0.054482445,-0.0026351176,-0.0145993605,0.015865572,0.020105472,-0.0323885,0.0044774427,0.007949429,0.0003778856,-0.0038029044,-0.008341433,-0.044250306,-0.018057577,0.04889796,-0.014313583,0.005859071,0.0020721608,-0.0037317707,-0.015895907,0.006640966,0.0072684474,0.0055508167,0.002008297,-0.0031384225,0.0034372525,-0.0024712435,0.0018968361,0.0069512757,0.013978587,0.027814122,-0.010055692,-0.006016502,-0.007731549,-0.006732774}},
      {{0.032545883,0.0039245016,-0.0012157668,-0.0021143565,-0.022576543,-0.019578693,-0.010303467,-0.0058333366,0.030494785,0.004449966,-0.039432094,-0.001998366,0.0030975447,0.04405509,-0.0065752943,0.049795486,-0.03177383,-0.008262797,-0.0057396507,0.008357225,0.012553584,-0.01894042,-0.01247896,0.014419144,0.0010835369,-0.0076261642,-0.013983868,-0.080653675,-0.025622787,0.06138876,-0.0064742947,0.00341316,0.0017655088,0.003633654,0.00016462608,-0.009538685,0.0031721087,-0.008951391,-0.0058850367,-0.0024462757,0.029558728,0.0041037966,0.0136581,0.011799273,-0.0068129404,-0.002587537,-0.0025341378,0.002869023,0.014633552,0.0035160102}},
      {{-0.0061490946,0.0033263883,0.012452071,-0.0131827695,-0.006281865,-0.018922867,0.0038400257,-0.0031708481,0.013404701,0.018745422,0.01584322,0.010631363,-0.0027298983,0.045646917,0.0010424918,0.031737536,-0.036489237,0.0037527902,-0.004343775,0.0012081536,-0.0023678932,-0.016465006,-0.009017842,-0.0015200216,0.01249083,0.00018512347,-0.02683585,-0.02977937,0.0032086691,0.017293187,-0.0071091065,0.0035074337,0.0047897575,-0.00047050673,-0.0052569453,-0.0055073993,0.00035284154,-0.0021955532,-0.00456115,-0.004212675,-0.0025710678,0.011539131,-0.011329127,-0.009563434,-0.010179372,0.018942611,-0.0056942645,-0.0008028038,0.0026670923,-0.009713513}},
      {{-0.008980056,-0.0028642816,0.0062394748,-0.0022514784,-0.011097321,-0.010547294,-0.008997405,0.008517232,0.00075796724,0.002843827,0.0066439933,-0.014907583,-0.0013257639,0.051341828,0.0027435012,0.035762582,-0.03434607,-0.0009155831,-0.006340811,0.011166902,-0.004317499,-0.025271283,-0.0064361766,-0.00026971588,-0.0069799623,-0.0050971773,0.00061246107,-0.026178788,0.004996808,0.033586334,-0.013661778,0.002619318,0.0023695477,-0.0069154063,-0.011759564,0.004742341,-0.0068721226,-0.0029829897,0.0059717926,-0.011113268,0.012460163,0.0039499807,-0.0035634097,-0.0108660115,-0.0064804754,0.020499138,-0.0009933045,-0.002465659,0.008743195,0.003767024}},
      {{-0.018496258,0.0017346691,-0.0046456056,-0.0029956095,-0.013839309,0.0136531135,-0.007831363,-0.005251799,-0.00018132423,0.0012111427,0.0016358324,-0.0004723147,0.017103069,0.072173044,0.0073364065,0.0507077,-0.033853568,0.0068181655,0.016327288,-0.0023487788,-0.008734896,-0.02761604,0.005952689,-0.0014563526,-0.0070202607,0.0037050953,0.009627125,-0.026316445,0.0124205025,0.024528464,0.01596281,0.005844894,0.009142487,-0.0010690703,-0.01717623,0.021084256,-0.0073639657,-0.0062541356,0.009394998,-0.018716192,0.024418987,-0.0006368437,0.012277557,0.0053678406,-0.0020538543,-0.0023427354,0.007435734,-0.005652261,-0.0062360056,-0.005944481}},
      {{-0.022644108,-0.00054185046,0.0035314264,0.008653029,-0.013109372,0.024157098,-0.0015584434,0.0030347893,-0.012188365,0.0020549728,0.029997136,0.00017461534,0.0050785774,0.076275885,0.005808257,0.0828609,-0.032227498,-0.00025002586,-0.0017555502,-0.0015772529,-0.002167554,-0.04870768,-0.010061709,-0.0072845514,0.0026348648,0.005365807,0.005214218,-0.021882763,-0.016030287,0.013036518,-0.0017165871,-0.012268618,0.0070609213,-0.0025156213,-0.0073528253,0.01006363,0.0033611276,0.0037813615,-0.0009022736,0.0046777213,0.016104821,0.009234333,0.010996688,-0.003056993,0.0058905943,0.00029679015,0.00082611485,-0.0015589893,-0.012523231,-0.003783081}},
      {{-0.023656312,-0.013471995,0.013146862,0.009019231,-0.015013171,0.010544365,-0.0053592804,-0.009810369,-0.000308332,-0.0045951526,-0.0007732117,-0.007096941,0.017183812,0.07313988,-0.0058528264,0.04250016,-0.024069035,-0.0067952876,0.000440208,0.0055014654,0.00633838,-0.0057124295,-0.01575258,0.004856977,0.0006309969,0.004271809,0.0047869533,-0.05306264,0.001581527,0.030530896,0.01264807,0.0043526087,-0.0056549716,0.012469766,-0.001073763,0.010715937,-0.0015720483,-0.020751357,0.00083148165,-0.0041358857,0.016930675,0.0018821992,0.005731986,-0.01365291,0.0013821442,0.013768871,-0.0047482643,-0.0037689817,-0.0072357636,-0.00093905814}},
      {{-0.006646551,0.0038155057,0.00030006375,-0.0074743577,-0.001841602,0.0017905338,-0.007394432,0.0044270493,0.0087725185,-0.003616561,0.008776968,0.0019314919,-0.013421115,0.05213603,-0.008538335,0.040862612,-0.035041295,-0.0021702049,-0.013900476,0.0015733799,-0.0125480145,-0.016165884,-0.00080333865,0.0028596327,0.005099399,-0.003738778,-0.0023146418,-0.014954941,0.0102494685,0.025060957,-0.0047604498,-0.0047377246,0.0065806247,0.005502605,0.004025153,0.000119310585,0.0054374347,-0.0063649374,0.008202548,-0.0010550561,0.006185314,0.008798732,0.0016379692,-0.0075353826,-0.017764546,0.014568345,-0.003182068,0.004934151,0.0028234234,0.007596082}},
      {{-0.037835907,0.00069435284,0.0086570345,-0.012592318,-0.0006086649,0.0011868407,0.008256158,0.004069943,-0.0073332516,-0.00068425445,-0.001400859,-0.0056985873,-0.00799548,0.050211247,0.014014828,0.023736944,-0.02646968,0.012230723,-0.006504943,-0.0014769081,-0.0014023182,-0.021083524,-0.0010036379,-0.01887383,0.011422836,-6.858241e-05,0.012586759,-0.031466078,0.022577787,0.0051161917,0.0102139525,-0.0044603446,-0.009983404,8.473344e-05,-0.002191973,-0.004668903,-0.006730993,-0.0006365749,0.005909336,0.0004287707,0.026554609,-0.01017533,-0.0067943623,0.0004892674,-0.0027131601,0.014551793,-0.0020343743,0.009833981,0.010397313,0.006601227}},
      {{-0.019632041,-0.0011949991,0.0032038062,-0.0029024093,-0.0101410635,0.0047960696,-0.0020314876,0.00087883376,-0.003287797,0.011441108,-0.008298367,0.010040897,0.006727006,0.048695385,-0.0040439935,0.0399301,-0.02281011,-0.001332125,-0.012452943,-0.001181446,0.027158283,-0.023843724,-0.018924925,-0.0068779043,-0.002412636,0.008055736,0.01803033,-0.03314358,0.0021780918,0.02856595,-0.0036448627,-0.0035458927,0.0024622323,0.004785975,-0.011132349,0.0024362616,0.0015759328,0.00039952956,0.0036699062,0.008829965,0.013369562,0.00771083,-0.0028567207,0.0026806942,-0.0005399141,0.008420882,0.0020653221,-0.0050250175,0.0066185235,0.0038220068}},
      {{-0.009078705,0.001184019,0.0029786592,0.013691031,0.01102129,-0.0012362537,-0.003979957,-0.01251207,0.0059321686,0.01108484,-0.005999876,0.0064326734,-0.0014311895,0.042736527,-0.010379583,0.039103497,-0.038433433,-0.008343723,0.015922956,0.0028988216,-0.022242215,-0.006644428,-0.02082879,-0.0025838632,0.0041573965,0.018704584,0.012212737,-0.032633282,0.01843254,0.013511651,0.010849038,0.0053916806,-0.0150078125,0.00052310794,-0.01071369,0.011475319,-0.0131012285,-0.0133109875,-0.0058554593,-0.017471466,0.012226724,0.008951091,-0.0043432624,0.0097068,-0.011634731,0.009708338,-0.022456367,-0.0048861643,0.010529782,-0.009096849}},
      {{-0.0017152082,-0.011567512,-0.0026775897,0.0016898318,-0.008333444,0.0011232763,0.0067903786,0.00075206294,0.001927573,0.003969088,-0.0032388628,-0.0005327677,0.00876518,0.045412257,-0.0011342156,0.021785662,-0.03726143,0.0034688083,-0.0097755175,0.0018793066,-0.007816265,-0.024315296,0.007310551,0.0011292914,0.004400403,0.0028959613,0.009204989,-0.026905641,-0.001933283,0.043632586,-0.0013525536,0.004692386,0.003418747,0.009179594,-0.004901314,0.0023309232,0.003657601,-0.0046500615,6.753511e-05,-0.00025206094,0.016876051,0.009666508,0.003908839,-0.0037137656,-0.00078804663,0.024772719,-0.008572759,-0.0050181034,0.0077231354,0.0035434365}},
      {{-0.012906457,0.001989682,-0.00030883882,0.0038028134,0.004230995,0.004030048,0.0027239856,0.014026922,0.0061408454,-0.009063646,0.022077283,0.013957001,-0.0015174986,0.047758482,-0.0040712636,0.037272427,-0.05865246,0.0088434145,-0.0019447095,-0.013689849,-0.010495811,-0.0375993,-0.007175183,-0.0057445415,-0.00050000683,0.003242231,-0.0052547688,-0.036614344,0.0015160757,0.01932922,0.0030623653,-0.00030655437,0.0023868338,0.0017920607,-0.014491815,-0.00016499858,0.009298041,-0.010500455,-0.0034405163,-0.009896295,0.008999382,-0.001697614,0.02023197,-0.0016098967,0.0035544382,0.032805003,-0.001897797,0.001235522,-0.01153442,0.014436195}},
      {{-0.00580505,0.005980962,-8.831315e-05,-0.0072504818,-0.009626899,-0.0034392476,-0.0019492728,-0.0010568759,-0.0025252502,0.0017165497,0.004678123,0.004966385,0.0020361715,0.04524341,0.0048509883,0.04439589,-0.041630752,0.002175674,-0.0120560145,0.00017371465,0.002000386,-0.039448246,-9.557881e-05,-0.00024062171,0.0049951025,-0.0012009257,0.0013308441,-0.018469572,0.0043650176,0.02389455,0.0012797483,-0.0034086732,-2.7275004e-05,-0.006933993,0.0006970141,0.01030845,-0.005747787,-0.0015286421,0.004537167,-0.00052242074,0.005737716,0.006028416,0.004795529,0.002188847,-0.00025436786,0.010263996,0.0069105886,0.0026127126,-0.008957744,0.0034073798}},
      {{0.006863558,-0.009500973,0.023370547,0.012698307,0.010559072,0.0064000823,-0.004732879,0.0053010923,-0.002648422,0.004375536,-0.0042874976,0.0065864855,-0.013377539,0.05529273,-0.0073828385,0.044106837,-0.053354383,-0.00022326624,0.01216507,-0.007885089,-0.022386238,-0.00056984817,-0.018892711,-0.025061712,-0.013718807,-0.0009264484,0.0008513582,-0.018359665,0.019938879,0.014285411,-0.008619238,0.003694359,-0.0004483404,0.0049505727,0.004982027,-0.003851342,-0.0011758415,-0.005788347,0.011661106,-0.008091922,0.0151144015,0.0095527405,0.0008723148,0.0032699874,0.008475523,0.022278441,-0.006939093,0.0036768287,0.0029239436,0.0102194715}},
      {{-0.023472456,0.008180306,0.009124536,-0.009148903,-0.0031725285,-0.0023315072,-0.010307502,0.0038582436,-0.0009906263,-0.001656284,0.014489673,0.005566822,-0.0008357908,0.04750358,-0.0040834616,0.04410803,-0.03957173,-0.0045995903,0.001997687,-0.0019321893,0.0049621724,-0.019657256,-0.005969752,0.004230901,-9.1837916e-05,0.0041267527,-0.006730075,-0.022872157,0.023263587,0.015293304,0.007834867,0.00047435443,-0.00083856995,0.005052269,-0.0018274949,0.016367035,0.0093264,-0.00065296714,-0.0036122825,0.014956483,0.009407826,0.0053408993,0.008803459,-0.0016386674,-0.0028574266,0.016735153,-0.0029599606,-0.0076353326,0.01058156,-0.0013782962}},
      {{-0.02984691,0.0062554707,0.0017779197,-0.009518855,-0.002465591,-0.0025211342,-0.010628793,0.004159627,0.0068426514,0.007880959,0.026540065,-0.0047138855,0.00037791085,0.04837489,0.00703669,0.04630643,-0.055320386,0.015941782,0.0017934322,-0.016703136,-0.010228852,-0.009581599,-0.0154482275,-0.005073719,0.00029920248,0.004007398,0.0082128225,-0.023297116,0.017453413,-0.0020634443,0.0122229,-0.008670901,-0.003328117,0.0086028995,0.009605381,0.007771752,-0.010679917,0.010410951,0.0031396274,-0.010108917,0.01114612,-0.0040672594,0.007231521,-0.028764848,0.0064614555,0.012186092,-0.0003376597,-0.0031712055,-0.0071202973,-0.0057911836}},
      {{3.672565e-05,-0.00031420196,0.005258443,-0.0030000822,-0.013478361,-0.0062555503,-0.0070148553,0.0029445232,0.006336302,0.0028612989,0.0070674256,-0.00051799713,-0.0072931238,0.04490625,-0.00074457045,0.040603243,-0.027255919,-0.0024645748,-0.011524538,-0.0037349868,-0.001487265,-0.017429592,-0.009310734,1.9805471e-05,0.009576594,-0.006090614,-0.0002626383,-0.02751665,0.013638964,0.035260037,-0.00022151055,-0.0044341795,0.0024050733,0.0031371869,-0.011717547,-0.00023284153,0.0028524548,-0.00559874,-0.002753061,0.007027014,0.002834117,0.0038822878,-0.0028278802,-0.008364797,-0.0070995702,0.020035487,0.0018876258,0.011550467,-0.0036897876,-0.007265685}},
      {{-0.018866992,-0.0011026685,-0.0056773527,-0.0021581762,0.005069347,-0.015399971,-0.0079942895,-0.0011315426,0.005942079,-0.0005839195,0.01466278,0.006946679,-0.015004871,0.034818366,-0.009696209,0.03879341,-0.03492143,0.003271959,0.010814845,-0.004771311,-0.010918255,-0.009128715,-0.0018460882,-0.0047326316,0.005957508,-1.9201007e-05,0.0104208235,-0.014324217,0.018691445,0.014975703,0.0002083006,0.0072145327,-0.0010777013,0.0021724417,-0.025106782,-0.0054191775,0.0053335605,-0.015505137,0.012890189,-0.0009165023,0.0123493215,-0.0070788255,-0.005920842,-0.0047853496,-0.0055692066,0.012965319,0.007904427,0.014312398,-0.0021332812,-0.001683561}},
      {{-0.019796953,0.0019953088,-0.00044134248,0.0014543685,-0.012554134,0.012030407,-0.004162163,-0.0038480451,0.010189184,0.0022397048,0.00037124922,0.0011510841,0.008459909,0.06100839,0.0004684687,0.0588395,-0.0254916,0.0015301455,-0.0012700445,0.0032249854,0.012881064,-0.015862754,-0.012226545,-0.00094364514,-0.011991225,0.00019736197,0.0036373863,0.00074721884,0.009300599,0.019365044,0.0018854989,0.0016326264,0.0017332319,-0.0043995227,-0.0016233705,0.0003083843,0.0034246095,0.004246406,-0.010544574,0.010450428,0.0069641396,0.0065955757,0.004261195,-0.008330026,0.004487096,0.0042426786,-0.0039560352,-0.0075393044,0.007555541,-0.012924087}},
      {{-0.051185906,0.00088902825,0.0019964434,-0.00011503954,-0.011910103,-0.011637691,-0.010303963,-0.018545143,-0.015526891,-0.0011655357,0.01429955,-0.0071127363,-0.018509608,0.016099256,0.00837829,0.037969775,0.006760369,-0.004124068,0.01954473,-0.0040039276,0.0031417164,-0.04441837,-0.00069762213,0.0049119797,0.00857196,0.009947854,0.010192462,-0.006825773,0.017099388,0.01811796,-0.004892691,0.0051988224,-0.01279763,-0.0054755327,0.0037855525,-0.0152189275,0.011097282,0.0033417458,-0.00059147424,-0.0040876335,0.00869577,0.013382999,-0.0057514645,-0.004619304,-0.004767284,0.023098575,-0.0018298404,-0.010303211,0.0051129446,-0.0072416174}},
      {{-0.024022037,-0.0048849583,-0.0037638843,-0.004351592,0.00419011,-0.010127827,0.0014866963,-0.0044692466,-0.011901024,0.0020910562,0.032192703,-0.0013270574,0.0015652792,0.0136106135,-0.0038286953,0.0679793,0.026106704,-9.63766e-05,-0.008684819,-0.0015400299,0.0011427082,-0.03669437,0.013298615,-0.006374932,-0.0024736933,0.007895249,-0.0077319946,0.020109974,0.02089091,0.00053793687,0.005933021,-0.005017818,-0.003562706,-0.0063772686,0.017116945,0.006755361,0.00432853,-0.0035793697,-0.0025299757,0.001619829,0.0030559886,-0.003344521,-0.0044181766,-0.0011717671,-0.00051001157,0.011612639,-0.002613558,0.007849186,-0.0023952376,0.0020089871}},
      {{-0.03336483,0.003821197,0.0022024142,0.0075946767,-0.00056591234,-0.00057854946,-0.00079807476,-0.013905295,-0.0013812808,-0.000914612,-0.011831636,-0.0033822374,-0.0005249793,0.033735067,-0.013018208,0.054644067,0.014211422,0.004024354,0.018950544,0.0023006299,0.010252273,-0.018210465,-0.01055328,-0.008595137,0.0078029693,0.0038872492,-0.004843126,0.012227472,0.0074872477,0.005708079,-0.0041835317,0.007937761,-0.00018220268,0.00544232,0.017136175,-0.007939125,0.004936565,-0.002736715,0.012532167,0.0013355454,0.027030373,0.006637628,0.004424498,0.0059662987,-0.006163704,0.006396223,0.0041049966,-0.004922866,0.0060944147,-0.001836794}},
      {{-0.029081244,0.005301717,0.0017037815,0.0017193746,0.0017147876,0.014403255,0.0067955693,-0.004494562,0.004477924,0.006107903,-0.008335142,-0.0046076905,-0.0015494763,0.05100977,0.0076565263,0.046314366,-0.009312552,0.003973491,0.009253658,0.016149241,0.008657114,-0.00018734086,-0.013954868,0.0057623694,0.005002536,-0.0004937273,0.0021743139,-0.009725283,0.019592896,0.015970016,-0.008821362,-0.009543241,0.0008943594,-0.0017580555,0.010461562,0.00082458335,0.0022107016,0.0040081055,-0.0020145418,-0.00028823028,0.00032734356,0.007923695,0.00075186277,0.0010853331,0.0036923697,-0.0012777271,-0.008582347,0.013649715,0.0018045707,0.00036712748}},
      {{-0.02475844,0.012982318,-0.015510303,0.0037173394,-0.0035180005,0.0077682287,0.011536152,0.0043373844,0.011226682,-0.013625941,0.026193125,0.013364707,-0.006214184,0.042567067,-0.023622986,0.041781977,0.0054126596,-0.0066053923,0.00666502,0.0126216,-0.008996715,0.0144034745,-0.0078782495,0.0074477773,0.0051727723,-0.008339326,-0.0029652873,0.008055351,0.031380292,0.0038617016,-0.010025505,0.0065061045,0.0057555554,0.0022913325,0.008268771,-0.01643917,0.010655464,0.012188316,-0.013434914,-0.010690602,0.0041189417,-0.008962912,-0.009246964,0.0135399345,-0.012472579,-0.0118244765,0.0012761217,0.00819567,0.014879612,-0.0035379985}},
      {{-0.028798323,-0.00775725,0.007148588,0.004050401,0.0018316716,0.015022422,0.00664327,0.0067752446,0.00075135165,0.003002689,0.0033931949,-0.009043706,0.0015092674,0.044687554,0.004070717,0.05274276,-0.0088053085,0.0020583577,0.010154689,-0.0040062973,0.027541552,-0.041226596,0.0036413835,-0.011147207,0.002922768,0.005707191,0.0027640222,-0.021151874,0.01408068,0.024176437,0.0031941824,0.0026082247,0.0017171148,0.002826339,-0.008470832,-0.0029827673,-0.0041039637,0.0006868927,0.011523197,0.0040355744,0.024801817,0.0008549718,-0.0005615761,-0.00048546784,0.00987016,0.0037777093,0.008626999,0.009295901,-0.01876714,-0.0006738039}},
      {{-0.036124866,-0.004113706,0.0011212055,-0.011669786,0.007824161,0.00021208057,0.022143075,-0.0063496944,0.01756136,-0.000110237765,0.009260565,0.0071266107,0.0032553053,0.018454656,0.0014160783,0.017760022,-0.009573538,0.011082054,-0.0002547416,0.012279688,0.00048476964,-0.0035067317,0.0045019356,0.016351473,-0.0084334565,0.0059815515,0.0087864725,-0.01362414,-0.0128297545,0.02320862,0.017340962,0.0014289576,-0.0062212883,0.012649605,-0.0151658915,0.004461696,0.0059604365,0.0019249928,-0.010159975,-0.0057977275,0.011506484,-0.00833135,-0.00049923273,0.01595106,0.0029745926,-0.0134318005,-0.016812472,0.004906466,-0.02355938,-0.0012430614}},
      {{-0.016879266,0.00045009918,0.00027560472,0.0006454659,0.0060229,0.0114474185,0.008801454,-0.003745748,0.0041257106,0.0051425025,0.015519085,-0.009975665,-0.015250492,0.03346169,-0.0005718726,0.05045283,0.0050959685,0.004088321,0.0071805855,-0.008680362,0.0147107355,-0.030756181,-0.004041633,-0.006038012,-0.0016907441,-0.0004334694,-0.004684959,-0.010502048,0.015219607,0.025749011,0.001419227,-0.0033102615,0.0024631189,7.616472e-05,0.0016052385,0.008593535,-0.004643132,-0.0018972902,-0.0059182597,-0.004064236,0.010484195,0.0014813644,0.002488394,-0.0008210421,0.010057968,-0.0031574483,0.00554978,0.0008102455,-0.017711408,0.0034721273}},
      {{-0.011308906,0.009087444,-0.0070364345,0.00983335,0.007099704,0.0094681075,-0.0048389137,0.004620029,0.004219041,0.0130076185,0.008574711,0.010268898,-0.00942693,0.050480545,-5.2032836e-05,0.027783185,-0.059864935,-0.008659768,-0.0074974075,-0.003255009,0.0039106305,-0.038982626,-0.0069909994,0.001009525,-0.0145044075,0.004261581,0.012550385,-0.018769631,-0.0053758835,0.03805987,-0.011177357,0.003095239,0.0012820703,-0.004178752,-0.008140646,0.015974589,-0.00923131,-0.015034627,0.0077145016,-0.004114637,0.023584899,0.013784118,0.009450753,-0.022204433,0.009273958,0.011050673,0.010721686,-0.003230665,0.001702124,0.016518405}},
      {{-0.024795711,0.008198792,-0.0032241857,0.008263803,0.010839647,0.014369906,-0.0051346035,-0.0012833871,-0.012447661,-0.013105557,0.020180011,-0.004821998,-0.00038889714,0.027604124,-0.0070604268,0.06819019,0.016530747,0.010418808,0.00084388314,-0.0045988834,0.016428355,-0.04250942,0.014674679,-0.002445936,0.0015641025,-0.0029618044,0.0015959856,0.0063999314,-0.008594865,0.025429849,-0.0037739736,-0.0015440056,0.003808183,-0.0060191955,0.007658862,0.007295198,0.0017917813,0.000835245,0.001573103,0.002487647,0.0042936783,-0.00282203,-0.0018738997,0.0057972716,0.009818608,0.003259054,0.005866763,0.0017565365,-0.014934649,0.00047312523}},
      {{-0.027735868,0.0048630075,0.015745562,0.007081745,0.0074542896,0.01996354,0.013725299,0.008040961,0.012550068,-0.0036857724,-0.007918756,-0.006076518,0.019334408,0.033623416,0.00013391551,0.06349816,0.034400042,0.0013147558,0.0059591136,-0.006673681,0.0018113909,-0.01135011,-0.005112001,0.00031437902,-0.013018973,-0.005993501,0.009058348,-0.026192486,0.029405579,0.03373241,0.007978822,-0.0008765897,0.007148421,-0.0074843345,-0.008850591,-0.019823331,-0.004911753,0.010840907,0.00562544,-0.010061484,0.023829473,0.00019661858,0.004230117,0.0050085154,0.012912417,-0.008571092,0.008402112,0.004013391,-0.016425347,0.009800805}},
      {{-0.013998363,0.0043781158,0.0070667104,0.004833272,0.019777872,0.0052874414,0.012244033,0.0024496573,0.0056879264,-0.009231142,0.016125318,-0.0033720601,-0.007508187,0.027536789,0.0031779937,0.06423377,0.0067092273,0.012518712,0.0074256267,-0.009341581,0.009374699,-0.009562128,-0.0086319195,0.010522651,0.004769199,-0.0024826685,-0.013586778,-0.0039948043,-0.008823851,0.016547589,-0.0009410887,0.0037174327,5.05337e-05,-0.00033762696,0.0065524154,-0.008875445,-0.0014464895,-0.0006573801,-0.0087143965,-0.00088545267,0.0010153372,-0.0101520475,-0.006015656,0.0014602657,0.0017667898,0.0031753273,-0.0029078585,0.00032919506,-0.0033016878,0.0029895108}},
      {{-0.005376201,-0.01914517,-0.012094508,0.0019737615,0.0011167356,0.011502676,0.0008234116,0.0058985013,0.0022506157,-0.012784684,-0.01195379,0.007643892,0.008472974,0.05305413,0.030995985,0.048231754,-0.013020073,0.018447127,0.011041529,0.0134239625,-0.018241229,0.0074199145,0.016100358,-0.0040860814,0.0022350233,-0.012372506,-0.014117607,0.01430103,0.014427347,0.023672538,-0.0020043866,0.009050042,0.003978913,0.014130051,0.0021168787,-0.011291682,0.0038642648,0.011620013,-0.02153374,-0.013163206,0.03242981,0.010549977,-0.0050288825,0.011413323,-0.01194153,0.0037552733,-0.021384664,-0.019191714,0.000933522,-0.003374794}},
      {{-0.008659952,-0.009725388,-0.0055883205,0.0050158016,-0.003153751,0.015554141,0.006593503,0.007802896,0.0016861076,-0.010733446,-0.013069708,-0.00011680881,-0.0050435076,0.04388492,0.005061219,0.062293608,0.018430436,0.0030207692,0.0010738835,0.007142146,0.0013717434,-0.010179286,-0.0049756407,0.0032624272,0.0064916057,-0.0007612401,0.0042785904,-0.021475475,-0.0035207588,0.029276533,0.005115642,0.007967427,-0.0022085975,-0.00019829327,-0.003749135,0.013762158,0.0022823804,0.0036015664,-0.0031636113,0.0039329263,0.0022043302,-0.008050914,-0.005824643,0.00060123124,0.0019232616,-0.011110994,-0.008735934,0.0046848194,-0.0042775637,0.0027176356}},
      {{-0.02582306,-0.004823222,0.010550148,0.005575902,0.0058921757,-0.0018654246,-0.00214701,-0.022722555,-0.0007984392,0.000365423,-0.0011720409,-0.0037691288,0.012819743,0.015050078,-0.0069946176,0.038597684,0.010306715,-0.007783575,0.00022618343,0.0052417396,0.00010315203,-0.0057606343,-0.0037843888,-0.009584926,0.0011878049,0.0010851036,0.022611838,-0.03540736,0.012793352,0.020158092,-0.016212303,-0.00023775603,-0.0070150313,-0.0075413063,0.00066376594,-0.00499047,-0.0054780603,0.006010778,-0.005969822,0.013831329,0.022935232,0.00609551,0.008706867,-0.0085508395,-0.007313669,-0.0023172803,0.007180881,-0.0027754009,0.000913043,-0.010023506}},
      {{-0.008218783,0.008715812,-0.0040773237,0.0026532179,0.012149619,0.005257075,0.003660969,0.007578189,0.0062369606,-0.001438683,-0.008374371,-0.007903273,-0.0088404985,0.02847477,-0.008918234,0.064087085,0.023311852,-0.0005386468,-0.006514096,-0.00339853,-0.0032489859,-0.0047253463,0.00034375934,-0.0035708882,0.0071426826,0.0010870186,-0.013688934,-0.011724784,0.01712304,0.019133613,0.008845063,-0.005165496,0.00062691653,-0.006045903,0.004058222,0.00078795507,-0.005418718,0.0018250712,0.005211534,-0.0038553975,0.0076019024,-0.0005476325,0.0011977347,0.004806412,-0.0011489221,-0.019299168,0.0063349316,0.0008767309,-0.009407986,0.0015017302}},
      {{-0.05490747,-0.004431288,0.0042987396,-0.008450314,0.013785995,0.006509484,0.01617772,0.006987715,0.0032587913,-0.004136489,0.018851638,-0.004786216,0.006810915,0.013348577,-0.006145004,0.044452142,0.02059526,0.00090073526,0.00074457657,0.0023346064,0.021963263,-0.0035037955,-0.0071439627,-0.005760767,-0.0035933927,-0.006930397,0.015964184,-0.017086862,0.032245737,0.017119734,-0.002697182,-0.015647264,0.0066657467,0.013125393,0.005128609,0.0032542583,-0.0071085547,-0.012280592,-0.0057273284,0.014690133,3.4736193e-05,0.013365495,0.0044364594,-0.0036106596,-0.0033778679,0.008934817,0.013650981,-0.009585252,0.0020792922,0.0014124089}},
      {{-0.0034077016,-0.002561588,0.0009315686,-0.0023545306,-0.0006127207,0.004338414,0.006909638,-0.00063290034,-0.0108950045,0.0024709362,0.011277863,0.0060490165,-0.0027935342,0.030806627,-0.005052404,0.06389502,0.018290121,0.0074306806,-0.0069929445,-0.004337924,-0.00053730677,-0.02831658,0.002866136,-0.0052693766,-0.006715488,0.0017033751,-0.006990581,0.006355225,0.0321674,0.0060767536,0.0035927405,-0.00016644599,0.0062345257,-0.0020234538,0.0022804195,0.0034086893,0.003477114,0.010258973,-0.00035823774,0.00020912485,-0.0020328234,-0.0029274134,-1.46223e-05,-0.003404046,0.004353138,0.0013115423,8.038621e-05,-0.0004827433,-0.006557857,0.005753892}},
      {{-0.004454821,0.006922481,0.0055467086,0.002280923,0.0019456496,0.0046251453,0.006658708,-0.017058276,0.01945696,0.0058299587,-0.00081072695,0.004100416,0.0052443044,0.050334956,0.007174484,0.041464757,-0.034320835,-0.0018942164,-0.021817025,-0.0059892335,-0.015041098,-0.0067597437,0.00049016386,0.008303213,-0.015853198,-0.0014535247,-0.013353877,-0.0022189768,-0.011637917,0.01958698,0.014435781,-0.0044235224,-0.0098373145,-0.013267049,-0.008275082,-0.002041773,-0.009044315,-0.0031496955,-0.004594009,-0.016513636,0.0022416394,-0.00060204015,0.0114598675,0.0123619195,-0.017210627,0.010769359,0.0019736076,-0.0071942327,-0.0009577547,-0.004919836}},
      {{-0.019960372,-0.004252835,0.0038124996,-0.0068868184,0.0057209176,0.0060794544,-0.007688835,0.011520892,-0.0057771145,-0.0011168121,-0.00038218912,0.0017687139,-0.0016442152,0.052092783,-0.0005101609,0.055500466,-0.02390487,0.0054257987,-0.0055280835,-0.011698307,0.0072523016,-0.015549036,-0.012525407,-0.0020470018,0.002508105,0.009982659,-0.005592341,-0.029929604,0.016750537,-0.00074898015,-0.009037114,0.010583981,-0.002733177,-0.0029253566,-0.007872124,0.004560987,-0.010195668,0.0006498025,-0.0012277343,-0.0060293307,0.015265978,0.0013414188,-0.0025649108,0.0034482232,0.003933838,-0.0069741206,-0.005748447,-0.0032743618,0.006797226,-0.0072647277}},
      {{-0.028933115,-0.0047019734,-0.001980237,0.010594716,-0.009706252,-0.004571797,-0.012308614,0.00042114392,-0.010702457,0.001702055,0.0061104847,-0.006977236,0.008664048,0.037982427,0.00056613097,0.053820133,-0.054475065,0.007583611,0.0007929168,0.017536001,0.0022263853,0.010885506,-0.004229033,0.0019205592,-0.0041097663,-0.0110572,0.023401204,-0.054408748,-0.01523528,0.010153609,0.0050358875,0.0072800172,0.0040618675,-0.00250117,0.00016940074,0.013845485,0.0009773553,-0.0028128352,0.012011234,-0.016823843,-0.0022447545,-0.011466398,0.00695044,-0.005838341,0.0009331068,0.0011572184,-0.0024571326,0.0035554084,0.0025872793,0.0052736755}},
      {{-0.014285351,-0.00021741624,0.010124776,-0.0034212065,-0.006859271,-0.0033271145,-0.004354674,0.0059732334,-0.0006499959,0.008885307,0.0051269582,-0.0038788095,0.0030246757,0.04606735,0.0020405604,0.06667707,-0.03348422,0.013335984,-0.004772496,-0.013094067,0.002741853,-0.03257373,-0.0040609394,-0.01344093,-0.0010507626,-0.0028966607,-0.009217245,-0.035259888,-0.0013030602,-0.007469702,-8.959401e-06,0.007414528,0.002706846,0.001174132,-0.0034939756,-0.0044487994,0.00014101976,-0.0008736605,0.011456823,-0.00043099353,0.025086705,0.0049502556,0.010941312,-0.00029290732,0.006968135,-0.0069967564,-0.0090624,-0.0060475445,0.0036452694,0.0011041514}},
      {{-0.032000363,0.0014911748,-0.0078079766,0.019917296,0.008847468,0.003688901,-0.01187619,-0.0016943405,-0.0002453314,0.0060407813,-0.014895767,-0.01819278,-0.009750059,0.04436981,0.0038328394,0.07036331,-0.03648677,0.007904626,0.008129115,0.004160099,-0.008825255,-0.013127107,-0.017768176,-0.017123777,0.0015026454,0.0018128484,-0.0037875108,-0.016863499,0.007858169,-0.018953329,0.011053411,-0.008691491,0.004130134,0.013289387,-0.009602865,0.008551476,-0.006135252,0.001433713,-0.0014940525,-0.0012246523,0.029831592,0.002248843,0.0003438219,-0.0014372669,0.014284546,0.0070941118,0.009323997,0.0058578188,-0.0026011881,0.0029331236}},
      {{-0.025482932,0.0057493374,0.005035484,0.0035712458,-0.00199748,0.0019987065,-0.010050958,-0.0014764533,-0.008142363,-8.9451154e-05,-0.011572046,-0.0015289262,-0.00097203825,0.051432643,0.001151867,0.0633933,-0.042509645,0.0044269483,0.017044995,-0.002457508,-0.0118625425,-0.0044855624,0.0043235146,0.0007075917,0.001991594,-0.004940064,-0.010908898,-0.0020429625,-0.00062284234,-0.018256571,-0.005178879,4.7075173e-05,-0.009365397,0.0047503705,-0.002836857,0.014625642,0.0009820313,-0.013900491,0.005035798,0.0013116734,0.011040986,0.0040226784,0.0054713865,0.0025132606,0.010303263,0.014702316,-0.000384175,-0.0036496173,0.013155258,-0.005969641}},
      {{-0.020330809,0.005895283,-0.0064517935,-0.0023529427,0.0016954237,0.004726736,-0.0027344495,0.0030587555,0.015531975,-0.011855148,-0.026266405,0.013112368,-0.004903226,0.05677799,0.0059860204,0.064436644,-0.047190264,0.00429391,-0.003407917,-0.028169679,-0.02050453,0.004457055,0.01204039,0.00064797874,-0.0085834935,-0.008375634,-0.00837808,-0.0013918496,-0.021905476,-0.01956117,0.010373598,0.0067807646,0.0032440035,0.017460138,-0.0031434319,-0.0061385087,0.009740902,-0.010581198,-0.0025503691,-0.019453641,0.022189677,-0.010241728,-0.0032047962,-0.010920445,-0.00847578,0.005964023,0.005524827,-0.006183209,0.020893779,0.008409375}},
      {{-0.017429017,0.002434722,-0.008631464,0.0024382442,0.000828726,-0.016542563,0.009885814,0.0068383957,-0.019952003,0.0073665977,0.022714484,-0.00038429827,-0.011251015,0.03061138,-0.003455634,0.099448025,-0.030477023,0.01594233,0.0014284138,-0.0089350715,-0.00075897505,-0.020537082,0.011957519,-0.0064890217,0.0034249004,0.0010110171,-0.00015288997,-0.0040625823,-0.007348217,-0.036945023,0.009643115,5.044245e-05,0.008255546,0.0019937959,0.0008783351,0.0015359774,0.0028777746,0.002310806,0.0023612252,0.0008092318,-0.0039100037,-0.010402004,-6.5325636e-05,-0.004596243,0.01341941,0.0027724402,-0.0084234495,-0.0150558725,-0.0027189082,0.001917347}},
      {{-0.035453368,-0.004166901,-0.0135599645,0.003246209,0.008214603,0.007885559,0.005850656,0.007047552,-0.01959187,-0.00972683,-0.028645713,0.0016231602,-0.0019883695,0.04637315,0.010785541,0.06391814,-0.04297585,0.0075545316,0.012191992,-0.0021453584,-0.023077987,0.015643168,0.00026236312,0.0010594752,0.020373307,0.0010126537,-0.013699137,-0.00949511,0.013119523,-0.008819996,0.01779411,0.0017081451,8.39517e-06,-0.0015766043,0.023406768,-0.007889969,0.010623348,-0.0021228036,-0.006155207,0.0005970455,0.012858292,-0.015810791,-0.010883584,-0.0040102187,-0.0021374428,0.010522803,0.003654564,-0.015844593,0.0042484757,0.008813627}},
      {{-0.022434937,-0.00030986636,0.0050419583,-0.0046478226,1.084769e-05,-0.011537447,0.0043792273,-0.001617895,-0.00069131114,-0.0039825705,-0.027625015,-0.0023116216,-0.0019605649,0.045794375,-0.0026602284,0.07967115,-0.044359893,0.00328581,0.0027661987,-0.006139523,0.0014825285,0.018886864,0.014256957,0.0028623398,0.0037490036,0.00901948,-0.008990656,0.021056645,0.0036642547,-0.041292664,0.007396845,0.0036973434,0.012625388,-0.0028451516,0.009925507,0.00013126606,-0.005632323,-0.008130208,-0.0066357814,-0.0013726538,-0.009049181,0.0002512229,-0.001666641,0.0076999418,0.009974802,0.0004575323,-0.0092611555,-0.0018106126,-0.004874891,-0.003970094}},
      {{-0.030691765,0.0040585264,-0.005835903,0.0153900655,0.0077907485,-0.003147061,0.0047712424,0.006784486,-0.010111856,-0.021277707,-0.008237257,0.00061221,-0.0049201585,0.036979534,-0.0070881057,0.082762,-0.032931976,0.009513554,0.015342569,0.007888469,0.0036991353,0.0058527896,0.020033207,0.016279753,0.010507519,-0.007372853,-0.004921919,0.013324884,0.016628066,-0.024143662,0.012244195,0.009611928,-0.0074200206,0.0052937698,0.0043176985,-0.008612786,0.0010951653,0.008129554,-0.009916823,-0.00038972273,0.0025760864,0.0039779404,-0.004605339,0.0045280657,0.0068604522,0.009635486,-0.0007335611,-0.0043570003,0.000474488,-0.0071771042}},
      {{-0.019378541,0.0014807894,-0.007524415,-0.0015092473,0.013438029,-0.013772427,0.0010547647,0.0073209577,-0.0013282744,-0.0045504407,-0.027440418,-0.0008631209,-0.0031537984,0.035165902,0.0048798104,0.0811708,-0.018164275,0.012974138,0.0032256807,-0.0075407713,0.0022247764,0.0052016038,-0.0060634017,-0.0007325914,-0.0010011796,0.001226886,-0.0026070355,-0.009434191,0.0005290863,-0.037868343,-0.0035086323,0.00078249286,0.005500122,0.0053100884,-0.0027189564,-0.009189759,0.0019199377,0.00035240286,0.005349294,0.010333209,-0.0016278375,0.00023656544,0.006988871,0.0041686203,0.019556964,-0.007625951,0.006555759,-0.0055061374,-0.00042235287,0.008386529}},
      {{-0.02350728,-0.0027919505,-0.005000172,-0.0073593073,0.0028339112,-0.0021144892,-0.0033862647,0.0068659633,-0.0006854742,-0.0050865044,-0.029482517,0.010836469,-0.01745139,0.04807864,-0.0006652181,0.053229064,-0.03664365,0.0062966915,0.0050171055,-0.009985225,-0.0025049297,0.010867414,0.007233049,0.022371713,0.0015684048,-0.0016330164,-0.007213728,0.00979676,0.0015833928,-0.019117538,0.010780893,0.002008535,-0.0006973837,0.0008561082,-0.014617398,-0.0036955797,-0.0017158038,0.003814611,-0.011422312,0.011713598,0.0008920278,-0.01597284,0.004741426,0.016749496,0.0044090296,0.012362312,0.0019856754,0.011041877,-0.0004830012,0.0035239568}},
      {{-0.008302481,0.010929651,0.0014842862,0.004657988,0.0060812836,-0.024353895,0.0026490388,0.0014411283,-0.009424112,-0.0051469957,-0.02009222,-0.004218596,-0.0026345742,0.0262379,0.005633735,0.08292452,0.003213177,0.0065484107,0.003015829,-0.0024518762,0.004571618,-0.0059755617,0.0061163167,0.0047354484,0.00041738528,-0.006272026,-0.0021417253,0.008022282,0.002854168,-0.021468218,0.005092267,-0.008854422,0.0013994907,0.0024713858,0.0005571382,6.3591506e-05,-0.012028743,0.0013884676,-0.0016220235,-0.011511953,0.015484751,0.003960653,0.0031776277,-0.006238644,0.0050158785,0.011767752,-0.0013920296,0.0017036564,-0.0066995923,-0.0077380687}},
      {{0.0069633685,-0.0015820944,0.00054149656,0.0016147703,0.008025373,-0.007830451,0.0066058924,-0.0056509683,-0.0034314282,0.00800461,-0.06331052,-0.008725307,0.013529716,0.038868688,0.003555151,0.047893856,-0.017437942,-0.015939204,0.015321114,-0.00077774684,-0.0059194416,0.017368808,-0.010171502,0.016487487,-0.0034808866,-0.0068189125,-0.00923964,0.021942202,-0.0008955176,0.012307719,0.009070445,0.0088743325,-0.009219676,-0.004989271,-0.0016141204,-0.01239691,0.005415382,-0.016460055,-0.0049521434,-0.0058935257,0.0056967856,0.012094974,-0.0016711118,0.0005379701,-0.007705598,0.014398033,-0.013118865,-0.0012296061,0.0029037078,0.009862312}},
      {{-0.025628777,-0.0013790797,-0.008722061,-0.00078750635,0.005995075,0.009477782,0.0063737133,-0.00206477,-0.021404704,-0.007250559,0.02469334,0.0061190664,-0.005134101,0.054455027,-0.009478683,0.09421807,-0.022748012,0.0071830256,0.0030784032,-0.01594882,-0.007547702,-0.033954363,0.003994775,-0.007880497,0.007758659,0.00076746906,0.009023314,0.018737556,-0.0011317466,-0.010990312,0.007659013,-0.0040887496,-0.00024504366,0.0019489374,-0.00674235,0.008732069,-0.001793199,-0.001636193,0.012358752,0.004757766,0.010545203,-0.005920099,0.0025458946,-0.005312955,0.0129441405,0.008698726,0.002484696,-0.007060004,-0.009218562,-0.0028002532}},
      {{-0.043999363,0.0053686034,-0.0012495456,-0.003014879,0.0061267437,0.0003721719,-0.018637141,-0.0052964496,0.004466952,-0.008712524,-0.004088707,-0.010651898,-0.0048994063,0.035820857,0.0069763907,0.06880571,-0.03302271,-0.0012366474,0.017146861,-0.010966233,-0.005714562,0.01630915,-0.009312536,0.004100312,0.0059707337,-0.00069348974,0.006007693,0.0049805585,0.009873937,-0.0073856777,0.028161222,-0.013827424,0.013278148,-0.0067369947,-0.004392079,0.0044428585,0.006648043,-0.0030177466,-0.011638674,0.0001266398,0.006500307,-0.013603268,-0.008952687,0.003988559,0.013133308,0.015587527,0.010429082,0.008883497,0.0159293,-0.027961684}},
      {{-0.028933093,0.0013930908,-0.0016127073,-0.002705946,-0.0008192663,-0.0014441293,0.0070771584,0.0040430794,-0.014534698,0.00031900045,-0.017094735,0.0055515333,-0.0019877814,0.039650608,0.0024624316,0.08445224,0.0062453877,-0.0005705195,0.0072284653,0.0015626146,0.0006063632,-0.011720368,0.021554537,0.0031302609,-0.0075102057,-0.0021503286,0.0011519376,0.02454528,0.012706745,-0.007147827,0.00018074302,0.0027660413,-0.004023861,-0.00031288347,0.007942171,0.012337901,-0.0029620526,0.00088286324,-0.005185739,0.00064904726,0.0070934063,-0.009765542,0.0035247174,0.005931033,0.0023147936,0.0117810145,0.0011911403,0.0063465256,-0.0055522663,0.008408016}},
      {{-0.035878494,0.009771798,-0.00020038751,0.0034793722,0.012307312,0.0085503515,0.012157973,-0.002375542,-0.010381304,0.002067632,-0.04618932,0.0042015375,-0.00012520453,0.041508347,-0.009447994,0.06597322,0.019664772,0.019010488,-0.00025617357,0.0040441975,-0.0029492804,-0.0016661825,0.01569893,-0.02459979,-0.015991056,0.002358809,0.0063063176,0.010471044,-0.01583018,0.0035690034,0.013814482,-0.01254549,-0.022363603,-0.0033941239,-0.0056476165,-0.005253522,0.009181114,0.0036367998,-0.00883223,-0.00058712496,0.018422281,0.010293602,-0.005222958,-0.0007815833,0.0031758868,0.006607675,-0.0051765246,-0.0033223839,-0.0049122097,0.013963268}},
      {{-0.022648448,-0.00874539,0.004264957,0.00020008857,0.0010627436,0.006678722,0.0026759012,0.0020503746,-0.005200956,-0.0081853345,-0.012269685,-0.0061609186,-0.005417418,0.040058795,0.0012318225,0.067860544,0.0004851439,0.0011924112,0.014684717,0.004233376,0.0038030173,0.0015658488,0.01818348,-0.008442679,-0.00096982036,0.0002893766,-0.006786743,0.020392548,-0.012123224,0.006503126,0.0008811718,-0.004599024,0.0011157058,-0.0031105245,-0.001707608,0.0020416935,-0.0010690037,0.0030886102,-0.0031397815,0.011533794,0.0071364185,-0.008116555,0.0050879107,0.0009153045,0.018377032,0.0051491987,0.0042622956,-0.004713783,-0.0029085265,-0.0019674122}},
      {{-0.018182375,0.011682408,0.010936477,-0.009562142,-0.007921779,0.0055337423,0.010236085,-0.00044649807,0.00724928,0.0048561683,-0.005942974,0.018917505,-0.012043155,0.034867793,0.0075946404,0.060319465,0.0133480765,-0.0050071497,-0.0064253304,-0.012313771,-0.022474432,0.020527607,0.010682201,-0.0013273534,-0.010993861,-0.0054887896,-0.01777732,-0.0030549539,-0.0062427195,0.0095504215,0.0052860426,0.01553519,-0.006757134,0.0013785536,0.0069530467,0.013378575,0.02119666,0.006324519,-0.009499754,0.0018072311,0.018463118,-0.0034201362,-0.007925285,0.0060047572,-0.006872641,-0.0036847692,-0.014025265,0.0033939097,-0.0008412823,0.010541192}},
      {{-0.019147942,0.002495439,0.00577879,-0.0115062995,0.0019908175,-0.012450234,0.0113522215,0.0011964114,0.006605328,-0.00045752156,0.0006613492,-0.00093812123,-0.0117538385,0.030134885,-0.007588978,0.050594315,0.00034617426,0.0057897107,0.004135958,-0.0025715195,0.0019078862,-0.016965335,0.012358427,0.0029363257,-0.0037893958,0.0008680384,-0.0038315943,0.011115382,0.004326708,0.013411061,-0.002484112,0.008479121,0.0013483255,-0.00013668781,-0.0019425353,-0.0042097014,-0.005708064,0.011189798,0.0027650278,-0.002807591,0.0045218975,-0.0066177445,-0.0008505354,-0.008030117,-0.0055196304,0.003455483,0.004764054,0.0038888515,0.0065806443,0.00017542327}},
      {{-0.039992005,0.006846662,-0.008658958,-0.00984777,0.005006835,0.00060281577,0.0026318582,0.020406019,0.010452959,-0.020541508,-0.010970771,-0.0017613306,-0.006740908,0.040613387,0.0041101864,0.05208798,0.0015250217,-0.0021501386,0.010164424,0.008517456,0.0026529282,-0.016978126,0.011148648,-0.008500092,-0.0043709897,0.00825574,0.011351974,0.019392835,0.012833756,-0.0061775553,-0.0130053125,-0.006245209,-0.0066042948,0.0027615414,0.0026876624,0.0021005827,-0.01565321,0.0008971667,0.016106196,-0.00012516587,0.02510842,-0.012883107,0.009504982,0.00058107433,0.020847768,-0.011488222,-0.016736185,0.0004180489,0.0136171905,0.01734851}},
      {{-0.016605102,-0.004411073,0.0014416631,0.0015035712,0.0056496663,0.008635145,0.0077931047,0.0013806041,-0.012758763,-0.0071055344,0.04419613,0.008437894,-0.005836732,0.043204453,0.0047616875,0.08515838,0.011374515,0.005323122,-0.00961627,-0.0067562517,0.0052760504,-0.027212784,0.015385827,-0.0052758534,-0.0069336346,-0.0024454345,-0.008419991,0.017276695,-0.0013420633,-0.0037207468,0.0066955094,0.0024868362,-0.008017519,0.0046751043,0.0026211303,0.003256769,-0.00034720017,0.001643141,0.0053061573,0.0046244613,0.005529866,-0.0018551917,0.0022728804,0.008907052,0.002475494,0.0007374434,-0.0072803916,-0.0063276165,-0.008139413,0.0014354748}},
      {{-0.036393017,0.009146838,-0.0074616354,0.010757899,0.02587968,-0.0015187765,0.022021744,0.0021607957,0.015590833,0.008914403,0.00116467,0.004930206,-0.0010236206,0.03118978,-0.001832167,0.06156172,0.01155338,0.009952005,-0.003917437,-0.004342699,0.005073135,-0.0059500304,1.6358921e-05,-5.9883434e-05,-0.0030741317,4.0187388e-05,0.0047203214,-0.02370328,0.0054816827,0.01438661,-0.004351694,0.005403853,-0.018282365,0.005183477,0.00043318063,0.0034583595,-0.0023924105,0.02399965,-0.014402333,-0.00095881004,0.033308517,-0.008643308,-0.00070102926,0.0011189374,0.008533893,0.0070965686,0.00092497404,0.0006652513,-0.0040861145,-0.00010066177}},
      {{-0.011129998,-0.0036241282,-0.004383206,-0.00017083343,0.0061503393,-0.00986512,-0.0016822984,-0.0024634597,-0.0026164937,-0.0047931303,0.009102253,0.005649236,0.007747226,0.028798906,0.00010720798,0.04476863,0.012386964,0.00046101588,0.0012822626,-0.00019381059,-0.001551831,-0.005792537,0.013237074,0.0034301118,0.008770875,-0.009148188,-0.0021084063,-0.010707365,0.0069424165,0.027382756,0.0071108523,0.0058262437,0.0005148843,0.0017996478,-0.0005677152,-0.0025604488,-0.0021637832,0.003606823,0.0025667578,-0.009241417,0.0016834124,0.0047011906,-0.0040849475,0.005933293,0.002356726,-0.00075423875,0.0054739323,0.0051888046,-0.0059733246,-0.0015336772}},
      {{-0.037870534,0.009527015,-0.0052484022,0.0011589164,0.007955939,-0.003908515,0.002162209,0.009358954,-0.0044761417,-0.0022491722,0.019894792,-0.0026024212,-0.00465789,0.035845146,-0.0017972027,0.04174489,0.0051741395,0.0006112746,0.010739016,0.0027485322,-0.009737894,0.0025942274,-0.008067426,0.012474558,0.0046080397,-0.0036070708,0.007873251,-0.0112789,0.01272464,0.025435045,-0.012336395,0.0011640785,0.007008395,0.0043763374,0.0071231774,-0.0037867422,0.014089627,0.007098111,-0.001997974,-0.016715465,0.003907923,-0.0012197382,-0.010507855,0.0069499626,0.017643979,-0.00092408014,-0.005877955,0.0072680986,0.0022249285,0.004002072}},
      {{-0.014285128,0.0021131577,0.0003604464,0.0033908598,0.011017833,0.0028899594,0.0076177847,0.002428365,-0.00041481628,-0.004178587,7.870662e-05,-0.008095003,-0.0074628973,0.04192426,-0.0050201183,0.06852556,0.011994215,0.0015876538,0.0066048894,-0.007345391,-0.005892691,-0.00607321,0.0022312868,0.0032610088,-0.0016295499,0.00270327,-0.0006067002,0.0010071726,0.012160049,0.021444751,-0.0013011799,0.002796851,-0.002309324,-0.0071139475,0.0070754807,-0.008624914,0.0010300254,0.005821436,-0.0047779228,0.0010003287,0.010620197,0.0054641943,-0.006470249,0.0015833266,-0.0012952004,-0.0026823918,0.004367443,-0.006816491,0.008673785,0.00090455805}},
      {{-0.022774916,0.013746418,-0.0025317376,-0.0021049262,0.015454145,-0.021774454,-0.0031834191,-0.009715591,0.014395935,-0.015700696,-0.0005575747,-0.007370049,0.015146925,0.024621725,-0.0069678766,0.028123975,-0.0032017727,-0.012349433,0.009564142,-0.007873552,-0.020126346,0.0009376934,0.015191955,-0.01120382,-0.003538712,0.0034759887,0.015268578,0.006207473,-0.0025830115,0.026440341,0.0040232623,0.009517301,0.007975595,0.004606959,-0.0030413894,0.011642522,-0.009753676,0.020185392,0.0029458245,-0.004053081,0.019918464,-0.0052739996,0.0040283287,0.013039547,0.008411496,0.01124836,0.0018379228,-0.008785684,0.004876836,-0.0048631383}},
      {{-0.03689559,-0.0040761027,0.00806586,-0.005416535,0.008442925,0.005838644,-0.0042207167,0.0052712318,-0.0009140124,-0.00018401115,-0.01776203,-0.0037949213,-0.009398347,0.04759596,-0.004983403,0.05630116,0.008880824,0.0034750765,0.0046529258,-0.013895702,-0.006188507,0.009159855,-0.0061362097,-0.0037420427,0.008493521,0.00079133036,-0.0026149382,0.0033674324,-0.019885466,0.0027061433,0.0062769186,0.005551648,0.004230962,0.0048863767,0.0036047262,-0.00844445,4.0108873e-05,-0.00468517,0.009087353,0.0003097359,0.010061903,-0.0017875289,-0.006108717,-0.004429931,0.016571485,0.0077303806,0.0045030313,-0.0035880366,-0.006393406,0.003410411}},
      {{-0.025156695,0.013822317,-0.0021194627,0.0010501901,0.01633252,-0.0054315245,-0.003295906,-0.00026673963,0.009826093,-0.0018628328,-0.02712165,-0.0057417536,0.00622909,0.044263355,-0.016959583,0.04663523,0.007945729,0.0218375,0.022119626,0.0006613558,-0.015912909,0.013583909,0.006671838,-0.01521862,-0.015691098,0.0052783727,-0.010285422,0.016883492,-0.011700342,0.0066203903,0.0057170154,0.009643519,-0.008251511,-0.007916516,0.0010378552,0.0014478661,0.0018028406,-0.0069182985,-0.011487619,0.0057035657,0.035294395,-0.0030833546,-0.01725869,0.014211866,-0.0034463417,0.00089916034,0.0024635876,-0.0008618968,0.025127659,0.0023299556}},
      {{-0.017507141,-0.0055924375,0.0021817808,0.001238061,0.0017532437,-0.007073632,0.0029820993,0.0014384796,-0.002578451,0.0029369825,0.039835256,0.0040783593,-0.003865989,0.031470604,0.00483545,0.07967557,0.015766444,0.0048761135,-0.0019275591,0.0036484727,-0.0066204905,-0.008407029,0.02385952,0.00073996774,-0.00024477814,-0.0043902886,-0.0033570162,-0.0055551166,-0.025626779,0.020536225,0.002882025,0.004724641,0.0035282476,0.00311649,0.0027730067,0.00073199533,-0.0035603214,0.00388416,0.00449642,0.00058631774,-0.01446482,0.0011716004,0.0006108722,-0.0008959858,-6.5556324e-06,0.00037086208,0.00096846867,-0.009232765,-0.0010153932,-0.0019457894}},
      {{-0.02387298,-0.0028611606,-0.0008952219,0.0076482645,0.0031574944,0.0060911546,-0.0022167347,0.009666097,0.0028273251,-0.00831514,-0.0025697614,-0.0064320914,-0.0109794615,0.054383833,-0.00717434,0.05163066,0.006838772,0.0061584483,0.0056649134,-0.013063507,-0.0036524937,0.0048480537,-0.0017579326,-0.0020321955,-0.013608819,0.0059341597,0.023000242,-0.027834829,-0.00086914096,0.03850821,0.009982557,-0.007544805,-0.011331707,0.005018358,0.0005971516,-0.012712396,-0.0028841882,0.0026259762,0.011717925,-0.015678622,0.017186962,0.00044477847,0.00012936613,-0.0009930748,0.007707975,0.005493661,-0.007824172,0.008811246,-0.006214832,0.01571824}},
      {{-0.025168708,0.005433896,0.0017002804,-0.0012399553,-0.0023770286,-0.0019515355,-0.00022189117,0.0032281952,-0.004099794,0.0057306867,0.008465349,-0.0025833107,-0.0033547166,0.035388324,-0.0045331377,0.054902885,0.028117485,0.0057787043,0.005861327,-0.009349715,-0.003639934,0.012569537,0.0046395618,0.010385126,0.00033339305,-0.0037248556,-0.018027404,0.0012302077,0.0013921689,0.021128299,-0.007651272,0.00026365466,-0.01148834,-0.0044787643,0.010058696,-0.008779953,0.006010997,-0.006481364,-0.0019651148,0.0051194895,-0.0055916323,-0.0023974115,-0.007000637,-0.00039959373,-0.0005335612,0.0037804518,0.00265437,-0.00053434115,-0.0029894372,-0.014758907}},
      {{-0.009094067,-0.0053471196,-0.015768131,-0.0023483175,0.015461768,-0.0029557857,-0.005696016,-0.0038060874,-0.0013600957,-0.0040135146,-0.019088585,0.006288954,-0.016421683,0.04747346,0.0007444029,0.068229474,0.022205276,0.010113894,0.0033837873,-0.013416917,-0.014607615,0.0037072382,0.0173303,-0.009852012,0.016717002,-0.017067198,-0.025242068,0.024941014,0.015784288,0.01484904,-0.010790144,0.014847825,-0.0058415895,0.009073366,-0.00712026,-0.004016697,-0.0041193096,-0.003642984,-0.0028662602,-0.008937855,0.029464424,0.0046098395,-0.0048201797,0.008715134,-0.0031119252,0.018541157,0.002356709,0.009743776,-0.0006029704,-0.007944701}},
      {{-0.028670035,0.00026871933,-0.0020980593,0.0089090085,0.004067306,-0.00010199842,0.002709321,0.008151208,0.00272254,-0.0037608326,-0.005364048,-0.009238389,-0.005000422,0.033762608,-0.015599494,0.064437196,0.027871571,0.01136436,0.008588774,-0.0067953723,0.0064190496,0.0007112698,0.010385905,-0.0036587177,0.002855642,-0.0025978715,-0.008274742,0.0005062995,-0.0006864216,0.0084309075,0.0091641,0.0014488791,0.011488215,0.0034851055,-0.005549047,-0.002151268,0.0036161826,-0.002757382,0.00086999737,0.0005339053,0.0061093946,-0.004385442,-0.00059380685,0.0025695765,0.0022249566,0.0023333274,0.0038941053,0.00015978665,-0.0014173291,-0.0041849962}},
      {{-0.037570942,0.013383323,0.0045963177,-0.0058807894,0.011598038,0.0049743117,-0.0030067589,-0.0011491415,-0.004809364,-0.004860474,0.013049267,-0.011561014,-0.0030634075,0.035169043,-0.0032427637,0.06762859,0.022461595,-0.00697912,0.0244031,-0.014304625,-0.0019046705,0.008214365,-0.016680941,-0.0069526066,-0.008647091,-0.003954345,-0.015911646,-0.0020690868,0.020332277,0.007956826,0.013469177,0.011843009,0.008266855,0.0113978945,0.007714469,-0.0034913386,0.001548407,0.006944329,-0.010303619,-0.00039871605,0.014876975,0.015470663,0.009789319,-0.0102901915,-0.0003847781,0.00090529426,0.002290126,-0.00606246,-0.0009015803,0.0022779591}},
      {{-0.03161566,-0.004705175,-0.0045504402,-0.0040866006,0.00811849,0.0046446538,0.0048568025,-0.0050788857,0.010881674,-0.0066701258,0.0044619413,0.008163465,-0.0065537826,0.037861634,1.2779369e-05,0.063284166,0.021576151,-0.010847032,0.0090606185,-0.0007964957,0.00031145193,0.024748344,0.010662844,-0.008571236,-0.0008999932,0.008212017,-0.014658436,-0.0015463235,-0.0045468733,0.022360012,0.0034924943,0.009438749,-0.0014940227,-0.0010410994,-0.0010708089,-0.0075681824,0.005523085,0.00021903502,0.004197663,0.007158361,-0.0062757884,-0.0067703384,-0.0046764193,0.006153211,0.001978605,0.0026148302,0.0028215507,0.008743107,-0.009990229,0.007111437}},
      {{-0.031839743,-0.00097568217,0.00071007677,-0.001330256,0.00483861,0.006508383,0.016858898,0.0068822955,0.0072690314,-0.0049593057,-0.00072966685,-0.0051774248,0.010694592,0.04437658,-0.0046392214,0.04373887,0.0071182703,0.013861731,0.008926617,0.0011485976,0.00046748927,0.026016053,0.0052231867,0.009320614,-0.009385901,0.0042469897,-0.008575754,0.0061136405,-0.0023523022,0.028534494,0.012052052,-0.004527324,-0.021988358,-0.006266639,-0.008842711,-0.004492354,-0.00039621093,0.008930649,0.005164093,-0.011867457,-0.010729237,0.001909623,0.011470832,0.014359935,-0.005553353,0.0155118825,0.014423323,-0.00890989,-0.015603418,-0.0030475594}},
      {{-0.02820238,-0.010309791,-0.00061975844,-0.0058589163,0.0059806937,-0.0054875044,0.009580061,0.0056223827,-0.016174281,-0.0077175233,0.0139204925,-0.001860767,-0.008027358,0.024702542,0.0016566634,0.07409413,0.031783566,-0.0008326633,-0.010462477,-0.0029029946,0.003079542,-3.5693312e-05,0.0035914024,-0.0042977533,-0.0042570466,0.005996269,-0.00016709621,-0.0056460993,0.0043374,0.010093241,0.011687354,0.008335677,-0.000185169,-0.0062230397,-5.0954088e-05,0.008803074,0.004584743,0.0021666768,-0.0060300226,0.004413752,-0.00039608707,-0.0055556106,-0.00795233,0.0018274134,-0.0054055816,-0.003834491,-0.0013637108,-0.005336598,-0.0026965444,-0.0009447428}},
      {{-0.011589598,0.0060881516,-0.0012187118,0.014346555,0.013116244,-0.012811213,-0.004096069,0.007264228,0.032522786,-0.00022547069,0.013536067,0.008744724,0.001784897,0.010653909,-0.015837682,0.06922726,0.026234208,-0.009202887,-0.020246249,-0.0032638656,-0.011103758,0.020810379,0.008999313,0.02131223,0.025187403,-0.0052262624,-0.005700551,-0.039001256,-0.0016442146,0.023836823,0.011082413,0.0031331177,0.014335342,0.013671156,0.0035179455,-0.010214286,-0.0071808314,6.55556e-05,-0.008872733,-0.0035192615,-0.020416697,-0.01032745,0.005237553,-0.0045536845,-0.0031815276,0.014541799,0.00133655,-0.0010242808,-0.014922144,0.010162785}},
      {{-0.0152212465,-0.001617891,-0.0047250707,0.00036682992,0.012131924,-0.008604652,0.0061288755,0.005367684,-0.00041263716,-0.010346108,-0.0070430264,0.0033130792,-0.0048740534,0.026014311,-0.0001361152,0.06549408,0.02967826,-0.0010251278,0.0010973252,0.008053929,-0.004878517,0.038033918,0.008879114,-0.0008618221,-0.0016370608,0.0018177251,-0.001205833,-0.011123259,-0.0039729658,0.03113069,0.0044341036,-0.003208796,0.0047834935,-0.0011921511,0.011521225,-0.011223858,0.00023766787,0.002614813,-0.004125591,-0.005411717,-0.011021495,-0.0050357813,-0.006667789,0.013040961,-0.013036284,0.0022812404,-0.0053636106,-0.0062563284,-0.0093984585,0.001735324}},
      {{-0.035728633,-0.0023724916,-0.0018609458,0.0023354485,0.0327162,-0.00824109,0.0041456516,-0.0017949756,0.0028520753,-0.00196461,0.0057755844,-0.033468954,0.013584956,0.011438665,-0.029683504,0.050126184,0.04282911,-0.02122247,0.015908608,0.0039251833,-0.017837731,0.049106974,-0.008959611,-0.006540315,-0.000953032,0.0016898639,-0.0063892,-0.0053110374,0.0094287135,0.010149454,-0.0051119104,-0.008222959,-0.0120786335,-0.0032536192,0.00097238313,-0.010789888,-0.017037347,0.0015517102,-0.002006254,-0.011360912,-0.0028876083,-0.0012570873,-0.012383984,-0.011978423,-0.008238603,0.008915786,0.0075762467,0.008638339,0.012862123,0.00534623}},
      {{-0.0314649,0.0033268053,-0.0014037644,0.0046544983,0.0024240424,-0.003540923,-0.005073555,-0.006125558,0.0013039212,0.0005789533,-0.005407764,-0.0053069326,0.0063861543,0.03394814,0.0006425839,0.06250724,0.025157766,-0.0013961712,-0.005921179,-0.0040222425,0.0048148306,-0.011625302,0.010656553,-0.0028678349,-0.002321369,0.002156748,-0.0027066453,-0.002038676,-0.0048633227,0.015131281,0.004772494,-0.0049003856,0.005954714,-0.0014756309,-0.0029346494,-0.00070099323,0.0016947631,0.0072783073,0.0037912652,0.0014832709,-0.0031606564,-0.003953733,-0.0029345495,0.005731946,0.0063928314,0.007817473,0.0018180993,-0.0017700027,-0.005501457,0.0043455428}},
      {{-0.015034775,-0.0010952407,0.001991822,6.0668764e-05,0.010486666,-0.0058557014,-0.008035051,-0.00025235987,0.020407157,-0.005762585,-0.0047525587,0.005003066,-2.966085e-05,0.03385981,0.00039326708,0.047256302,0.023824355,-0.0041769743,0.016163725,0.0020737192,-0.02706884,0.0058828783,-0.0065711616,0.0026288126,-0.013174183,0.0051817624,-0.0149004515,-0.0029579303,0.008395947,0.021140242,0.013984289,-0.0020575116,-0.009621678,-0.0018543222,0.014450886,0.0034630308,-0.0046559465,0.011188695,0.0044113747,-0.010442815,0.010055234,0.011920027,0.004641174,0.0047850283,0.0004980043,0.016794557,0.00994454,0.0024118738,-0.0061722235,0.0031117275}},
      {{-0.025003279,-0.006187882,0.0017394884,0.001632953,0.011167164,0.004705371,-0.00508829,0.0032865843,0.014227499,0.0046286494,-0.01659746,-0.0063794656,0.0030037842,0.033142827,-0.007467151,0.062700994,0.029091217,-0.00032423303,0.0075850203,-0.015106024,-0.008835623,0.022114772,0.0032533377,-0.0035203288,0.0020284639,-0.00038013622,-0.012700849,0.008301759,-0.0022837182,0.006211435,0.00705859,0.0034314217,0.004277765,0.018301612,0.007609108,0.00019166211,-0.0047645746,-0.00093207957,-0.0059766453,-0.0034693952,-0.0037687237,-0.0085700415,0.011738194,-0.0010938111,0.00264646,0.012193967,-0.005210866,-0.003986495,-0.0022559732,0.0024328728}},
      {{-0.027453221,0.021602772,-0.0016664686,0.0056358436,0.0115035055,0.018479226,0.0066164937,-0.0023621616,0.0143110035,-0.014233322,-0.0034014434,0.016530167,-0.01064589,0.039511662,0.0018772876,0.07711002,0.01761101,0.017908467,-0.004419473,-0.0061665503,-0.0033066014,0.02533597,0.006260847,-0.007194394,0.0150717925,0.016769962,-0.013079693,-0.009253584,-0.0059715305,0.016059032,0.008662476,0.0021349203,-0.0036822765,0.0030999533,0.0025377849,-0.00028974374,0.0017734927,-0.021948703,-0.018905241,-0.00075287255,-0.022268021,-0.020785647,-0.010100614,-0.0010841419,0.0082266545,0.0114114685,0.02648779,-0.004370917,-0.0020554333,0.02177369}},
      {{-0.035275463,-0.0024722074,-0.0035987902,0.0043640547,0.0050294753,0.008313558,-0.00013956781,0.0011525387,-0.01900099,0.0058316654,0.03546717,-0.00043284195,-0.00019895496,0.02920018,-0.00619042,0.097971186,0.03539571,0.011570385,-0.0028650474,-0.0039501786,0.0093244035,-0.029029157,0.012818616,-0.0069410764,0.002663858,0.00082186656,0.0073105753,0.01376332,0.00893209,-0.005462253,0.012168739,-0.0010039647,-0.0038719238,-0.009168903,-0.0005573524,0.0016258223,-0.0012531622,-0.0049691326,0.0044489945,-0.0033214814,-0.0035668563,-0.0013113867,-0.008127541,0.00092191686,-0.00022786335,0.006813874,0.004084267,0.00067628885,-0.011184522,0.00833177}},
      {{-0.02485601,0.016436148,-0.002152061,-0.00752836,-0.0016776216,0.033540737,0.028195843,0.004270213,-0.0007333496,-0.002384474,-0.0028236099,0.009103223,-0.0029555364,0.07615557,0.0058762254,0.049270447,-0.04415306,0.008620351,-0.009828902,-0.0039044167,-0.010077883,0.03351302,0.0011960396,-0.009338419,-0.006794971,0.017495183,0.017226694,-0.0092128655,0.025926232,0.02715082,0.0072019733,0.008036326,0.0062015695,-0.0032247992,-0.0014288564,-0.0093961535,0.0068505313,0.0246113,0.0072302353,0.0067996224,-0.02116533,-0.014298739,0.0053137625,-0.01126457,-0.0007370371,0.02648942,-0.0042432244,-0.012935912,-0.006135171,-0.0039358786}},
      {{-0.025884394,-0.007012337,0.00012928026,0.0052866195,0.0041249506,0.009082185,0.00091511384,0.0012823455,-0.0065146433,3.8171747e-05,-0.021542262,-0.004649423,0.0049448577,0.027317116,-0.0026379689,0.066180766,0.034908153,0.002818193,0.016420899,-0.0043943687,-0.0022323085,-0.00019601273,0.0043517174,0.0011777545,0.0011132788,0.0103505505,0.0039093285,0.016166097,0.02063197,0.013512069,0.01103371,0.0097089205,-0.0021433844,-0.0014088101,0.009331045,0.0024443564,4.5312165e-05,0.0036251731,0.007932528,-0.008982868,0.009079799,0.00065633055,0.0005515283,0.008365051,0.0013957047,0.021330798,0.005103944,7.633767e-05,-0.018653736,-0.0028261624}},
      {{-0.010669201,0.013627254,-0.005232712,0.009577008,0.011042901,0.0007617104,0.005822117,0.007461378,-0.011855509,0.004965498,-0.025245968,-0.011108244,-0.0003931106,0.0178722,0.009235012,0.060920462,0.049172904,0.0074456395,0.009831626,-0.0031226145,-0.00076773984,-6.981142e-05,0.013173325,-0.02009086,-0.004911625,-0.0018882406,0.002774411,-0.008878946,-0.0004372414,0.016059436,0.0052782623,-0.010694967,0.003481441,0.0020336818,-0.01065228,0.010041663,0.00959636,0.00467805,0.010161991,-0.029863423,0.02702385,-1.6503242e-05,-0.0055065765,0.011081739,0.008360394,0.0032722095,0.0067425277,0.00504609,-0.020644084,0.0058375834}},
      {{-0.02939428,0.0012752467,0.00040333034,-0.0034968168,-0.0065089823,0.014663017,0.0026002275,0.00053546706,-0.0024019834,0.0028396375,-0.0135428775,-0.0063617164,0.001847476,0.037536748,-0.0014577676,0.063863024,0.02620473,-0.0023226044,0.017972676,0.0023094937,-0.0024137998,0.004653621,0.0095275175,-0.0019781988,0.006486647,-0.0073304726,0.0052692434,0.0008292983,0.002204199,0.028999975,0.0036609478,-0.0010369105,0.0056390543,0.0043986873,0.0039892104,0.0010744608,-0.0017324176,0.0025056072,-0.0031102663,0.01091641,-0.0011324518,0.001768334,-0.0011257466,-0.0028785607,0.0032888746,0.012051863,0.005414012,-0.013451091,0.0054396363,0.0045884154}},
      {{-0.023248635,-0.0038759566,-0.0055330754,-0.004906694,0.008354952,0.010369089,0.0024634067,0.008129352,0.0114654135,-0.0019343555,-0.015315029,0.009030798,-0.0031573912,0.031471997,-0.0072025717,0.064494535,0.034506865,-0.00956194,-0.0013437693,-0.0017185675,-0.009011053,-0.0059680026,0.010289256,0.009139584,0.0010902319,-0.0003456547,0.010822776,-0.016471324,0.0019949053,0.028589528,0.00586571,-0.008191613,0.0125084715,0.012264223,0.0014671576,-0.012349451,0.010848161,0.0015130339,0.0051649245,0.0064926962,0.00045183493,0.008598492,0.005183917,0.008060017,8.5615284e-05,0.009402143,-0.0014731488,0.014973152,-0.009112274,-0.00067579804}},
      {{-0.022591472,0.0010607048,0.009548641,-0.0027732798,-0.0063689407,0.010613888,-0.0052301786,0.0045564217,0.0044142916,-0.0016118863,-0.0012869677,-0.00020320967,-0.00332379,0.033993304,-0.004770125,0.07798963,0.032056842,-0.00017794415,0.010009804,0.002205582,-0.010635131,-0.0037160772,0.014228382,0.0028188478,-0.003939124,0.0055861194,-0.002215613,-0.0026032343,0.0047358423,0.022846464,0.0057289544,0.0030302901,-0.0011054861,0.0041277525,0.0040071895,-0.010996843,0.0032936,-0.0018545587,-0.0013877196,4.2772568e-05,0.014040405,-0.004923114,0.008948337,-0.0016437138,0.00118244,-0.0010999731,0.0048974277,0.0027316967,0.0023275455,-0.0030422518}},
      {{-0.016225614,0.0025349958,0.0060604303,-0.00906811,0.0067187543,0.010074746,0.012337982,0.01767924,0.0067617903,0.0037455591,-0.011343621,-0.022565033,0.0076059797,0.039886795,-0.024978105,0.056252483,0.020963784,0.016427042,0.018011719,-0.010033919,-0.009901796,0.014517449,3.0304644e-05,0.003144702,0.013594228,-0.011788044,0.006573277,0.011501969,0.016078128,0.027502904,0.02410231,0.010703598,-0.0039583077,0.008529618,-0.0001666487,-0.008884904,-0.017380238,-0.0025541172,-0.0073432545,-0.0040598237,0.010920097,-0.015333476,0.01283657,0.0015525951,-0.014292155,0.0028871112,0.007203134,-0.009641548,0.00842605,0.010408319}},
      {{-0.021207575,-0.0019495783,-0.0077074766,-0.0074350554,0.006080506,0.0086282985,0.0077800746,-0.005694486,-0.012694579,-0.010206026,0.028959824,0.011745787,0.0012954378,0.031077035,-0.0055860723,0.0821414,0.03556728,0.0005792419,-0.011040179,-0.0025522613,-0.019638624,-0.0066418326,0.0063965414,0.0018915429,-0.0066459565,0.0055575697,-0.013325145,-0.0039616507,0.0044930433,0.022009687,0.010653975,-0.006416398,-0.008310315,-0.0028505013,0.00955455,0.0072407867,0.004039593,0.001268743,0.00056655233,0.002916719,-0.010935335,-0.010481908,-0.014568896,0.001138955,-0.0024832734,0.0027051538,0.003298768,0.0061907824,-0.00414093,0.0015292424}},
      {{-0.0070164367,0.021523152,-0.009711931,-0.017334301,0.018931344,0.005039944,0.00474282,0.0037145845,0.018417032,-0.009464732,-0.01605243,-0.0045943307,-0.0047422457,0.022164999,-0.009051468,0.06475874,0.02193516,0.0010419277,0.0053325836,-0.00566101,-0.013021303,0.0070967944,0.015583367,-0.010082754,0.005546241,-0.0042644404,-0.016793186,0.02954115,0.0061558513,0.020557446,0.02330555,0.011130443,0.0060019204,0.007144744,0.005778138,-0.0017268648,0.0017822271,0.0137518365,-0.007999865,0.001782369,-0.0017063711,-0.010965682,-0.017829146,0.011708575,0.0017219238,0.026662812,-0.0097495895,0.0056984196,-0.0027130675,-0.0023817255}},
      {{-0.015546357,-0.0018586307,0.008216671,0.004851001,0.005694255,0.003071985,0.008021035,-0.008932738,0.00057210325,-0.007426789,-0.019111427,0.004169862,-0.0036806467,0.03500795,0.00030927447,0.06555673,0.03743516,0.0040886453,0.004750997,0.0054882467,-0.0009194715,0.01224001,0.006423945,-0.008155299,0.0006091976,-0.0036445304,-0.0106736515,-0.002235591,0.0015471702,0.034557126,-1.6758473e-05,0.01202083,-0.010765102,0.00825054,0.0017509293,-0.0010890528,-0.0049619367,0.0073856926,0.0017824341,0.011682813,-0.0050721015,-0.0016875229,-0.0025577873,0.00049927237,-0.0070469663,0.0058444086,-0.0056767096,0.0042178947,-0.0025644375,-0.001969803}},
      {{-0.030823424,-0.007212691,-0.011980237,0.009290754,0.006016938,0.010313619,0.007716117,0.01085899,0.0019304473,0.007974374,-0.0030897579,0.007084145,-0.0077448795,0.027869606,0.006351975,0.081548624,0.025529785,0.004579647,-0.0018741376,-0.0057993056,0.0019501204,0.0037587618,0.006910743,-0.00095693825,-0.004525065,-0.0023034026,0.0005394241,0.010687349,-0.0049589765,0.028263297,0.013921848,-0.0042065703,-0.0072587417,-0.0036072086,-0.0022249974,-0.0051920624,0.009844456,0.004058957,-0.001536552,-0.0044392296,0.012398826,0.005307562,-0.00022420184,0.0035821695,-0.011274059,-0.013842562,0.012086264,0.0020619666,-0.0071593462,-0.0077220155}},
      {{-0.009844011,0.0077102506,0.007936777,-0.00062737084,0.01451019,-0.0053469674,0.0013730447,-0.0043991017,0.005654257,-0.0076759607,0.0017993345,0.0022306014,-0.0016918693,0.025664063,-0.00441652,0.06500757,0.043997016,0.010383868,-0.011458668,-0.007264897,-0.013909334,-0.0033918964,-0.0025126562,-0.0010804719,-0.006588855,0.0003772551,-0.019101214,-0.017592272,-0.008455886,0.033506904,0.008663708,-0.006023532,-0.010912456,0.00082760013,0.008801235,-0.0007474739,0.00491522,0.0024403438,0.00584333,0.00823582,-6.0347673e-05,-0.0024148163,0.0051850714,0.0025501319,0.0074785063,-0.009721068,0.0046625296,0.006839783,-0.0068949424,0.0050673797}},
      {{-0.013068994,-0.0021766415,0.008142109,-0.018569278,0.008988545,-0.00024296556,-0.0001855039,-0.015505879,0.006380235,-0.008294337,-0.029100258,0.007194319,0.009587839,0.028694613,0.001096245,0.045048397,0.0549034,0.010467201,0.007170594,0.0115867965,-0.0116329305,-0.011348122,-0.0064755897,0.0034935817,-0.0015771984,0.004081609,-0.006613112,0.0021005883,-0.013948877,0.040474035,0.0004198264,-0.00736707,-0.008376722,-0.0028837817,0.008834552,0.0010763516,0.006789978,0.0076443483,-0.012561244,0.0050250352,0.021025557,-0.006170709,0.016345033,0.014518509,-0.009794323,-0.02488152,-0.0061525004,-0.005207071,0.008113085,0.0064312783}},
      {{0.006368826,-0.0035598907,-0.004477106,-0.00060914096,0.006845748,-0.019921659,-0.01001725,-0.0022314407,0.011529128,0.0030634936,0.027810125,0.008530866,-0.00085704745,0.05243074,-0.00466758,0.02715226,-0.0051360847,0.004248875,-0.009413151,0.0013795188,-0.016348679,0.019593533,-0.02179665,0.01002649,-0.001733496,0.004028487,-0.02530535,-0.06639938,-0.0018287518,0.05563857,0.010025318,0.011451396,0.0026521822,0.00033018738,-0.0013409624,-0.009555114,-0.004860865,0.0037419775,-0.009025274,-0.014431905,0.006106426,-0.00029925822,0.004405938,-0.0004915219,-0.010289009,-0.025318777,0.0049001845,-0.010354012,0.0036761535,-0.0030671963}},
      {{-0.009586204,0.0069887005,-0.011666427,0.002084341,0.008258978,-0.06711116,-0.021604335,-0.0033431947,0.04469282,0.0011839047,0.045206618,0.0065507996,-0.005220417,-0.0016106911,0.0023757787,0.0060595525,0.004655098,0.01635445,0.018261602,0.013428491,0.0070573613,-0.02094914,-0.0032563189,-0.012430154,0.008895166,-0.010578912,-0.034189545,-0.016919276,-0.03700563,0.014905374,-0.012494391,0.01852627,-0.017233325,-0.01791003,-0.0030735168,-0.020970557,0.021674024,0.0066899275,-0.011632787,-0.014015434,-0.01143066,-0.008056196,0.004283516,0.0014775605,0.019304156,-0.03566188,-0.0034924012,0.00047456866,-0.0016231977,-0.007586309}}
    }};
    
    embs3 = {{
      {{-0.009713879,-0.009591099,-0.0244256,0.016142529,-0.032236263,-0.023056928,0.03346255,0.011186909,-0.005886391,0.017378423,-0.037154704,0.03797939,0.038765993,0.014369778,0.029543217,0.0033607334,-0.022021752,-0.015872592,-0.02899845,0.001305081,-0.0130373165,-0.025591917,-0.008991649,-0.017339403,-0.00510199,-0.03372052,0.019947853,0.016734105,-0.01611575,0.0061422065,-0.031212807,-0.017220713,-0.0061084256,0.0031673424,0.024622317,-0.030607846,-0.027305903,-0.02054016,-0.033278536,-0.012353122,0.0014636219,0.037071396,0.037652615,-0.012823114,0.02687857,-0.007474143,0.00459563,-0.023026355,-0.030291222,-0.032989934}},
      {{-0.00010892591,-0.0021445146,0.0024804075,0.0009218621,-0.004502195,0.0021964214,-0.00080672425,-0.00042898164,0.0074896133,0.0027337798,0.00035709847,0.0005053319,0.010864134,0.0022776036,0.0016384171,-0.0056195254,-0.0009739903,0.00062674173,0.005956357,-0.00073009677,0.0035986847,-0.018435646,0.0025259366,0.0021791176,-0.013416051,0.00027990568,-0.0022852584,0.002426938,0.010114152,-0.0015910281,0.0033167708,-0.0008290878,-0.002668769,-0.004796764,-0.002904916,0.0014768153,0.0009575624,-0.023682134,-5.2103023e-05,-0.00048128545,0.0014444954,-0.01475733,0.027488738,-0.008948062,-0.0015295823,-0.012426396,-0.002016462,0.0015022693,-0.00046737885,-0.0052460255}},
      {{-0.0022601828,0.0021709935,0.0015041796,0.008042143,-0.005114894,-0.004442764,0.0060493904,-0.014571244,0.004587977,-0.000417404,-0.00432201,0.0023600364,0.009366294,0.002284628,-0.0067566144,-0.00887286,-0.0043059182,-0.0011993088,0.0070538353,0.0043853503,-0.0013327313,-0.0197683,-0.0011622629,-0.0011171984,0.0067487494,0.0030120427,0.003277815,-0.0043607606,0.0059881033,0.0015496769,-0.0018438196,0.0052954233,-0.003760216,0.009006133,-0.0051901997,-0.0023311134,0.007772069,-0.025745397,-0.002921881,-0.004028823,-0.0011175903,-0.005094794,0.014827198,-0.0068613477,-0.0031783206,-0.01734827,-0.007577088,-0.008040241,-0.00082407886,-0.0035179856}},
      {{0.00040608755,0.00055101735,-0.0015110511,-0.0027165879,0.004284897,0.0036264653,-0.0011753156,-0.0013270079,0.0044914093,0.0016547818,-0.0010165366,-0.0023005335,0.010123707,0.0014703176,0.0015807563,0.008505827,0.00080430415,-0.0031775606,0.0039609754,-0.0015534835,-0.0051844814,-0.02438244,0.00031864972,0.0030801024,-0.007823265,0.0012307668,-0.0017195926,0.00078196794,0.017917836,-0.0025907832,0.005880578,0.008748672,-0.0056738374,-0.0011493792,-0.0045422507,-0.00015738701,0.0022143659,-0.02738707,0.00467519,0.0023196086,0.0023469448,-0.01524089,0.04334099,-0.0041497946,0.0024970716,-0.0066765454,0.00023088459,0.0061658747,0.00023546322,-0.0038910592}},
      {{-0.0010429675,0.007747399,-0.011436152,-0.0014805255,-0.0019090193,0.001985029,0.0014764412,0.0005960165,0.007962233,0.002666638,-0.0018873808,-0.0050340723,0.015117378,0.0025742655,0.0040890146,-0.006171336,2.6452048e-05,-0.00016927328,-0.006006533,-0.0038006157,-0.0022014165,-0.020467982,0.0048604165,-0.0022239517,-0.0012411895,-8.23708e-06,0.004637112,-0.0019046114,0.017287835,-0.00018018107,0.012133061,0.0042827344,-0.010868552,0.003639898,-0.011036669,0.003436563,0.0035408847,-0.025369821,0.00020671036,0.00075759226,0.00024617737,-0.008349593,0.04077227,-0.002763782,0.0052928957,-0.011029415,-0.0011352873,0.0057532587,0.0056610783,-0.003616641}},
      {{-0.0006541793,0.0029709395,-0.0009617784,-0.0016419716,-0.0005872022,0.0038721808,0.00018385187,0.001911962,0.015949765,-0.0019407984,0.0027307435,-0.0020695557,0.01718594,0.0010162737,-0.00042404092,0.0021514255,7.226455e-05,-0.0053195744,-0.00066507584,0.0002952565,-0.0016086568,-0.023466311,-0.000114889015,-0.0027683342,-0.000744466,0.0017480821,-0.004179735,0.0012977001,0.010252126,-0.0023240282,0.020715326,0.0024509388,-0.007211904,0.0067869388,-0.0016452381,0.0010551568,0.0009248416,-0.027124062,0.0057042413,-0.001308127,0.002894117,-0.009477773,0.017693268,-0.0017498353,0.004475215,-0.0043179104,0.0003854554,0.003774213,0.0014706431,-0.0026707884}},
      {{0.0022991737,0.00070344773,0.005901628,-0.0064675594,0.0016147709,1.0513977e-05,-0.0026247278,-0.001661644,0.010838618,-0.00035773244,0.0027173203,-0.0012573992,0.008044227,-0.004578729,0.0024737527,-0.0072759,0.0008203056,-0.0060362895,0.001323766,-0.0050311126,-0.006379067,-0.034918256,-0.003179809,0.0028360602,-0.0072466573,0.004004246,-0.00434744,0.0015580056,0.0040573683,0.0014754923,0.0125585925,0.004213183,-0.0022818665,0.008164231,0.0019547613,-0.0013721844,-0.0043180203,-0.026108421,0.0009029239,0.003213504,-0.0049248044,-0.008772044,0.012634251,-0.0031964637,0.0040936912,-0.004337994,0.00023381901,-0.0052203857,0.0002608185,-0.0012168287}},
      {{-0.0017301835,-0.0011567118,-0.0023416153,0.005608286,0.0009122169,-0.0047805477,0.0009511234,-0.011926625,0.0067330766,-0.0030387938,-0.0009503186,0.0021064137,0.003291751,-0.0010293417,-0.0011539572,-0.0066885753,-0.0004951418,0.0019401103,-0.005809277,0.002689879,-0.0019968029,-0.017071648,0.0003163519,0.000880971,-0.0055740094,0.000428974,0.0023014552,-0.0005361541,0.00840149,0.0030564524,0.006973325,0.0033961947,0.0042307544,0.013198676,-0.00444009,0.0013414233,-0.0018945655,-0.025097026,-0.0042807395,0.0030415903,-0.0027883146,-0.005042576,0.009001063,0.0020058425,-0.001052278,-0.010582761,-0.00044322532,0.0016868592,0.0022552984,0.00743981}},
      {{-0.0073946356,0.0049497737,0.0011550399,-0.0020275312,-0.00092977565,-0.0013534024,-0.0027045894,0.0018954248,0.011422454,-0.0014664424,0.008580525,0.0027047899,0.0014237282,0.0037712192,0.005169354,0.004450544,0.0028950637,0.0017926535,-0.004556947,-0.0012898042,0.0012139794,-0.0075853844,0.008060973,-0.0057663224,-0.010452276,-0.0022438404,0.0073296414,-0.002382145,0.009841503,0.0026470043,0.026389198,-0.0020751618,0.004198209,0.0098631205,-0.0054866653,-0.00088871917,-0.0039764727,-0.020541403,-0.0025126967,-0.0002506791,-0.00502758,-0.006001444,0.009064723,0.0017173245,0.0018875836,-0.0028468315,0.0070304866,-0.002606936,0.0015416326,-0.0023768956}},
      {{0.00056539034,0.0032395548,0.00020600366,-0.003016728,-0.00064349134,-0.0018734047,0.002024144,0.0025024787,0.013750367,-0.0014111217,-0.00075135793,0.0013033308,-0.0049047847,0.0017126752,-0.0024231828,0.002876564,0.00023989438,-0.00097121514,-0.0008825273,-0.0013505864,0.0026984508,-0.005295106,0.00078288326,0.00013881165,-0.004438735,-0.0005545363,0.0036852644,-0.0022640408,0.0033517168,0.0011860897,0.007038045,0.0039902315,0.0024641315,0.0012826681,-0.001957535,-6.7928384e-05,-0.0017307113,-0.019557621,-0.002883272,-0.0030068469,-0.0013799089,-0.0036238658,-0.0010713813,-0.00108357,-0.00031154047,0.006784617,-0.0041257665,3.0836978e-05,-0.0008159135,-0.004000435}},
      {{-0.001587271,-0.0015688725,0.004142887,-0.003978303,0.004759167,-0.0013367692,-0.008565097,0.006722028,0.009124826,0.004396478,-0.0016295508,-0.00020178955,-0.0052832104,-0.0009152238,-0.005660225,-0.002911724,-0.002588409,-0.001979162,0.0030589036,-0.000185792,0.002230435,-0.021601232,0.005309142,0.0022332226,-0.011643508,0.0011382027,0.0011884788,-0.0008205477,0.004568354,-0.002179894,-0.0051174588,0.0055260705,0.003711615,-0.0014265147,-0.0027322709,-0.0028245917,-0.0013726706,-0.023648689,0.00055519654,-0.004975556,-0.003577882,0.0088537065,0.0147355655,-0.0078020697,0.00206309,0.006860265,-0.0027652022,0.0027512263,0.0011721386,-0.0054307682}},
      {{-0.0041258777,-0.00046632971,-0.00024459255,0.004211405,-0.0010720816,-0.0049559665,-0.001068608,-0.0072908187,-0.002118398,0.0026357817,0.0016624718,-0.0033116662,-0.010399891,0.0005030027,-0.00058668165,-0.0033115114,0.0005379145,0.0043284697,0.0036289918,0.004376338,0.005504939,-0.015304316,0.00010059721,-0.0038285344,-0.0021022232,-0.0021340617,0.0068505607,-0.00063345145,0.0047573657,0.0009829364,-0.0048282146,0.007082064,0.011266472,0.007668652,-0.00932907,0.0006133821,0.00093440776,-0.027482321,-0.0033672675,-0.0035269395,0.0027336092,-0.0017270268,0.002034562,0.004469549,-0.004610232,0.0041613854,-0.010402233,-0.0050119334,0.003496838,0.0029088864}},
      {{-0.0021067555,0.00046683088,-0.0031267346,0.0039925086,-0.005033217,0.0024777402,-0.00046429478,-0.0056964825,0.00057760964,0.0044853347,0.0070623267,0.0025826215,-0.00084563816,0.0056528524,0.00425794,0.010183896,-0.0055702715,0.007119774,0.00035438256,0.0066210963,0.0006485941,-0.027154246,0.00038293356,4.3271702e-06,-0.0025276914,-0.0006032808,0.010262069,-0.0019235244,0.010561966,0.002576252,0.0071853152,0.0075714514,0.0029562744,0.011884752,0.0002599199,-0.001867389,-0.0017846769,-0.025815014,0.0018280583,-0.0014576692,0.0019434111,-0.00566963,0.014665371,0.0044110096,-0.0055777268,-0.0019272033,0.00325575,0.0044552046,0.0029860176,0.0026281213}},
      {{-0.0006712508,-0.0020324106,-0.0024136922,0.004191705,0.0015625459,-0.0054195295,-0.0008833493,-0.0085496735,0.0005167241,-0.0013807245,-2.0296473e-05,-0.0045756283,0.00254551,0.0003957704,0.0009031304,0.0051591103,-0.003024696,0.0040363776,0.00065481314,-0.0004262643,-0.000105059735,-0.01981329,-0.00069453346,0.0010139557,-0.003174342,-0.0010352391,0.0023607973,-0.0035322208,0.0041280612,0.0043214126,0.010693209,0.0033983442,-0.004660009,0.0066844737,-0.0044718753,0.0022984792,-0.0008981452,-0.025883332,-0.001227188,0.0037401267,1.5864038e-05,0.005115805,-0.0017407597,0.002393349,-0.00039583223,0.0031586215,-0.00072087237,0.0027093673,0.00051349186,0.0056909835}},
      {{-0.00065131806,-0.0016168122,-0.007267406,-0.008710322,0.005467132,-0.0035265675,-0.002785863,-0.006939985,-0.0024976633,-0.0013832675,-0.0037477075,-0.004158664,-0.0015137303,0.004428005,0.003265692,0.00045465634,-0.0056933374,0.0004348281,0.00065905077,-0.0020247092,-0.0041237543,-0.028582484,-0.002006463,-0.0008828227,-0.0056269784,0.001705719,-0.0052218363,0.0012398108,0.0009968713,0.0025946386,0.006202502,-0.004030452,0.0016961315,7.185673e-05,-0.013807641,-0.0011338653,0.0022667947,-0.025149442,-0.0003590809,0.008135105,0.0018186708,0.0033968496,0.0023201578,-0.008017035,7.172314e-05,0.0005745722,-0.0010309439,0.0046821707,-0.0017738006,0.0021475551}},
      {{-0.00095013645,-0.0022541336,-0.0015915439,0.0104645835,-0.00025439129,-0.0016023448,-0.00047360017,-0.007288545,-0.008229941,-0.004604942,0.0012029753,-0.002182092,0.002733508,-0.0008683313,0.00031478622,-0.013905191,-0.0021011187,0.0019248938,0.0038564128,0.0024522892,-0.0020269144,-0.010166071,-0.0006213691,-0.0023415196,0.005853945,-0.00090278185,0.0012135792,-0.0017770621,0.0046804,0.0009175863,-0.01248007,0.0022824854,0.003595563,0.0040497743,-0.005344305,-0.0007183854,-0.00070822315,-0.028787438,0.00074480835,0.0040335353,0.002140534,-0.0049823946,-0.0041899853,0.002382409,0.0026476758,0.003538816,-0.0038744719,0.0026079312,-0.0006807703,0.005760668}},
      {{0.0023387682,-0.0018766179,-0.0023697705,0.010414645,-0.00043982075,-8.108445e-06,0.0015860688,-0.009083173,-0.012261573,-0.0054605785,-0.004217299,-0.0064464584,0.0013394728,-0.0032077313,-0.001196329,-0.017303798,0.004184987,0.001604708,-0.0064615635,0.004130722,0.002364515,-0.0030946794,0.0010775157,-0.0015222646,0.011085742,-0.005607892,0.0054671494,-0.000104003804,-0.00045257175,-0.0012961728,-0.019392777,0.0028685734,0.0047734664,-0.002818172,-0.0055511785,0.004924298,0.0019811422,-0.032731146,-0.0029435323,0.006994343,9.910187e-05,-0.009390307,-0.01642326,-0.003333072,0.00040506147,0.0051158373,-8.6631735e-05,0.0023424008,-0.00470907,0.011299433}},
      {{-0.0035476817,-0.0024306092,-0.0029413104,0.0057929857,0.0014904985,-0.001348828,-0.00069079106,-0.00011321095,0.007061401,-2.1226046e-05,-0.0014874712,-0.0038298147,-0.002845139,0.00028870002,0.0002684485,-0.00092484173,-0.0008423933,0.002448904,-0.003424878,-0.00086299994,0.0015561803,0.02940056,0.0023631651,-0.0008721862,0.0013453339,-0.0015624884,0.003696393,-0.0004957717,-0.0011412905,6.8757094e-05,-0.0054120305,0.0018517016,-0.0054792427,-0.002587514,-0.007401172,-0.00032968336,0.0043435413,-0.019528363,-0.0017377135,-0.0017621185,-0.0014103206,0.009670257,0.0002789154,0.012599564,-1.96227e-05,0.009897489,-0.0044201245,0.00038200465,-0.0009593149,-0.0021879158}},
      {{-0.0013705341,-0.0016897145,-0.0057397103,0.0042201946,-0.0045800926,-0.0050141816,-0.0021757782,-0.0017330836,0.005892848,0.0028532099,0.00160571,-0.004546376,-0.0048069367,-0.002624421,-0.0006263435,0.005811488,-0.00047787675,-0.0003281986,0.0018065954,0.0014672354,-0.0011329644,0.028440464,0.00071689795,-0.003613576,0.002765012,-0.0048114355,0.0034544263,-0.004124747,-0.0019066997,0.0027180007,0.01349971,0.0033052878,-0.005229716,-0.0043514273,-0.0040492513,-0.0018217638,0.0011215016,-0.021480817,-0.0085714385,3.285269e-05,-0.0023791522,0.0045636264,0.0019870787,0.013390949,-0.00010463429,0.01562463,-0.008302262,0.0017523592,0.0035264662,-0.0023937784}},
      {{-0.0031274974,0.0021083213,0.0011729775,0.0014004555,0.0010247164,-0.0016632442,-0.0022325919,-0.0014593124,-0.003256667,0.0017862028,-0.0014912884,-0.0015930125,0.0032485318,0.0011469919,-0.00094030023,-0.006367663,0.002299109,-0.0002804267,0.008925639,0.0020369196,-0.0012977998,0.030712344,-0.0038832282,-0.00025871664,0.003855197,0.00097431074,-0.0050491006,-0.0021917773,0.0038792482,0.0012074892,-0.0030921032,0.0063411687,-0.0015739178,-0.0018083078,-0.0043931147,0.0011597233,-0.0012388384,-0.020140972,-5.020176e-05,0.0011810802,0.00011934355,-0.0022775256,0.006155826,0.00939908,0.0006772682,0.011932109,-0.0043431525,0.00086522044,-0.0025768697,-0.0024563314}},
      {{0.0035482768,0.00072740397,6.152662e-05,-0.00620153,-0.00013792474,-0.0053027784,-0.0017688877,-0.006239746,0.0025389225,0.00091637473,0.0005354849,-0.0028849677,-0.008756292,0.00025655047,0.00027351748,-0.0014534043,0.0018401679,-0.0008258792,-0.002214101,-0.00023741412,-0.0022280067,0.029073093,0.0020519986,0.0023766465,0.006129827,-0.0007124578,0.0034417468,0.002622595,-0.0011117235,0.0027100996,0.00713101,0.0030662636,0.0029418066,-0.002609872,-0.003009027,0.0019068855,-0.0032047522,-0.019757872,0.0028006544,0.0066586197,-0.0012285862,-0.0015054446,-0.0008290482,0.004366499,-0.0015532107,0.010672065,-0.00090778834,-0.004245364,0.004673551,0.0033414827}},
      {{-9.896965e-05,7.102507e-05,0.0006359075,0.0039053785,0.0005128535,-0.0024766626,-0.0015261214,0.0022463656,0.0048857844,-0.0017166074,-0.0013675782,0.0014130524,-0.0041959924,-0.00022253903,0.0010794484,-0.007626428,0.00015000028,0.0016978725,0.0017434378,-0.002215915,-0.0009454306,0.020824412,0.00054762897,-0.0008709253,0.009668085,-0.0018685233,0.0019802272,0.00038036684,4.110454e-05,0.00072685676,-0.011822132,-0.004910624,-0.0036271405,0.0046210014,0.0005526563,0.00043422123,0.0016978746,-0.019832343,0.0017352318,-0.0008092866,0.0021897731,-0.0009142944,-0.004258189,0.007011204,-0.0012331837,0.0065730605,-0.0028400791,-0.0010684291,0.0024594972,-0.0032016714}},
      {{0.0013197538,0.0013233752,0.0019944846,-0.0038576059,-0.0011333543,0.0007002881,0.004024116,-0.0026645234,0.002108354,-0.0059049525,0.0038489257,-0.0071459715,0.00024330271,0.0060586184,0.00339673,0.00314035,-0.0024137099,-0.0017743394,0.0055659935,-0.0040282845,-0.0029025702,0.008879271,-0.00030531257,0.0041157063,0.0014183333,-0.0046573477,0.002692429,0.0027597432,0.00021756715,-0.0054165474,0.0097353915,-0.00029004048,0.013195969,0.0061467453,-0.0013328466,0.0075217485,-0.003679672,-0.01889803,0.00030809487,0.008357526,-0.00048265586,-0.0034051198,-0.0027821993,0.005856022,-0.002747641,0.0034101007,0.00095777784,-0.0006884498,-0.0007273228,-0.002075523}},
      {{-0.002449642,-0.0029328803,0.0052839983,0.005789175,-0.002203518,-0.003683198,-0.001036477,-0.0035263575,0.007540783,0.00012235214,-0.0034575649,0.0013800681,0.0019269747,-0.004052676,-0.0012507783,-0.0013899611,-0.0012897037,-0.0007425873,0.00883408,0.0008996864,0.0027711154,0.019130573,0.0025216655,0.0027536375,0.005584742,-0.00058144814,-0.00014669583,0.000948356,-0.00064200466,9.353251e-05,-0.009054942,-0.004518784,-0.0032023585,-0.00041080857,3.2474178e-05,-0.000542521,-0.0021707374,-0.016474139,-0.0034642357,0.00063363987,-0.0027348592,0.00076545996,0.00046993047,-0.0028088444,-0.0027603963,0.0047053206,-0.0020468282,-0.005655451,1.1707888e-05,0.004142499}},
      {{0.005999051,-0.0032203915,-0.0008427259,-0.005259844,0.0025772236,0.0045153773,0.0015082882,-0.0033770348,0.013133755,-0.00047644356,-0.005751584,-0.0006915412,-0.017915413,-0.003085827,-2.822559e-06,-0.011104118,0.0019036174,-0.00027597294,0.0056701037,-0.0054355245,-0.004353898,0.011622919,-0.0014838403,0.004416102,0.003258492,0.0011792291,-0.0048453626,-0.00042553036,-0.005203923,-0.0034236123,-0.0026497734,-0.010916413,0.0032107588,-0.0038304275,-0.0026739794,0.0047800457,-0.0012789955,-0.018342454,0.009274417,0.0055482825,0.0040457468,-0.008481003,-0.0015801915,-0.009362532,-0.0028165,0.004719784,0.002794959,0.0014917301,-0.0050207092,0.00079211907}},
      {{-0.0003994088,-0.0007923489,0.005639046,0.0035582613,-0.0028635052,0.0019295058,0.0022735829,0.0037482176,0.007679614,0.0005837521,0.001210928,0.00503643,-0.0072684907,0.00040032217,0.0014055427,-0.0028402288,0.0008272093,-0.0015983429,0.0040003518,-0.0039382246,0.0008940128,0.005374004,0.0006317659,0.0016092695,0.0027649512,0.0006788832,-0.0007251184,-0.00053938624,-0.0004449322,-0.00014704373,-0.00832595,-0.010251762,-0.004811204,0.0019055208,0.0053215697,-0.0006995374,-0.0024856867,-0.021906057,0.0057734754,-0.00085593294,-0.0014876573,0.0021225852,0.0052343053,0.0015476152,0.0008339946,0.009039847,0.0034515245,-0.0005166204,-0.00055265555,-0.0040600495}},
      {{0.0022824295,0.002792013,-0.0014055917,-0.0058181365,0.0019935062,0.0038852554,-0.0018364997,0.006074439,0.000294497,0.0024936553,0.0031112656,-0.0017045938,-0.0054185423,-0.0013579229,-0.0016990283,-0.0060801366,0.0018934287,0.0005089618,0.004812722,-0.003046167,-0.0029238008,0.00916084,-0.0011083166,-0.0015175419,0.007154426,0.004803453,0.0020316537,-0.0011667175,0.0010235739,-0.0064577814,0.0063840863,-0.01199265,-0.010718165,0.00065670855,0.0005755145,0.0021398808,-0.006511039,-0.025688108,0.00182049,0.006491437,-0.0017053153,-0.0025150892,0.013175912,0.013399978,-0.00023180906,0.006346005,0.0062749214,0.0011735973,-0.001440656,-0.0036904125}},
      {{0.0012592302,-7.210254e-05,-0.0019394385,-0.004995752,-0.00079428585,0.004713143,-0.0009837497,0.00044486354,0.009584142,-0.0019770127,0.00114064,-0.00039510994,-0.0034351707,0.0015563581,0.00034646096,-0.0029616663,-0.0009495969,-0.0018623505,-0.0010510208,-6.834084e-05,-0.0039863195,0.007887624,-0.0008454769,0.0020135788,0.0010218197,-0.00051079225,-0.00486742,0.0010872346,0.00048366707,-0.002928594,0.005983587,-0.018467775,-0.012204224,0.0030624082,0.0036570276,-0.0016550192,-0.002208976,-0.019381627,0.001028787,0.0038951917,0.0025005843,0.012050692,0.011163772,0.0033982124,0.0032123756,0.00013370615,0.0066397,0.0047551533,0.0011517666,0.003345221}},
      {{0.0016450743,-0.00436859,0.0022922745,-0.001374876,-0.00024453137,-0.00517738,0.0028069695,-0.009658038,0.010794721,0.0018387703,-0.0012828173,-0.002366297,-0.014637071,-0.0029622486,0.004080311,-0.0053953277,0.0010267426,-0.0034876778,0.0063199657,-0.0026715458,-0.0021380717,0.005445748,0.0002133629,0.006499079,-0.0031133797,-0.003312034,-0.0053136707,-0.0032410866,-0.0034444549,0.0035859349,0.006922229,-0.010372948,-0.0049347705,0.0015457406,-0.0008844024,0.0025732424,0.00055718975,-0.020344459,-0.00044257368,0.0100431815,0.0042109475,-0.00681277,0.0062012793,-0.0037194327,-0.003444968,0.0058288304,0.0052146795,0.0049219183,0.00025224008,0.0025879228}},
      {{0.0012778818,-0.0025487666,0.0018600748,-0.006432489,-0.0006828169,0.0035277181,0.0020679394,0.005837509,0.0024898623,0.001199566,0.0010299516,0.0028623403,-0.015645366,0.0010580802,0.0027666506,-0.013441873,-0.00015503178,0.0013683223,-0.0019262538,-0.0010710079,0.0004071265,0.01111319,0.0030499813,0.0007116983,0.0016379195,0.0028155197,-0.00038154528,0.0019439945,0.002398184,-0.0007370682,-0.009669202,-0.013081592,-0.010236743,-0.0007538881,0.0056009106,-0.0020075338,0.0006837962,-0.026229618,0.0013004886,-0.00012901521,-0.0011462221,-0.0004052763,0.015239769,-0.00026246705,0.0018211516,0.009563476,0.0045177424,-0.00031158826,0.0017002564,-0.00087041635}},
      {{-0.0053669005,0.0048515606,-0.0038112078,-0.003543927,-0.0012811162,-0.006023419,-0.0016530117,0.0142928045,-0.0013279837,-0.00042667805,-0.00040481327,0.004226609,-0.011089488,0.0016288979,-0.0059947185,-0.016457682,0.002399754,0.002607693,-0.0069174524,0.0016196986,0.004715566,0.017133975,0.0031474933,-0.001372627,0.0072151036,0.0030969104,-0.00045835285,-0.0050690295,0.0036900586,-0.0038378595,-0.017607737,-0.017023262,-0.009258407,0.0052207764,0.010542094,-0.006951483,-0.0014973095,-0.029060949,-0.0020380726,-0.011924958,-0.002331853,0.0026794744,0.018048177,0.009463023,-0.0017759074,0.0066850684,0.0014511655,-0.004480523,0.0023969817,-0.002887891}},
      {{0.0014557701,-1.5601587e-06,2.90808e-05,0.0016147456,0.00020745801,-0.001264199,0.0024297691,-0.0034725908,-0.0038098844,-0.0025870642,-0.0014567719,0.0017837887,-0.0013599383,-0.0009378413,-0.0012186621,-0.008882578,-0.00064861873,-0.0014533835,0.0022436224,0.0018895488,-0.003611871,0.01664422,0.0004498838,0.0017725183,-0.0040544933,0.0012132291,-0.0015869399,0.0011902804,5.6351084e-05,-0.0005211119,0.01045524,-0.017858213,-0.01126906,0.0007002971,0.0010248505,0.00033031648,0.00059998623,-0.024691598,0.0021253417,0.0003180591,0.0013082655,0.01907293,-0.0034080374,0.0035677422,-0.0014794954,0.017742889,-0.0010710191,-0.00068008906,-0.0012039656,0.0018090518}},
      {{0.0034760467,-0.0035232164,-0.0030164653,-0.0031339838,-0.0047173933,0.0029454657,-0.00032007383,-0.006149688,0.0030292193,0.00076277315,0.00025566635,-0.0038882867,-0.0034516593,0.003277133,8.891193e-05,-0.01891549,0.0030782511,-0.0056436285,0.0043335077,-0.007762547,0.0011359862,0.016023446,-0.0042381436,-0.0022171375,0.010174035,-0.00485227,0.006420125,0.0031314115,-0.0019401158,-0.0047573945,-0.0008468763,-0.016961668,-0.006275024,-0.00116744,-0.0057255155,0.0016037131,-0.00865057,-0.01673188,0.0006893397,0.003397631,0.0061555565,0.0098715555,0.00047434354,-0.0015343874,-0.0030029956,-0.00025239924,0.006122946,0.00096811185,0.0002984034,-0.00089516316}},
      {{0.0034932988,-0.00071115047,-8.119437e-05,-0.009147157,-0.00070392154,0.002250658,-0.0016940004,0.011996379,-0.005885475,0.001653976,0.002627455,-0.0035763097,-0.004464408,0.00056205224,0.00043450767,-0.00054812204,0.0026532367,-0.0011736052,-0.0019229738,-0.00038852933,-0.0025619762,-0.01944782,0.0011344954,0.0011355125,-0.0057657445,0.0015280591,-0.004048997,0.002198653,0.014071717,-0.0046299137,-0.0035973408,-0.003538461,-0.0035791637,-0.00789592,0.004722124,-0.0006107996,-0.0024157448,-0.03368547,-0.000279378,0.00023478168,0.00027550771,-0.0032166815,0.011510527,-0.005295417,0.0009887571,0.0035987704,0.0070529245,0.0065223314,-0.0005465177,0.0016208371}},
      {{0.0027398223,-0.0006574286,-0.00366303,-0.002487153,-0.0020339913,0.00028628946,0.0022273497,-0.0013687388,-0.008736037,-0.0046513067,0.0037632787,0.0030450767,-0.012013951,-0.00037021408,0.0006319386,0.004297804,-1.3370964e-05,-0.0039075157,0.004826229,-6.7025874e-05,0.00297675,-0.025812387,-0.0047611543,-0.0013560826,0.0010700477,-0.0044598207,-0.0066332333,0.0025126988,0.0070085796,-0.0014660897,-0.016400538,-0.0064896652,-0.0012278925,-0.0033769826,0.0011974813,-0.0020378248,0.0026297295,-0.03320541,-0.0020739313,-4.7907823e-05,0.0021097092,-0.008831386,-0.00015175239,-0.008558214,0.001481088,-0.007451917,0.0017156283,-0.007780011,0.0020615458,-0.0059397034}},
      {{0.0007169206,0.0015457795,0.0055024545,0.009147021,-0.003792016,0.00038161685,0.00036204932,-0.0057062823,-0.0046294793,-0.0023396465,-0.0045539066,0.0024240739,-0.00087314594,0.0011192107,-0.00021610368,0.0033176194,0.0017925007,-0.001660062,0.0020362493,-0.0018937154,-0.0031622767,-0.017319882,-0.0009049376,0.0032882106,0.007682205,0.0020593188,0.0013862753,0.00083674566,0.004410519,9.061898e-05,-0.0026405992,-0.0028987806,-0.005121101,-0.0027255053,0.000999172,0.0035350206,0.0030225224,-0.036916696,-0.0015568276,0.00160766,-0.00030023238,0.0098469425,-0.01829967,-0.0023562394,-0.0032531673,0.008496162,-0.0006884695,-0.005574121,-0.0007117375,-0.0014593421}},
      {{-0.000426748,-0.0006089544,0.0024933931,-0.005313272,0.0082924515,-0.0025613348,-0.0009785644,8.203234e-05,0.0010343799,0.0026464146,-0.0057295724,0.0006666579,0.003539324,-0.0024372474,-0.0014693959,-0.0046255738,-0.0014467434,0.0006015341,0.0014368345,0.00032144086,-9.4344054e-05,-0.010409129,0.0023819825,0.0009973843,0.0066230725,0.0062343017,-0.0029703456,0.0010296234,0.004272628,-0.0015444363,0.027268304,-0.005970388,-0.010127291,0.0018306137,0.0026101733,-0.0026264687,0.0042051906,-0.038535614,-0.0009636938,-0.0017242635,0.002033939,0.023062432,-0.016901037,0.0065193474,-0.0019080885,0.0067451023,0.0021824308,-0.008953191,0.003628099,0.0045823464}},
      {{0.0027899353,-0.0019497245,-0.0030464383,-0.0018238404,0.0019120367,0.0016068794,0.00093180645,0.0030809843,-0.0048482935,0.0036124405,0.0031723515,-0.0011406778,-0.012695012,0.00053362583,0.0026517822,-0.0021878595,-0.00020957603,0.0015267138,0.007485866,-0.00088801456,0.0021675155,-0.011519775,0.00020603587,0.0015159702,0.0024206406,-0.0023053922,-0.002376702,-0.0003511067,0.0047049522,-0.002744198,0.008577433,-0.0039060714,0.007427084,-0.014096693,0.00082928466,0.0012452098,-0.002430057,-0.03418251,0.0019845162,0.005343997,0.0007595131,0.0034972746,-0.008857523,-0.0056961267,0.00056291005,0.011014065,0.0037894025,0.0026673293,-0.0006245592,0.0059909755}},
      {{0.00044923765,0.0062216655,-0.0017448198,0.0026959975,0.0005080194,0.008945786,0.00036498703,0.008986641,-0.014212023,0.0031356679,0.00805653,0.0039158454,0.0028025277,0.0056903223,-0.0040571596,0.00027147244,0.0019361646,-0.0019257466,0.00106656,-0.001717133,-0.0033146793,-0.0203236,-0.003427614,-0.0021067725,-0.0012532176,-0.0020107266,0.0048649698,0.0012443083,0.008768249,-0.00132252,0.00046199394,0.005565943,0.009058241,-0.009707002,-0.00054804696,0.008311022,-0.0019371661,-0.042706273,0.00502604,-0.0023708772,-0.00022052358,0.0050897794,0.009361459,-0.008028138,0.0060131205,0.016820354,-0.0031154735,0.0030500374,-0.0010363797,-0.0072245966}},
      {{-0.0010455888,7.439543e-05,-0.0007252327,0.009247399,0.0022899676,-0.00044885345,0.0034476556,-0.0034290329,-0.004663054,-0.0026765382,-0.001802623,0.001001368,-0.0031028867,-0.0011960565,-0.0018915574,0.0013900691,0.0017967194,-0.0035713946,-0.009155906,-0.00020303523,0.0012903454,-0.018787315,-0.002391962,-0.0024646523,0.0023979326,0.0005594534,-0.00275407,-0.0012873525,0.009704084,0.0001551585,0.005687329,-0.007028787,-0.00026756397,-0.0057411324,0.0003561093,0.0010668399,-0.0017109836,-0.03708205,0.0008172415,-0.0021820653,0.00057201146,0.008198911,-0.011407642,0.0027442242,0.0010779098,0.010258609,-0.0016521377,0.00078735553,-0.0020197087,-0.00038463162}},
      {{-0.0037687845,0.0057866857,-0.007079582,0.0065083993,-0.0026885138,0.0062763356,0.0043438952,-0.007227313,-0.016186371,-0.00066635525,0.00026368248,-0.008194276,0.012873558,0.0029654582,-0.004280439,0.008795553,0.0019484104,-0.002766726,0.00044599408,0.0020432349,0.0053202827,-0.026273254,0.0023244144,-0.0012446122,-0.004228864,-0.0023128698,0.0039403117,0.00055164896,0.009680248,0.0007999897,0.011176508,-0.0076780957,0.0037463852,-0.0077300835,-0.0073990608,0.0016693473,0.0023674166,-0.03726217,-0.0037135947,0.0013338062,0.00048119592,0.009768889,-0.0041185077,0.0002596828,-0.0009559186,0.006370412,-0.0010907006,0.00047449052,0.0013835235,-0.002556508}},
      {{0.00034363376,-0.0018383678,0.0028316057,0.0018982551,0.002015073,-0.0026188523,0.0003896595,0.0025025178,-0.0041683894,-0.000101827034,-0.001441599,-0.0005783897,0.0069431085,-0.0017347939,-0.00056936574,0.0031584876,-0.0010995659,0.0027968995,-0.00015227954,0.00059262,0.0018248671,-0.020530317,-3.5797573e-05,-0.0015924358,0.0055664354,-0.001797295,-0.0011221702,0.0010337774,0.011964157,0.0041565034,-0.0062487554,0.007370387,0.010868517,-0.011343124,0.005139415,-0.0011377347,-0.00032534462,-0.038395006,-0.00063306076,0.000575934,-0.00073226145,0.0046046637,-0.00925165,0.0034815199,-0.00078902015,0.010667691,-0.0012020192,-0.003970769,-0.0002998747,0.0023761364}},
      {{-0.0025370985,-0.0040744697,0.0009952099,-0.002333404,-0.0022019981,0.004446427,0.0017178344,-0.0014550468,9.408543e-05,0.0040563736,0.005163887,0.0020841712,0.009367637,0.0006407652,0.0016528022,0.0011865234,0.0031355831,-0.002226977,0.0016050604,0.000838937,-0.0011774775,-0.02369495,-0.0050455565,-0.0036250479,-8.882703e-05,-0.001512003,0.0035708952,0.0021689923,0.012231834,0.001287475,-0.0096843755,0.0026860996,-0.0036318938,-0.0074592857,-0.0001344581,0.0022150427,0.0009974681,-0.036275066,-0.0038992153,0.003094533,0.0018225118,0.0073911017,-0.0016567453,-0.007667139,0.0014534607,-0.0038541693,-0.0017912704,-0.0027921433,-0.003867124,-0.00071955967}},
      {{-0.0005551743,0.0008417862,0.0007182093,0.00013496603,-0.0055759526,-0.0014459606,0.0018965135,-0.005461495,-0.007820505,9.749594e-05,-0.0016010648,0.00063087855,-0.0017425627,0.0007392604,-0.005828804,0.0015359571,-0.002398554,-0.0020265924,-0.0012485256,0.0023159867,0.0015050324,-0.021707734,0.0016277587,0.0017128391,0.0050595663,-0.0008104188,0.0032487675,-0.0009494365,0.013591671,0.0019870864,-0.025184147,0.008884648,0.0007060408,-0.0044820295,0.0007450139,-0.0033335139,-0.0017602697,-0.040003907,0.0013107006,-0.00092615426,-0.00041697282,-0.005601218,-0.0057237586,-0.0025358065,-0.0015616802,0.0066511678,4.389204e-05,-0.009323101,-5.9652302e-06,-0.004719937}},
      {{0.0013113329,-0.00015878747,-0.004447819,-0.0071141617,-0.004850812,0.004508249,-0.0027227048,-0.0037266947,-0.0030756707,0.0042009554,0.007011527,-0.0008912239,0.0049010236,-0.0021057208,-0.0028894937,0.011057462,0.004416803,-0.0066848984,-0.0030989165,-8.586905e-05,-0.0044010608,-0.026492946,0.0013426146,-0.0032762098,0.004120754,-0.0012971099,0.0045519704,-0.0017082777,0.015037758,-0.00056297024,-0.016888045,0.007444497,-0.0026410474,0.0019601034,-0.0024965077,-0.003332919,-0.0030529508,-0.040341914,8.5559375e-05,-0.002677401,0.00055961753,0.0052560233,0.007167384,0.006895586,-6.8245005e-05,-0.0020625666,0.01152218,-0.0011072714,-0.003093346,-0.002636054}},
      {{-0.00032217518,0.00087505387,0.0003638615,-0.000970361,-0.0022946668,0.00016631524,9.80319e-05,0.00072911085,-0.0071238717,0.0018392282,-0.0003500037,0.0035505737,0.0073059443,-0.0016093613,0.0026303853,0.002697095,-0.0012755763,0.0011460474,-0.0020728898,-0.00040562972,0.00012921751,-0.017458992,-7.842914e-05,6.904063e-05,0.013901968,-0.0010243818,0.00032340115,-2.0425285e-05,0.012296467,-0.00092612003,0.008124372,0.004092601,-0.0066541177,-0.009358811,0.002817868,0.00051124184,0.001635482,-0.03551864,-0.0025347795,-3.8956783e-05,-0.0016372794,0.009234018,-0.020774342,0.0029142164,-0.00048432327,0.0029749253,0.0020695948,-0.00010330768,-0.00038913885,0.00021803968}},
      {{-0.0035463567,0.00545996,-0.0042570764,-0.007983438,0.00028113255,0.0052259876,-0.006302706,0.0036681017,-0.0108204065,0.0003208022,0.0027939577,-0.0030547548,0.0034676043,0.0033000382,0.0014046333,0.0016317735,0.00026823516,-0.0032397765,0.0024706235,0.0004193463,0.002263225,-0.031341814,0.0011960956,0.0075528673,-0.007051414,0.0007456205,0.0019501613,-0.00048741634,0.014249882,0.00027119764,-0.0031157646,0.005746036,0.007314325,-0.009526768,-0.006091631,-0.0022612403,-0.0057565416,-0.040124737,0.0011087103,0.0049137115,0.0018370121,0.006273293,0.004785979,-0.00042918444,-0.0010744955,-7.241811e-05,0.0007747972,0.005223168,0.004061038,-0.0038350911}},
      {{0.00013211688,-0.0014490216,0.004056418,-0.00446877,-0.0022472914,-0.0031003184,0.00070470275,-0.0011926872,0.0017304827,0.0026433147,-0.00054061814,0.000485895,-0.0064755245,-0.0016692817,0.0014669354,0.010803058,-0.0024691804,-0.0014161523,-0.00033439219,-0.0019616561,0.0023683857,-0.023489675,-0.00029756338,-0.0010533541,0.007575797,-0.0013959951,0.002393677,-0.0007058669,0.012299752,0.00060376606,-0.012732682,0.006273127,0.009234005,-0.008506818,0.0050139506,-0.0010955398,0.0010723842,-0.038343728,-0.0025802553,0.0020558103,-0.00075728307,-0.008564815,-0.007909569,0.0004292115,-0.0016986786,0.0027380746,0.00069729483,-0.0065135183,0.0018172682,0.0016049735}},
      {{0.001896142,-0.00063624233,-0.0026478136,-0.012702193,-0.0030309747,-0.0033528998,-6.645228e-05,-0.0012314003,-0.007373427,0.002932133,0.0010342154,0.0009931026,-0.0144781945,0.00041176283,0.0022829117,0.005908074,-0.00014804851,-0.0038232605,-0.004699372,-0.00539385,-0.0015819581,-0.03325049,0.0034683526,0.0009220134,0.0038679729,-0.0031721394,0.0032716515,0.0012852115,0.010830981,0.0055227876,-0.004586314,-0.0008027978,0.014777045,-0.007663857,0.0039891372,0.0014296088,-0.0029125907,-0.039700978,0.0034254713,-0.0029031057,0.0010530255,-0.009478948,0.0009091441,0.0074243853,-0.0058627594,-0.0010998086,0.002666744,-0.004994887,-0.0024354765,0.001004584}},
      {{0.0004062358,0.0010328471,0.0013052641,0.0070021166,0.002742604,-0.00037001717,-0.0012450297,-0.002730667,0.0018963567,-0.0014867755,-0.001446487,0.002877956,0.009394949,-0.0005469411,-0.0045750667,0.0045640003,0.0014054044,-0.0037922303,0.0024333526,0.0019839513,0.0009416786,0.03169634,-0.0009602893,-0.002406476,-0.00050419214,0.0014371115,-0.0011708555,-0.00091292954,0.0031885426,0.0017259732,0.0028162375,0.0056570675,0.0033095684,-0.008186048,-0.000132054,-0.0018858948,0.0024535852,-0.025196126,0.0006296722,-0.0031926038,-0.0015041165,7.966994e-05,-0.009086685,0.008814372,7.7775956e-05,0.017874435,-0.0038976343,-0.004782543,-0.0019623938,-0.0056976746}},
      {{0.0034405612,-0.00063417485,-0.0028057233,0.008525867,0.0020118712,0.0065055448,0.00051552866,0.0012515103,0.01882916,0.0025121109,0.00036135397,-0.0032768343,-0.009265425,-0.0017767437,0.0042336066,0.005219889,0.0050422577,0.0005929918,0.002695867,-0.00037659763,0.0016682327,0.0352171,-0.0017533856,0.003209016,0.0007480139,-0.00022288924,-0.0014016362,0.0027930357,0.00438469,0.0014875766,0.0066773263,0.009428192,0.011374103,-0.013111488,0.0011317156,1.491825e-05,-0.0024965901,-0.027697938,-2.5124025e-05,0.0035319442,0.0006248314,-8.4802385e-05,-8.9159796e-05,-0.010842931,-0.00093467993,0.0072796224,0.005083122,0.0067128665,0.00063664437,-0.00022885606}},
      {{0.0013630914,6.2753834e-06,0.0010791095,-0.0022327714,0.0064465543,-0.0017267441,-0.00075113674,-0.00076203264,0.0036354908,-0.0011035601,-0.0020211788,-0.0025711579,0.00038278193,-0.003890553,0.0004949401,0.0062953024,-0.0022473142,-0.0007266618,-0.0009639579,0.0011642989,-0.004030191,0.029933725,-0.00043812054,-0.00010414073,-0.004294416,0.0002573616,-0.002716908,0.0002456741,0.0072893053,-0.0012438004,-0.0038206521,0.012638111,0.0047597494,-0.015603761,0.0006018411,-0.00029268287,-0.0012866167,-0.02803856,0.0011177737,-0.0015171942,0.000950717,-0.0023057263,0.0135096125,-0.0068916534,0.0017358002,0.0002565815,-0.0001926092,-0.00046083692,0.0004898628,-0.0008430113}},
      {{0.0011339622,-0.00026195374,0.0018607735,6.210136e-05,0.0012439756,-0.0011847813,-0.008108638,-0.0025641231,0.0072992146,-0.0036635778,-0.001803287,-0.006288538,-0.0053021787,0.0009466079,0.005381032,-0.0039930535,-0.003417513,-0.002395653,0.0051493887,-0.0021498885,-0.00180424,0.029121311,0.0028391823,-0.00011424699,-0.0019470921,-0.0044574416,0.0008512457,0.0010919624,-0.00010019483,0.0011448015,-0.008420589,0.0029235217,0.016339524,-0.013533751,-0.0053821867,-0.004929536,0.0014906884,-0.02534606,-0.0038210065,0.0012023279,0.0018572395,-0.0046706395,0.00013293455,-0.008424432,-0.00654982,-0.005848158,-0.0074480423,0.0045654513,0.002232108,-0.00074278883}},
      {{-0.0031756326,0.001724855,-0.00067944516,0.007455122,0.0033269401,0.0008229544,-0.0005283693,0.0022577115,-0.0009158747,0.00025107717,-0.00024344608,0.002148398,0.015982838,0.0008211592,-0.0007296302,0.011296386,-0.0002915029,0.00087587204,-0.0013491464,1.7930724e-05,0.0022369314,0.026329897,-0.0008723642,-0.0030108509,-0.00067876204,0.00040314763,-0.0032168713,-0.0010853884,0.0014912442,-0.003078821,-0.0133070545,0.005843836,-0.0038386174,-0.0075485413,-0.0015890052,0.00018622755,0.0011430361,-0.024598798,0.0021106028,-0.0046858233,-0.0011814168,0.0055388147,0.009200138,0.0045942855,0.0019544682,-0.005268658,-0.003836773,0.004999392,-0.0021777484,-0.003716605}},
      {{0.00033827574,-0.00292246,0.0011455609,0.00031161573,-0.003106487,-0.0007608477,-0.003447382,-0.0010206192,-0.0068271826,0.003814511,-0.0013675683,-0.0063005965,0.010974961,0.0030442413,-0.002645537,0.0014698781,-0.0030228011,0.0020362032,-0.005782646,-0.0021199463,-0.0026062962,0.025094906,-0.003016415,-0.0019949102,-0.0037974038,-0.0009903656,0.0022771875,-0.0006332177,0.0042120107,-0.00021765282,-0.011658011,0.0012697991,0.0065567927,-0.010448014,0.0013448275,-0.0013000681,0.003874945,-0.022729935,0.0016605866,-0.0075625964,-0.0015269447,0.02272272,0.016013214,-0.0011373386,-0.0023443392,-0.022132939,-0.002910356,-0.0013266715,0.00343573,-0.007072162}},
      {{0.0010184587,0.0006072974,0.0014246907,0.0045185816,0.0013200297,0.0027736898,0.0027413315,5.41098e-05,-0.0020659156,0.0012593277,0.00036288495,0.0034637074,0.012362503,0.0022403228,-0.0008649128,-0.0038418095,0.00052708155,0.0015967039,-0.0024360528,0.0003708639,0.0011018238,0.037338298,-0.0025410682,0.0029746178,-0.004939784,0.0019426694,-0.0013069921,7.059004e-05,0.010021722,-0.0030550493,-0.010901757,0.01018508,0.004810939,-0.013019037,0.0018599925,0.0012330593,-0.0005102796,-0.02419978,-0.00021508592,0.00091851264,0.0010726871,0.008982314,0.008543401,-0.007654025,0.0034467878,-0.020737622,0.0036022167,-0.0004087919,-2.879895e-06,0.0018275979}},
      {{0.0036153144,0.0012469544,-0.0012711484,0.0073226606,0.0016719103,0.004476517,0.004064272,-0.003974699,0.008486813,0.0018655903,0.000916207,-0.00025662023,-0.0024069077,0.00067072123,0.0005446689,-0.00016738543,-0.0047915103,-0.0015676923,-0.0059800656,-0.005247143,0.0032644619,0.035993885,-0.00029929526,0.0025060403,-0.004308303,0.0005043504,-0.004741162,-0.004246545,0.0044821687,0.0026317323,-0.008421362,0.012007558,0.01297884,-0.0157302,0.0031068488,-0.0021607305,-0.004310694,-0.027235145,-0.0051646903,0.002912552,-0.0008869573,-0.006290796,0.005557295,-0.012093143,0.00031577697,-0.012342125,0.0035210345,0.009470051,-0.00012210653,0.011309225}},
      {{0.0029579764,-0.00025717355,-0.0030315698,-0.012307584,0.0021094973,0.00063069974,-0.0023979696,-0.0016939869,0.0062680324,0.00031872833,0.0010755273,-0.0023938308,0.005176677,0.0019486583,0.0017172829,0.008810774,0.0004536668,-0.0022152972,-0.00342117,-0.0013912512,-0.0036025604,0.033181958,0.0011415745,0.0006853197,-0.0075098863,0.0018374177,-0.0019458826,0.0021824024,0.0028539912,-0.0030417382,-0.0018357831,0.00021340551,0.0034930387,-0.009144957,0.0005876873,0.00046592916,0.00083613914,-0.022196662,0.0005777768,0.0007981895,0.0018833999,-0.012596731,0.01648747,0.005376403,0.0011143074,-0.008602086,0.0033336778,0.0038339617,-0.0016577624,0.002089573}},
      {{-0.00076633843,-0.0027147902,-0.0015862483,-0.0039401166,0.00088460033,-0.00022495491,0.0050963806,-0.002739973,0.0053413133,0.0014575293,-0.0020282457,0.00054076663,0.0058158785,0.0038860338,0.0019159839,0.005780286,0.0003087691,-0.007094772,-0.005729967,-0.0023554158,-0.00126722,0.04238245,-0.0019940613,0.0015006899,-0.0069955694,-0.0035589521,0.005064132,-0.0017268609,-0.00034492835,-0.0010879841,0.009474608,0.0022742823,0.0074879583,-0.010517927,-0.0023910073,0.0017895018,-0.0022659472,-0.02454361,-0.002060923,0.0061356477,-0.0018407004,-0.0035122158,0.0037247518,-0.0012096452,-0.0009610515,-0.0096240705,0.010742125,-0.006371323,0.0069127595,0.0009433049}},
      {{-0.0002625816,-0.0017887475,-0.0049866107,0.0009895402,0.0007061973,0.0011435834,0.002499499,-0.0022707756,0.0070365923,-0.0032371045,-0.0018859112,0.004884034,0.009967676,-0.0013848208,0.0038985794,-0.0034662613,0.0015156986,0.0024601857,-0.011835873,0.0006783916,-0.0007335417,0.04749884,0.0004224355,-0.0007917141,-0.008454226,-0.0033361895,0.0017009024,-0.0009158623,0.005726399,-0.001429483,0.010628992,0.004462059,0.0061817453,-0.007162002,0.0053659827,-0.00055113283,-0.0005556251,-0.02635024,-0.00011175694,0.0029973835,0.0005228025,-0.00026211815,0.01228398,-0.006166036,0.0016347102,-0.015831705,0.008559266,0.002729742,-0.00095128134,0.009546818}},
      {{0.0024035284,0.001184978,0.0029103884,0.0031663117,-0.007673757,0.0044282367,0.0026108644,-0.005571168,0.009603183,0.004519784,0.003075554,0.00064713747,-0.0141905295,0.0017349947,-0.00022850269,0.017347429,0.0061942963,-0.0063283057,-0.006963612,-0.001741459,-0.007318513,0.03444348,-0.0004580286,-0.0015564698,-0.008189082,0.006709137,0.00043966912,4.927259e-05,-0.00626831,0.004742008,0.014272652,0.0029900514,0.018799314,-0.0076583982,0.0063135205,-0.0031833202,-0.0026304917,-0.016004194,0.00600994,0.0011721387,0.0035242727,0.0046045864,0.0022995202,-0.005512851,-0.00041931024,-0.030000854,0.006496586,-0.00397458,-0.0026811971,0.006910897}},
      {{-0.0016319082,-0.00020708704,-0.006368496,-0.010123752,-0.0028540117,0.001617654,0.0005216812,-0.009665129,-5.4413602e-05,0.004143315,0.005174575,5.822216e-05,-0.02304519,0.000981503,0.0024250138,0.01070612,-0.0011379602,-0.0050523337,-0.008588187,-0.0008263592,0.0012764158,-0.0073055252,-0.00056920917,0.0015302827,-0.017913103,0.0031793136,0.0076278183,0.0008613294,-0.025771426,0.0045422404,-0.0092498325,-0.024056233,-0.0034619505,0.00370319,-0.0049917144,0.0012633188,-0.00087258156,0.0055296966,0.0032009594,-0.0018923089,0.0024727203,-0.0222431,0.043989584,0.008147997,-0.0013182077,-0.049894456,0.008731393,0.0024003251,0.0010462842,0.0021768566}},
      {{0.009366966,0.00395944,0.0022709449,0.010786646,0.0064691124,-0.0028315948,0.0017209213,-0.0010372072,0.0121329,-0.004914058,0.0036859566,-0.003631811,-0.03755835,-0.009280866,0.0039106747,0.011710206,-0.0010847669,0.0060604336,-0.007804184,0.0037189187,6.399798e-05,-0.015742518,0.00011979669,-0.010262053,0.0044050487,-0.00021244859,0.0059358394,-0.006698836,-0.031024776,-0.0005189159,-0.02229908,-0.010884489,0.005041893,-0.013063006,0.0067842198,-0.0031734775,0.0017955571,0.006276605,0.000291969,0.0038946697,0.005958778,-0.025169175,0.029289182,0.010703565,-0.005190676,-0.04742513,0.0001542651,-0.006506934,0.0036143812,0.012824031}},
      {{0.0021247985,0.0016118586,0.0027758551,0.005510931,0.0021997709,-0.0015091412,0.0042938283,-0.0055094818,0.007972457,-0.0019654855,-0.00048552983,0.00058781897,-0.035866875,-0.0004774497,-0.0008625247,0.0040720897,-0.0033055865,-0.003529547,3.892966e-05,-0.0033854675,-0.004776702,-0.017610526,-0.00017008309,-0.0006950091,-0.010113043,0.002392809,-0.00537111,-0.0031193816,-0.027123213,0.0022034089,0.016801635,-0.0030346147,0.016387304,-0.019124802,0.006764922,-0.0036181186,0.00043965428,0.014238354,-0.0011575922,-0.0036752827,-0.0006459909,-0.0056104413,0.02539215,0.010329674,-0.00057848496,-0.051277958,-0.0005884752,-0.005360462,-0.0046264147,-0.004536728}},
      {{0.0019977018,-0.0040409677,-3.3823453e-05,0.011413289,0.002219223,0.006210287,0.0041630687,-0.004549898,0.01352598,0.0011546123,0.00443557,-0.005346911,-0.020203754,-0.0010568586,-0.0034777762,-0.012810663,0.0043650204,-0.0007963924,-0.006384225,-0.004551169,-0.0015951837,-0.022475744,0.003950724,-0.0017598899,0.0041453834,-0.005066799,-0.0020290208,0.0011879958,-0.027360836,-0.0065629217,-0.019691778,0.0154688,-0.0017923571,-0.027495954,-0.0056562866,0.0020830615,0.0033608545,0.014866373,0.0030287239,0.00040791315,0.0007139568,0.010713577,0.019595996,0.021314856,-0.001205612,-0.06625338,-0.0057893367,-0.001329479,-0.0077821193,0.00466735}},
      {{-0.0004563944,-0.0025606377,0.0058781537,0.01695637,-0.0072228187,-0.0023335929,0.0007446832,-0.013949995,0.001382064,-0.0017915767,-0.00068943616,0.0011531044,0.005543396,0.0023786314,-0.0009700317,-0.014170522,-0.0019688995,0.0015370491,0.013293549,0.001726258,-0.0017624646,-0.0139758745,0.001891213,0.0011875922,0.010287784,-0.0031939205,0.00026179783,0.00063869957,-0.02680182,-0.00075976347,-0.012317885,0.0021504597,-0.0068211607,-0.01186274,-0.0012463632,0.0011952267,-0.00031904448,0.022488108,0.0005846286,0.0038932327,-0.00033357352,0.016171772,0.0059349895,-0.009236838,-0.004312144,-0.06965107,0.00013018366,-0.007959571,0.0014719262,-0.000102124955}},
      {{0.005494767,-0.000121802834,-0.0014742354,0.012427827,-0.004672026,0.003939059,-0.00059537956,0.008598458,0.0026528197,0.00025005074,0.00045525815,-0.00067750656,-0.01437501,0.0073592346,-0.0055334424,-0.020166364,-0.0031741848,0.000952985,0.002682631,-0.0018713617,-0.0002454023,-0.032701235,0.0040240996,0.009828776,0.001147693,-0.0055551287,0.007137934,-0.0068255276,-0.028005067,-0.011880085,0.017445043,0.0047931084,-0.00021920762,-0.046828818,0.0036226553,0.0053475946,-0.0024875894,0.024297247,-0.0017872642,-0.00088138593,0.0016914079,0.00392205,0.030221894,-0.0072313948,0.005303133,-0.056915946,0.007966088,0.018631505,8.212279e-05,0.0029111677}},
      {{0.0015584434,0.0033980806,0.002967423,0.010691764,0.0029828139,0.0054160166,0.0014462166,0.009321901,-0.0058472585,-0.0020893621,-0.0018376,7.22102e-05,-0.006659299,0.0017483813,-0.0011375705,-0.017129635,0.0019853595,0.0042495425,0.0059059686,0.00042540126,0.0056026857,-0.015011261,-0.003144398,-0.0008403438,0.028873034,-0.0013625091,-0.00472042,0.00045618066,-0.029401466,-0.00234014,-0.00027515876,0.01182856,-0.008377781,-0.0386679,0.0013805925,0.001003785,0.0003638495,0.022659186,0.0013165963,0.0026008359,-0.0046421266,0.009756875,0.018079147,0.019613978,-0.0012853452,-0.07154481,-0.0024062123,-0.00085086806,-0.0055912575,-0.00085010077}},
      {{-0.0012402977,-0.0053812,0.011715495,-0.0013735553,0.008038248,0.0009862374,-0.0008279554,0.014682931,-0.006980141,0.003902338,-0.004422987,0.0056922585,-0.016720774,-0.0004959881,-0.0013603242,-0.04065035,0.0017427203,0.0024554988,-0.0022358706,-0.0002750583,0.0016441477,-0.015906036,-0.001879355,-0.008038479,0.014114492,0.0055956603,3.2901164e-05,0.0016201185,-0.023763828,-0.007829232,0.009979873,0.022883337,-0.0082331,-0.030419061,0.007363281,-0.008088591,0.0054429574,0.02232408,-0.002166446,-0.0040196325,-0.0018763859,0.010746158,0.03157703,0.03382074,-0.0015684268,-0.06278914,-0.0010141765,0.00036098098,-0.0013855543,-0.0004004641}},
      {{0.0011789904,0.0017345885,-0.0005833733,0.008898517,-0.0071706064,0.003632791,0.0026078701,-0.008389986,-0.0099131875,-0.0015551021,-0.0007759898,0.0017926719,0.019102454,0.003266116,-0.0005321053,-0.0021597783,-0.00033481538,-0.002694359,0.0042760074,-0.001882899,0.0020105122,-0.0029588116,0.00085969415,0.003450436,0.010759866,0.0006603995,0.0042079454,-0.0006607694,-0.027540237,0.0024035685,-0.0015075163,-0.0011583206,-0.0033692713,-0.025297979,-0.00033705574,0.0002600858,-0.0007628117,0.022148104,-0.0063889767,0.0018289704,0.0011634302,0.012176329,0.008458316,0.0124856895,-0.0027389443,-0.056398075,0.0011312776,-0.007771016,0.00020485536,-0.004267397}},
      {{-0.0030792991,-0.005001652,-0.004336564,-0.0011481671,-0.0015705663,-0.00067753595,-0.003263136,0.002129003,-0.0040963017,-0.0017787087,-0.00048124613,0.0017681984,-0.020947972,0.0058306316,0.0011662969,-0.013205691,0.00063463306,0.0005732164,0.005877647,-0.0021376226,0.0052965735,-0.012720136,0.00092740596,9.522997e-05,-6.492294e-05,0.0016971291,0.0072756885,-0.0052957735,-0.027482804,0.0012728231,0.010306466,0.012479594,-0.0059429333,-0.035210412,0.0011334745,-0.0003454484,-0.0016175573,0.014927928,-0.0035591167,-0.0052256137,0.00044647104,0.009266076,0.028134221,0.03282342,-0.0027267796,-0.044912748,-0.001431274,0.0012661241,-5.7265337e-05,-0.0017910576}},
      {{-0.00037654242,-0.0013191898,-5.2481944e-05,-0.0016481446,-0.010967206,-0.002830019,-0.0005320378,-0.0042767576,-0.005886163,0.002135389,0.004459668,0.0003425378,-0.002052119,0.0028777553,-0.00029456598,0.0027213662,-0.0030413803,-0.0012318882,0.0003454573,0.0004719012,0.0037978725,-0.0006011421,0.0032092854,0.0029632596,-0.004337163,-0.006853519,0.007014829,0.0010003156,-0.028541397,0.001117489,0.020562151,-0.0093414895,0.01016416,-0.013393333,-0.0034104122,0.002559972,0.004101539,0.008274591,0.00046221318,-0.001313905,0.0017325634,0.006471072,0.00824143,0.0144190015,-0.0017504223,-0.03901078,0.007329563,-0.004906194,0.005850079,-0.0037975868}},
      {{0.0028319177,0.0074105705,0.0030357626,0.0028614767,-0.003509882,0.0074723675,0.008208935,-0.010938641,0.0015332699,-0.0017276985,-0.00097258494,0.0077436264,0.00088704046,0.0010007003,0.00019291232,-0.008887651,-0.002081359,-0.0037155198,-0.0127496235,0.001852452,0.0036944945,-0.0022842458,-0.00128518,-0.00083762663,-0.009049195,-7.5751785e-05,0.0023877695,-0.001573447,-0.022664303,0.004931223,0.024705801,0.006199045,0.0068884986,-0.0092421025,0.011176086,-0.0047103167,0.003787701,0.010217272,0.0029055553,0.0027444544,-0.0015808077,0.022753172,0.015081793,0.024455493,-0.0022233406,-0.046523772,0.008310064,-0.010584322,0.0055493903,-0.0004315631}},
      {{-0.0008539386,-0.0022013371,-0.0034700828,-0.0069175363,0.002676695,-0.0039240895,-0.005898715,0.0012161725,0.006400314,-0.0009827663,0.0021593561,-0.0046858187,0.0028939808,-0.0013794313,6.960448e-05,-0.0061249943,0.0034776398,0.0011149703,0.0015123986,0.00034642496,0.002353675,0.0023477532,0.0007073525,-0.0019187812,0.0060889507,-0.0020131648,0.000106139014,0.0010817306,-0.024784839,0.0016062555,0.0011117107,0.0071890717,-0.0015478974,0.0008546702,-0.0057800272,0.0008122236,0.0021032672,0.004536128,0.0022864582,-0.00035221866,0.0011429425,0.02216486,-0.0022855022,0.003726159,-0.00050580245,-0.034160938,-0.0059493575,-0.0022594533,-0.0022193133,0.00029804982}},
      {{-0.0026822865,-0.0006017639,0.00066417176,0.0030257946,-0.0076465746,-0.0038381466,-0.0025334596,0.008557433,-0.009836865,0.0063412897,-0.0039243572,-0.0001517512,-0.0029766813,-0.0009523252,-0.00900386,-0.015115348,0.00091962283,0.0036887848,0.009451411,0.005244487,0.006763693,0.0014229565,-0.0010603472,-0.004427718,0.018667134,0.00030391617,0.0018970048,-0.0020461339,-0.030557225,0.0007469617,0.010973621,-0.0018278626,0.0155806495,-0.0071462444,-0.0048166662,0.0057578017,0.007448913,0.0039534103,-0.0022842395,-0.005701954,0.00012416214,0.041608628,-0.0138101885,0.014153351,-0.00012580102,-0.03141333,-0.010001243,-0.0060498742,-0.0034345754,-0.0048296}},
      {{0.0004921314,0.0016361375,4.4475866e-05,0.0026024664,0.0015792476,-0.0026637448,0.00024268078,0.0027050588,-0.00036010012,0.0029524267,0.0024598858,-0.00037457497,0.0018340255,0.00094386254,-0.0020279346,-0.0013473964,0.0008701725,-0.0018098156,0.0018126935,0.0007845001,0.00037151395,-0.004320112,-0.0021411318,-0.00051021326,0.008690554,0.0026921188,-0.0045591304,0.0032175814,-0.020587519,-0.0008972949,-0.0029956442,0.0047870823,-0.0033295886,0.005537096,-0.0068075233,0.002579635,0.0002907759,1.5579617e-05,-0.0006362228,-0.001137578,0.0031254347,0.015094152,-0.0025434475,-0.002125365,-0.0010956204,-0.027399762,-0.0033221361,-0.00239078,-0.0008142493,-0.0025397998}},
      {{0.0025368165,-0.0018662534,0.0033067341,0.0068299114,-0.005064176,0.0009237607,0.0046671643,-0.0007248938,-0.009363121,-0.0052014706,-0.0031867768,-0.005952943,0.0066801063,0.0068819365,0.0031579745,0.010017513,0.0028019936,-0.005943746,0.0018345698,0.0031549956,-0.001724251,-0.006646926,0.00030404518,0.0031559858,0.0019664024,-0.002138175,0.010979181,0.003883043,-0.019457594,0.00059539627,0.0033265296,0.010877914,-0.0058022127,0.0048742895,-0.0041789445,0.0009654719,0.0033309096,0.0020291023,0.002126594,0.00070626324,-6.330611e-05,0.016584737,-0.0079128845,0.019329343,0.0026958,-0.025655938,-0.0016398553,-0.002907181,-0.0033756082,-0.0051824534}},
      {{-0.003304719,0.0033117034,-0.002490244,-0.00015540497,0.001296587,0.0032520038,-0.002004138,0.00070172205,-0.0009906858,-0.0014375878,0.00047903377,0.00042842998,-0.0008962822,-0.00045029854,1.5857542e-05,-0.0017591822,0.0012539581,0.0034858955,-0.0035080437,0.0027363808,0.0034109214,-0.007218067,0.0014940054,-0.004806982,0.006489081,0.00041776226,0.005726966,-0.00028039704,-0.018439585,-0.0036636244,-0.007891179,-0.000303759,0.005352033,0.015869096,0.00044239266,-0.0026774001,0.002311906,-0.004199385,0.000724727,-0.008042022,-0.0030684,0.016055336,0.0066720615,-0.0116574,0.00010838761,-0.028854417,-0.0036093679,-0.0003612797,0.0023273344,-0.0032905657}},
      {{-0.010042163,-0.0049553616,0.0027270468,0.009873199,-0.009787237,0.00054439565,0.008587713,-0.0035726167,-0.0013504663,-0.006518368,0.0068913004,0.008551987,0.00076681544,0.004928229,-0.0036111076,-0.0011503944,-0.0071911192,0.0035786228,-0.009141695,-0.00095481036,0.014495275,-0.012169871,0.0048398073,-0.0056478316,0.019084724,0.0011750612,0.0037097563,-0.00082505855,-0.024274535,-0.000768271,-0.0053180936,-0.01849926,-0.0023099906,0.006330736,0.0030506672,-0.0024384877,0.0015659385,-0.0042783227,0.0034494023,-0.00845749,0.0013479094,0.010636193,-0.019572582,-0.020200418,-0.010190325,-0.031790942,-0.008446905,-0.013189432,0.0035215362,-0.008949083}},
      {{-0.00026365297,-0.00089160114,0.0019760672,-0.008653454,-0.0011707825,-0.0018766617,0.0014420785,0.011314619,-0.010722446,-0.0002388373,-3.168177e-05,0.0026871874,-0.0009564796,-0.009328528,0.0018807502,0.015093737,0.0014605412,0.0032621687,0.0034689477,0.00043953763,0.0033572367,-0.0007520401,-0.0013883263,0.0004928864,-0.0066577345,0.001690277,0.0031997832,0.00013477358,-0.010193724,0.0036136743,0.0014495094,-0.0072497474,-0.002899055,0.0035383771,-0.00015676358,0.0006442673,-0.0002179571,-0.0016336758,-0.0036346354,-0.0033801424,-0.0062545543,0.003593418,0.024622124,-0.01576578,-0.0007631149,-0.026773611,-0.006555997,0.0029375283,0.005290581,-0.0032267238}},
      {{-0.0029480185,-0.0023984706,-0.009209109,-0.012589885,-0.0024230685,0.0024150836,-0.0010548017,0.0015672856,-0.01327399,-0.003486995,0.0025011261,-0.0052294647,-0.00067538215,-0.003158296,0.0063043437,0.015297265,-0.0008344439,-0.0060628396,0.0032547468,-0.005960194,-0.016341252,0.0038422446,-0.0041241567,0.00087395863,-0.003332924,0.0017289866,-0.0008770595,0.004490119,-0.012271081,-0.0023392686,0.012455872,-0.008090777,-0.0042016325,-0.0068616075,-0.004471622,0.0016852823,-0.0029676487,-0.002050137,0.0022503645,0.006998323,0.0037244437,-0.0039907168,0.022501405,-0.011528649,0.0035245316,-0.016878814,0.0074910168,0.004385356,-0.0025073441,-0.0023327428}},
      {{0.00049921667,-0.0014355486,0.0018719092,-0.0007207823,0.0037288824,-0.005612248,-0.0032419881,0.008281095,-0.0059335567,-0.004911153,-0.004300218,-0.002604019,0.008490881,-0.0060222507,-0.001657763,0.0034707247,-0.001540331,0.0038491238,0.0022813505,0.0049198917,0.0019391846,-0.0022724029,-0.001461472,-0.00020422299,0.0036331029,0.0012255596,-0.0069584576,-0.0007727151,-0.01872817,0.0011030114,-0.00923159,-0.004136811,-0.0066440543,0.009722695,-0.0004785645,-0.0024885968,0.0058312234,-0.0053544054,-0.00062844006,-0.0043112007,0.00018297313,0.0017836116,-0.006741283,-0.014586147,0.0012207691,-0.022531534,-0.011576946,0.00041317526,-0.0007850875,0.0009405754}},
      {{-0.0023920003,0.000251452,0.0040713204,0.0007127584,0.0065086796,-0.0043420466,0.0017029297,0.011940569,-0.0041594543,0.004550417,-0.01172948,-0.0010168989,-0.008013473,-0.0067767315,0.00080730894,0.0038519297,0.0009993794,-0.0016959842,-0.0045656064,0.0013247523,0.003524196,-0.0061039138,-0.008865334,0.0037307872,0.006902259,0.0070726434,-0.0017052325,0.009771361,-0.022545388,-0.0007799291,0.0016379163,-0.009255882,-0.004432627,0.0057641617,0.011521184,-0.0075180386,0.0053116363,-0.0071534514,-0.0023586033,-0.018176993,-7.652019e-05,0.0068360134,-0.008516992,-2.286132e-05,0.0006391236,-0.023018986,-0.002571402,0.00046585573,-0.005338156,-0.0062678214}},
      {{0.00024386198,0.004706614,0.005050752,0.009786512,-0.0021289166,-0.0037554356,0.0042454354,0.00046696898,-0.016333392,0.00075467065,-0.0051774615,0.0019855183,0.0120209735,-0.0039250082,-0.002276877,0.010124339,-0.00036739244,0.010146363,0.0012079523,0.00496919,0.0029592828,-0.0072791805,-0.0020790375,-0.0013377821,0.0050116605,-0.00022474476,-0.0016579886,0.002829417,-0.020433864,0.006551233,-0.018243548,-0.010654353,-0.0038717564,0.0024042693,0.0018629953,0.0018789396,-0.00024815646,-0.0040130173,-0.0029812867,-0.004743825,0.0019351025,0.006715385,-0.0074635413,-0.0095477225,-0.0032903533,-0.02595235,-0.007452576,-0.00050864555,-0.001328838,0.0024486927}},
      {{-0.0016409432,-0.006757394,0.0071005127,0.0036436697,0.0021534262,-0.00031609877,0.001710816,0.022537554,-0.022170782,0.0037231036,-0.0032406915,0.0104972655,0.0066807065,-0.0030378106,-0.008696445,-0.0011348061,-0.0039764075,0.0049189636,0.0036873987,0.007361178,0.009520985,-0.009543467,0.0023061333,-0.010494332,0.021828799,0.001206432,-0.0044628154,0.0016330386,-0.024409708,0.0022748373,-0.015321574,-0.01679737,-0.011956421,0.004715799,0.014123645,0.0014298211,0.013952592,-0.0054369527,-0.005433906,-0.005294909,0.00082640495,-0.00055167417,-0.01629134,-0.007149398,0.00044295657,-0.023365814,-0.016062673,-0.011399345,-0.00010133824,-0.006966378}},
      {{0.0009877377,0.003294554,0.0008314733,0.006578499,-0.0014034522,0.00092879357,-0.003727604,0.0006108798,-0.0012289407,-0.0019334994,-0.0018359894,0.0015143824,0.007614748,0.0015989253,-0.00051772746,-0.0050338134,0.0011432162,0.0036264558,-0.00014361864,-0.0012732008,0.00074431533,-0.005627198,-0.0007565069,-0.0048700203,0.0036265876,-0.0003129599,0.0022814812,-0.0015190645,-0.020644894,0.000683071,-0.018390728,-0.008063837,0.00029947353,0.016363798,-0.0020073238,-0.0012503361,0.002557236,-0.0035224513,-0.000760627,-0.0027988032,2.2093836e-05,0.006954509,-0.0058388235,-0.012003277,-0.0031317442,-0.024041276,-0.009783711,0.0012318642,0.0018701475,-0.0010153541}},
      {{0.0044249357,0.004473367,0.002646048,-0.0020479814,-0.006189001,-0.0024448067,0.0007853825,7.113329e-05,-0.0073243156,-0.0034475424,-0.005897247,0.003574842,0.0002594248,0.0006153741,0.0050168284,0.016854852,-0.0042408505,0.011532017,0.0023011456,-0.0025715176,0.0023360823,-0.0067889886,0.006829602,0.0025389302,-0.007771378,-0.0073367986,0.00070666044,-0.00905002,-0.020539857,0.0070008617,-0.0054710563,-0.01664439,0.015864613,0.004869452,0.009171539,-0.0022655204,-0.004172595,-0.003751519,-0.0037780148,-0.008942545,-0.0031452272,-0.0015549937,0.011103256,-0.0043308684,-0.00065179495,-0.01681124,-0.002732675,0.0035621473,0.00074494904,0.005849537}},
      {{0.0038957805,-0.0026813336,0.0036789044,0.0027418383,-0.003418222,0.0022596081,-0.0018457767,-0.00081908767,-0.018184144,0.0021489607,-0.0010006783,0.002210094,0.008064884,-0.0022218612,-0.0064501693,0.0129128685,0.0019079631,-0.0039108815,0.000868898,-0.0003991213,-0.000415071,0.0013577166,0.00080897065,-0.0007562855,0.0034654846,-0.0018675931,-0.0016721345,-0.0010673181,-0.017731981,0.004350234,0.01470378,-0.0036475207,0.0062599955,0.01221832,0.0040472755,0.0025087846,-0.0015725222,-0.0010900567,-0.0001749846,-0.0032179442,-0.0033645383,-0.0057664346,0.0153640695,-0.0140533885,0.00013988126,-0.018457223,0.003167511,-0.0022953358,-0.0008459547,-0.0014449921}},
      {{-0.004210178,0.0011510561,0.0027908222,0.002054661,0.0033103295,-0.0027253411,-0.004210968,-0.0016970703,-0.011970075,-0.0036668703,0.002713213,-0.0009943168,-0.003717257,-0.0037901031,-0.002166502,0.0053671137,-0.0013751851,-0.0010411813,-0.004312808,-0.00022330465,0.007922572,0.0066940733,-2.0001824e-05,-0.0035227065,0.006475072,-0.006138995,0.001547531,0.0022599814,-0.022282334,0.003183449,0.007593342,-0.00963455,0.008078898,0.020242114,0.0046250736,-0.004200055,-0.00021397792,-0.0027720653,-0.0012630096,-0.004428163,-0.0055290465,-0.0107391225,0.011130751,0.0038445012,-0.0033141153,-0.021515805,-0.0034689005,-0.008919229,-0.007727041,0.002498763}},
      {{-0.0017283753,-0.0014151323,0.0026675384,0.0065765562,0.005676103,-0.0007089132,0.00011911624,0.00820289,-0.006896811,-0.0004988503,0.00087782356,0.0021216162,0.001500734,-0.0014601737,0.0024621377,0.01722112,0.0021429898,0.0038664662,0.0002470392,0.00080081477,0.0022163414,0.005836964,-0.0019270512,0.000101218844,-0.0008350952,-0.002004368,-0.0034864463,0.00018047458,-0.01692429,0.002352697,0.0062175626,-0.008336714,0.0100026205,0.022399476,0.0016387259,0.0023521392,-4.7611575e-05,-8.8641245e-05,0.0013034459,0.0010477192,-0.0053549744,-0.0023181532,0.006946265,-0.009698695,-0.0011281825,-0.016158063,-0.0016260648,0.007108405,-0.003368619,0.0004468461}},
      {{-0.006423224,-0.0017722081,0.00056149694,0.016130123,0.0073331348,-0.0029865333,0.004339425,0.00062909414,-0.005907113,0.004030623,8.404914e-05,0.005489154,-0.00082056003,-0.0017603864,-0.0039260765,0.026726438,-0.0040827943,-0.001780668,0.0058951466,0.0047461092,0.0027751583,0.0005454495,-0.007123546,-5.3910004e-05,0.0062404047,0.004533764,-0.0003847664,0.0013177299,-0.02734919,0.0006598079,1.770666e-05,-0.0093712155,0.010791186,0.005528421,0.0003183031,-3.048432e-05,0.0017844997,-0.0031435345,0.0037828574,-0.004691234,0.005904741,-0.0006666497,-0.01996148,-0.0040694135,-0.002858977,-0.012726481,-0.0022192486,-0.0044586305,-7.816095e-06,-0.0036205181}},
      {{0.0016181844,-0.003190323,0.005469312,0.0024775155,-0.00060049404,0.002233185,0.001893898,0.0042382865,-0.00880601,-0.002267807,-0.00292157,0.0022290347,-0.0017294995,-0.00526464,-0.001395826,0.018891232,-0.0022380548,0.001888754,0.0073057306,0.0029629178,0.00088874606,0.0073459204,0.001828574,0.003735871,-0.009518737,-0.0020527449,-0.0045593744,0.0034387214,-0.0217202,0.0015610501,0.01768008,-0.008433958,0.004644317,0.0074715056,0.0010652898,-0.0012177004,0.0012176756,-0.00354775,0.0010180419,-0.0014198789,-0.001526225,0.0048134797,-0.003242348,-0.012976687,0.0024329498,-0.012283169,-0.0020492345,5.6541805e-05,0.0042549265,-0.0061037024}},
      {{-0.003442624,0.0012462742,0.0020404353,0.0094508575,0.0066939862,-0.0046524913,-0.00081066473,-0.009828507,-0.0066133905,-0.0047139237,-0.0044817287,-0.00023142123,-0.01018434,-0.0065874187,0.0014202633,0.012070623,0.00016245464,0.0038404628,0.007148561,-0.0010359116,0.0016908818,0.009158444,-0.0043601273,-0.0054320414,0.0035514634,-0.004623597,-0.0075531173,3.1754164e-05,-0.028291626,0.004920937,0.011331846,-0.0038666462,0.0023494202,0.010478896,-0.007441529,0.0059488076,0.0016336176,-0.0013311768,-0.0057500466,0.008427153,0.0007132243,0.00014326266,-0.024478972,6.27524e-05,0.0035400076,-0.015324304,-0.0073161838,-0.0019261485,-0.0033949804,0.0010098377}},
      {{-0.000248123,0.002861771,-0.0003176408,-0.0014693702,0.0046397904,9.316955e-05,0.0010686037,0.0019533723,-0.0061282143,0.004409399,-0.0021444082,-0.0030894184,-0.002623337,-0.0022556698,-0.0017939408,0.008410637,-0.0005584991,0.0043532685,-0.0026057644,0.000993023,0.00091240904,0.009747484,-0.0015698575,0.00080286415,-0.0028230422,0.00062097993,-0.0025906572,-0.00063813647,-0.015908977,-0.0010511628,0.010273386,-0.01108907,-0.0020392335,0.01688185,0.0034246608,-0.0013409725,-0.004486677,0.0021499065,0.00035248065,-0.00031130514,-0.0034257232,0.0036339597,-0.0030133869,-0.016802512,0.002585237,-0.021126164,-0.0039586183,0.0019326825,0.0012818772,0.0042925947}},
      {{0.0024802391,-0.006773953,0.0035467027,0.0027879456,-0.0014722475,-0.0017979441,0.0026247408,0.0020665138,-0.007833394,-0.0005473412,0.004407859,0.004646702,0.0039599594,-0.002580598,0.00042361562,0.0033388517,-0.0031616068,0.0064360234,-0.0027502368,0.0006695527,0.0008797767,0.009210389,-0.0032516138,-0.0010581033,-0.0027846992,0.003486108,-0.00083115295,-0.0021121213,-0.023843579,-0.0052294508,0.00016441247,-0.0035188869,-0.005958625,0.018734885,-0.00014820979,-0.0037389356,0.009054543,0.0020471816,-0.0021310658,-0.00448594,0.0009993791,-0.0041309684,-0.013595461,-0.005457196,0.003955342,-0.022254061,-0.0020067915,-4.2937794e-05,9.7018914e-05,0.005433811}},
      {{0.00040523743,0.0004751576,0.0017433615,-0.0014488366,0.004225652,-0.00023771652,-0.0044218292,0.0031314672,-0.0067627486,-0.0006644045,-0.0014178683,0.0039754766,0.0019087319,-0.0046691373,-0.002797201,0.0044405414,0.0015812791,-0.0013051231,-0.0031408644,0.0040644975,0.0037282465,0.0051869825,-0.0032351322,-0.0015968747,0.0046582455,0.001530613,-0.0044146357,-0.00031686656,-0.01859672,-0.001421598,0.0028352086,0.0025705427,0.00064428995,0.016593555,0.0077800066,-0.0016905611,0.0017642045,-0.00033834923,0.0011402221,-0.005870374,-0.000835861,-0.007430833,-0.019391507,-0.0077498397,-0.0005399751,-0.021981124,-0.0018028421,-0.0050342344,0.00020201737,-0.0020698868}},
      {{-0.0067721866,0.0030345202,0.0003023634,-0.0054099704,-0.0027209686,-0.005877024,-0.0010834907,0.0090022925,-0.0064442363,0.007217003,-0.0037683274,-0.00015846813,-0.00337784,-0.0029413993,0.0053173876,0.006043065,-0.0032042684,-0.0002184856,-0.0029861564,0.002689337,-0.0034879628,0.006048647,0.0013015063,-0.0024910772,-0.0067467554,0.004341835,0.0045764023,0.0053572105,-0.0222479,0.0030901474,0.0028569933,0.0013016821,0.002088056,0.008025173,-0.0011053304,0.0043471386,0.0018130712,-0.0005474131,-0.0013781743,-0.0025246958,-0.0010520131,-0.007646532,-0.017892776,-0.012092996,0.006437747,-0.013561559,-0.004025607,-0.00279142,-0.004488105,-0.0011529785}},
      {{-0.00095030456,-0.0018618425,-0.0047302227,-0.004113017,0.004011061,0.0038325372,0.0014159351,0.006968299,-0.008850066,0.00076286844,0.0034308443,-0.0026154472,-0.010088133,0.006635543,0.0033964084,-0.0034121075,0.0038247001,-0.00014397313,-0.0062225913,-0.0037631316,-0.005476164,0.016375264,0.0006235723,0.00267674,-0.01733741,0.001725037,-0.003964481,-0.0011511313,-0.016531236,-0.0041920287,0.010300621,0.0048550833,0.0032893692,0.026178667,-1.7771763e-05,-0.004548977,3.5119552e-05,-0.001132571,0.0014945158,0.0015349175,0.0021648176,-0.006339635,-0.020612761,-0.010123288,0.0070119803,-0.009807256,0.0072340528,0.011239089,-0.003659163,0.0025114594}},
      {{0.005122735,0.003744448,0.0076281806,0.0018006932,0.0043643164,0.0058757807,0.009786072,0.000103981496,-0.0065346947,0.0058571785,0.0014663084,0.0044855755,-0.014434195,0.003734113,0.0001351133,0.0009694399,0.00031234813,-0.0013956019,-0.0039862394,-0.0056848945,-0.00048756297,0.0139281,-0.00089994574,0.0023640986,-0.017222758,-0.00106306,-0.0041992543,-0.0022666566,-0.024637984,-0.0065694707,0.008476802,0.011115551,0.0020089934,0.015373352,0.0014320042,-0.0061308844,0.0013401782,0.00074025645,0.00123184,0.0073057227,-0.0066418773,-0.014537264,-0.029731516,-0.00811772,0.0037773233,-0.010933457,0.01549339,0.007105575,0.00024729027,0.0076097967}},
      {{0.00030664093,-0.0015171607,0.0036222977,-0.0063815145,0.0008720966,-0.0035358137,-0.0009405501,-0.0012914513,-0.014674283,0.0030338843,0.0010616428,0.0011209665,-0.0025073402,-0.0047790143,-0.002593682,-0.001803153,-0.0004559354,-0.0052334582,0.0011388666,0.0018114535,-0.0011734455,0.014120498,-0.0006956921,-0.0043646526,-0.01524015,-0.0026716066,0.0015694462,-0.0021931198,-0.01866599,0.0028941042,-0.00443355,-0.007431801,-0.00096526736,0.010993317,0.0012905118,5.6652203e-05,0.0016466326,0.003584115,-0.0029201587,-0.0053272056,0.0018405678,-0.013562274,-0.01609608,0.004157408,0.0010714243,-0.018978959,-0.0039201267,-0.0073747803,-0.0010409041,-0.00042568348}},
      {{0.003989289,0.001631035,0.0010645445,-0.012538714,0.006825772,0.007628772,0.00015635042,0.0033618053,-0.016885025,0.0015430475,0.0013479381,-0.0054323617,-0.007603525,0.0030933581,0.0027777834,-0.0010922021,0.003706237,-0.00082762545,0.0021168008,0.0050498475,-0.0030751785,0.013898865,0.0033985586,0.0013041475,-0.016005537,0.00077794277,-0.0049331323,-0.0031167178,-0.018486375,-0.0017717,-0.0019994136,-0.008279813,0.0047476944,0.009211249,-0.00037481837,-0.0033304896,0.0033288368,0.00093057606,0.0047313995,-0.0015453374,-0.0051043644,-0.009353266,-0.010437253,0.01628443,0.0032925068,-0.016531156,0.007153198,0.004874525,-0.0031589118,-0.0033759854}},
      {{0.00070078095,0.0014828634,-0.002693304,-0.008493274,0.0011164764,0.001432874,-0.005913358,-0.003778141,-0.013647305,-0.0005228426,0.002214495,0.00027771422,-0.00013682854,0.0042969957,-0.0019996916,0.0045117093,0.004021531,-0.004215573,0.004207575,-0.0028900937,0.0006289646,0.010305606,-0.0016533636,0.0018295294,-0.0142415995,0.0038573206,-0.00013083773,-0.002400596,-0.01760986,-0.0018345665,0.002390185,0.0011139069,0.0091486415,0.01420372,-0.0055915783,0.003822289,0.00036920904,0.004285178,0.00018474257,0.004057481,0.00018491372,-0.003910398,-0.022557877,-0.0010752415,0.0016717667,-0.013195583,0.0017939336,0.001088223,0.0012095761,-0.0025525377}},
      {{-0.005437318,0.012151432,-0.0061686975,0.012341897,-0.0020834862,0.0059632207,-0.0049151415,-0.01016245,-0.009845684,0.0050809043,0.003494322,-0.0011164043,-0.00020530346,0.0074568633,-0.0018112379,-0.003152443,-0.0020038192,-0.008428717,0.0009287674,0.002451312,0.0005207629,0.013656091,-0.0065681147,-0.002048803,-0.0068613794,0.0020157574,0.008624079,0.0026343635,-0.023449698,0.0049436516,-0.00270858,0.0017417003,0.0063790195,0.0052453815,-0.009260204,0.0033699253,0.0041605495,0.005515214,0.002503294,0.007476187,0.004156967,-0.010551204,-0.031637013,0.009340596,0.0022638515,-0.0129552595,2.8952396e-05,0.0031457583,-0.0007561507,-0.008003112}},
      {{0.0025361367,-0.0001235731,-0.00050761184,-0.00934446,-0.0029235715,0.00013158136,0.0047002463,-0.00053412764,-0.011453655,0.0022542088,0.0027957303,-0.0015035726,0.007565698,0.0031160128,0.0039512203,0.00419142,-4.028779e-05,0.00053246546,0.005785041,0.00094062235,-0.0029968207,0.014137247,0.00092400337,0.0039961184,-0.008661072,-0.0033092047,-0.0018170548,0.0009779731,-0.015866838,0.0010696894,0.001562078,-0.0008054474,0.0068404805,0.020606384,-0.005058279,0.00020129704,-0.00035886766,0.0038028378,-0.0027551833,0.0025203526,0.0006328652,-0.006835056,-0.008424058,0.01008967,-0.0019535339,-0.018850105,0.0012361853,0.0013558931,-0.0027958027,-0.0007597417}},
      {{0.0066501196,0.0039785355,-0.005973526,-0.018039783,-0.011644793,0.0045717442,0.0014273867,0.011681796,-0.009636473,0.00731627,0.003682029,0.00033534682,0.0028471346,0.004723629,-0.005696598,-0.0063703055,0.002470189,0.0014929905,0.0038763986,0.0031319074,0.0029025618,0.009489982,0.008476278,0.001975425,-0.019025387,0.0025491188,0.008988909,-0.00046848992,-0.019655706,-0.00037574742,0.010076522,-0.0046525705,0.012148031,0.018210808,-0.003499815,-0.0031506384,-0.007867267,0.0019046111,0.0022406287,0.002580928,-0.0075159026,-0.0140742315,-0.0063819736,0.014247368,0.0011217049,-0.012202781,-0.0031468496,0.0047992696,0.0027391587,-0.006812056}},
      {{-0.0030432062,-0.0002619875,-0.004471597,-0.009297223,0.002640954,-0.0015852503,-0.0039531924,0.0043419553,-0.011947262,-0.0005302665,0.0018799905,-0.00067674636,0.017713314,0.0014597961,0.0019724332,-0.005742359,0.0011465085,0.001972274,-0.0017043452,-0.0019379252,-0.00041284403,-0.007951285,-0.0013866429,-0.003394011,-0.0031395517,-0.00024762444,0.0002743595,0.00061382755,-0.008448243,-0.003187084,0.0067578447,0.0060201865,-0.0015163994,0.008520555,-0.003386098,-6.8579735e-05,-0.0021754163,0.0003053605,0.00035707615,0.0013390812,0.0017930942,-0.016607177,-0.0030939893,-0.0038558037,0.0004385167,-0.016144726,-0.00017022357,0.0062427754,0.0017373023,-0.0003382319}},
      {{-0.0033256,-0.0051042726,0.0046610944,-0.015221292,-0.0025238672,0.005573653,-0.0021314167,0.0099947965,-6.0256327e-05,0.00047712174,-0.0019269829,-0.0011062904,0.018655807,-0.0023066164,0.0050015887,-0.0011110828,-0.006854117,0.007643229,0.005157113,0.00031939583,0.0050177225,-0.011953613,-0.0006244095,0.0012328705,-0.0014627816,-0.0051096315,-0.0028921433,-0.0037770362,-0.017735362,0.0007972445,0.010984018,-0.0015390043,0.00057091314,-2.7290907e-05,-0.0020226352,0.009504916,0.0061357096,0.0016055811,-0.004599729,-0.0011626278,0.003061153,0.00081942923,-0.0069682994,-0.011769773,0.0007437741,-0.01475161,-0.0003956995,0.0052870363,0.00030186184,0.0035002984}},
      {{0.0033586733,-0.0012511887,0.0012793663,-0.006235671,0.00361542,-0.0029029613,-0.0063947905,0.004596993,-0.0047422084,-0.0010450744,-0.004461358,-0.0007451841,0.015988786,0.00041166088,-0.0040034233,-0.011204826,-0.0010699154,-0.0007394018,0.0016711237,-0.00018741131,0.0007506665,-0.008933342,-0.0036188627,-0.0052310023,0.0034434337,0.0038940886,7.057785e-05,-0.0005649333,-0.014699758,-0.0010687092,0.011094035,0.0125560155,-0.008442129,-0.0061777816,0.002054686,-0.0035726894,3.793309e-05,0.002432737,-0.0029735642,-0.0015008027,0.0019065902,-0.005891241,-0.014747896,-0.0038015635,0.0013388603,-0.016102523,-0.0029399868,-0.0014387643,0.0028305526,-0.0019386766}},
      {{3.118497e-05,-0.002557857,0.0007520233,-0.012724186,-0.008352252,0.00457449,0.003116111,0.0062219263,0.024330508,-0.0052091125,0.0036241568,0.007381404,0.011237063,-0.0006695397,-0.0006969667,-0.013886157,-0.001453247,0.006585311,0.004113114,0.0050145457,0.0063026785,-0.012763688,0.00051973364,0.005321707,-0.002305558,0.0022827813,0.009112589,-0.0049362318,-0.023460614,-0.0005163225,0.019344486,0.006861228,-0.0041594347,-0.008012837,0.0034402304,-0.0014121772,0.0020207558,0.0012168114,-0.0012273542,-0.0031823718,-0.0015049487,-0.003165103,-0.028603394,-0.0008898239,-0.009471041,-0.008559368,0.0063481964,-0.007900133,-0.0030029556,-0.00174025}},
      {{0.00095824985,0.0006605989,-0.002347403,-0.009240071,-0.0059871613,0.004155396,0.003524338,0.008432839,0.008237196,0.0031314562,0.007041119,0.003411656,0.014078674,-0.0021147747,0.0032272337,-0.005062394,-0.0012515028,0.0016406559,-0.002195872,0.0012496968,-0.00094079535,-0.0075769518,0.006659477,0.005174191,-0.0018621725,-0.0040587834,0.010423556,0.0019018505,-0.015021562,-0.00064261345,0.010783506,0.012721698,-0.00024234952,0.00070454844,0.0014600254,0.0015661733,-0.0047941073,0.0009363833,0.00058390416,-0.0011910346,-7.00958e-05,-0.0048708064,-0.014376124,0.004281544,-0.0042298236,-0.020381717,0.007121932,0.0010263857,0.0056892275,0.0014608406}},
      {{-0.0002756273,0.002426502,-0.0006293069,0.0017207877,-0.006540062,0.007295014,0.013425621,0.0059841573,0.01054831,-0.009006702,0.0033540465,0.0031149732,0.017181307,0.0015675172,-0.0072855325,0.0014746109,-0.0044901143,0.0055977777,-0.002339078,-0.0009189272,0.009088984,-0.01181266,0.0050225994,0.0020992851,-0.0057914597,0.004509989,0.002758432,-0.003296142,-0.020580627,-0.0006675092,0.0026296147,0.009192806,-0.0028991248,-0.007958303,0.00793465,0.0032047478,0.0037127114,0.005164544,-0.002268012,-0.0031052197,0.0008932264,0.0065065897,-0.019728122,-0.0016792547,0.0038700309,-0.015846256,-0.0055549555,-0.0052357847,0.0013643025,0.0044071865}},
      {{-0.004153546,-5.1350296e-05,0.0045142993,0.0069691776,-0.006852021,-0.0076408028,0.00012846281,-0.01489875,0.017576702,0.00055896357,-0.0058213347,0.002458292,0.020567853,-0.002601347,-0.00464171,-0.0064293835,-0.001802914,-0.0044808667,0.0054040817,0.002003995,5.4000564e-05,-0.012642649,-0.0016449111,0.000394401,0.004299716,0.00085579307,-0.0035159106,0.001132968,-0.023642128,0.007358794,-0.0016210278,0.010730582,0.0029257243,0.00052490766,0.004691998,0.0033828923,0.0009268643,0.0028186569,-0.0032686733,0.0059093866,-0.003841133,-0.0043965997,-0.02813289,-0.00010384391,-0.008050472,-0.019643137,-0.001408683,-0.013428388,0.0002796293,-0.0023657305}},
      {{0.0019445077,0.0011988607,0.0017981817,-0.0042944024,0.00052114757,0.0027111515,0.0013907049,0.0112159895,0.024497414,0.0043929135,-0.0011738656,0.0028700086,0.023915606,0.001017002,0.0040467368,-0.0014102765,0.00036753024,-0.0013340916,0.01181131,0.0023773157,-0.0035050956,-0.022281062,0.000369693,0.00307971,-0.016547365,-0.0027192447,-0.00699977,0.0061662593,-0.021367114,0.0047841426,0.008702042,0.004266959,0.017126054,-0.009684107,0.0066454355,0.00074822136,-0.002134288,0.0019210152,-0.0008642375,0.0043218704,0.0025916896,-0.0033555613,-0.012085734,-0.004107932,4.68061e-05,-0.012345741,0.0028288085,-0.0039324597,-0.00553707,-0.0056533744}},
      {{0.0033777303,0.0003968662,0.0029059546,-0.007838014,-0.0036003925,0.002978129,0.0009515581,0.0027148586,0.010794496,0.0010173911,-0.0025040542,0.00029123062,0.026265914,0.0012822733,-0.0013620289,-0.0011831844,0.0026322915,-0.0021810564,-0.005874078,-0.0011706785,-0.0018281409,-0.007775807,0.002954864,0.00036502723,-0.008133431,-0.00034927326,0.0018923025,0.0017223929,-0.016039563,0.0033864195,3.8147366e-05,0.004588576,0.0047247172,0.005354517,0.0070299353,-0.002846541,-0.0017897206,0.0013916796,0.00066209096,-0.0025311287,-0.0033904081,-0.011742805,-0.006340391,0.009460788,0.0011712731,-0.018937336,0.0026616862,-0.0055095414,-0.0006990202,0.0014124847}},
      {{0.00171021,0.0034441252,0.00031506285,-0.00026510816,0.0013547583,0.0037825448,0.0051001864,0.0056969873,0.011166902,0.0016642112,-0.0008496082,0.002146139,0.0134173455,0.00066197757,0.0041336045,-0.012298708,0.0037513303,-0.006057683,0.0003964826,-0.0036426059,-0.007465924,-0.013691142,-0.0033319278,0.002041155,-0.0064248047,0.010517275,-0.011217482,3.9976272e-05,-0.019919584,-0.0015971077,0.020191656,0.009683552,0.011491994,0.0026641695,0.00347765,0.0054914285,0.0004661055,0.0014614104,-0.006359216,-0.002118919,0.00191259,-0.00067445595,-0.017381068,0.0032337992,-0.004102727,-0.011535568,-0.0003140322,-0.0006049732,-0.0010811539,0.0003794262}},
      {{0.00054576463,0.0018970091,-0.004699241,-0.0045844913,0.0059782253,0.0016434541,-0.00010275116,0.0043160194,0.01000076,0.0032626889,0.0031706083,-0.0014177246,0.03289943,-0.0018634076,0.0030036364,-0.0041700923,0.00092712295,-0.0051946742,-0.010631482,-0.006123073,-0.004361366,-0.003132067,0.0008407499,-0.00045223875,0.0007375775,0.0012019546,-0.00426897,0.0020751855,-0.014866771,-0.0053647077,0.013315797,0.007209882,-0.0036385043,-0.0038249758,0.0049408968,-0.0027646744,-0.0013323274,0.0049060006,0.0015898679,0.00026904652,0.0007650079,-0.006144072,-0.00761804,0.0095959725,0.0072529423,-0.02130545,0.0069643664,0.0036060808,-0.0038517646,0.0049847825}},
      {{0.00011997836,-7.4908854e-07,-0.0036371711,-0.0004911911,0.0009568666,0.002440213,-0.0026596228,-0.0038255923,0.010363865,-0.0029427258,0.0075758933,-0.003358026,0.034318205,0.00017568294,0.0048761084,-0.0015302562,0.0011160958,0.0011704946,-0.0015782503,-0.00296168,0.0018843077,-0.0053849476,-0.004292717,0.0026035586,0.005406741,-0.0028346614,-0.0006170156,0.00121035,-0.019230902,-0.0013308249,0.005502884,0.0048439177,-0.0027981915,-0.004715151,0.0017961435,-0.0009376844,-0.0032780932,0.003949056,0.0010935265,0.005132917,0.0020076903,-0.0017279632,-0.0129734,0.014479012,0.0055565075,-0.0180711,0.011380117,-0.00475829,0.0011158765,0.008463251}},
      {{-0.00070989894,0.0054010577,0.004219188,-0.0047546797,-0.0009324629,-0.0032905214,-0.00033462464,-0.0027784032,0.0070575383,-0.001578489,0.002799623,-0.0016247103,0.032235824,-0.0022163677,0.0006084173,0.009015735,-7.906612e-05,-0.004438726,0.0039151525,-0.0013975992,0.0037907243,-0.011860145,0.002822273,-2.6183492e-05,0.0029908705,0.00010937359,0.0045031616,-0.0033737877,-0.016033303,-0.0011376874,0.0015248435,0.0015983614,-0.00038924537,-0.0048466213,-0.00070725457,0.0010138429,-0.0006172211,0.0023998092,0.002461409,-0.0019278594,0.0016478631,-0.0049882326,-0.017849164,0.010562574,0.0029028964,-0.013053225,0.0029641944,-0.0003901114,-0.0027040292,-0.004397427}},
      {{0.0028037322,-0.007452523,0.0023897365,0.00990688,-0.0029213545,-0.0034569437,-0.0018432424,-0.010733341,0.010647032,0.004347027,-0.00083639275,-0.0043160412,0.020252734,-0.0057726633,-0.006448103,0.0025947776,-0.0031277277,-0.0032464652,0.0130401775,0.0036340267,0.0036538201,-0.015897619,0.0015742263,0.009660985,-0.006524328,-0.007441199,-0.003112047,-0.0027245756,-0.02016911,0.004191875,0.017742904,-0.010093091,-0.005308767,-0.0027556645,-0.0066396333,-0.005308415,-0.0016145735,0.0012872858,-0.003078533,0.0028540986,0.0026935677,-0.0024483039,-0.027837407,0.010118001,-0.0022274293,-0.0027073189,0.0036444266,0.0007462354,-0.003949357,0.00014685366}},
      {{0.004256449,-0.00092631264,-4.6458117e-06,-0.01031897,-0.0020173877,0.004514782,-0.0033236707,0.008566957,0.019532803,0.0015501737,-0.003521267,0.0030053793,0.028565785,0.0004730777,0.0011716954,0.008844435,0.0012911705,-0.0015477526,-0.001287178,-0.0028277857,0.0018945658,-0.019992817,-0.0005764414,-0.00080852234,-0.01645002,0.0015619464,0.0038425375,-0.0004505011,-0.014879324,-0.0054615536,-0.0014455669,-0.004945691,-0.009831659,0.0074946187,0.0010277287,-0.002220121,0.00018319962,-6.135675e-05,-0.00093234476,-0.0024494147,-0.0037362825,-0.0047013704,-0.011796836,0.009080457,0.00047238564,-0.006480911,0.0049112365,-0.0029190637,-0.0013309644,-0.0023847183}},
      {{0.00043009626,0.0008137306,0.0027085224,-0.002671085,-0.0061471313,0.0074996096,0.007378629,0.010175423,0.022380082,-0.0012254679,3.1500906e-05,0.01020778,0.0326329,0.0037164972,0.0027271563,-0.0046534333,0.003117889,0.003013679,-0.02059387,-0.00091766706,0.00063760503,-0.024958162,0.001868677,-0.00309379,-0.003708242,0.007739603,0.0048252344,0.0016770376,-0.016602993,-0.0017982281,-0.003708739,-0.016718876,-0.013871995,0.011090018,0.012129321,-0.009692713,0.0030283402,-0.005430552,0.0016969035,-0.013661732,-0.0035821819,0.015566878,-0.026910456,0.008752949,0.0011796189,-0.0049624178,0.010862055,0.00069697533,-0.002268855,0.0010585609}},
      {{-0.0032811451,-0.0006275826,0.0010637856,0.0014134243,0.0025529098,-0.0010677179,-0.001036497,0.00664265,-0.0005181459,-0.0006991362,0.0027305172,-0.00014617691,-0.0025134136,-0.0010770613,0.00042469127,0.0025279315,-0.0015966286,0.0024649845,0.0027903654,-0.0027280217,0.002551107,-0.028241877,0.0004199112,-0.0003900204,-0.004426695,0.00022127459,0.0012984978,0.0020125725,-0.026578862,-0.0033450425,-0.0009820784,-0.0011471687,-0.0005967002,-0.010412019,-0.0048999884,0.0011326306,-0.0017605121,0.0045323656,0.00092812686,0.0034802204,-0.00011846469,-0.020556303,-0.0212698,0.013966878,0.00088458415,-0.010525303,-0.00045756437,0.008930826,0.0027961435,-0.0010989512}},
      {{-0.0010487895,-0.0027360397,-0.0021867508,0.0049391626,0.002543431,0.0012709645,-0.0033792919,0.0060310047,0.005487198,0.0042817113,0.0065641096,-0.0061968104,0.0044484376,-0.0021317662,-0.0064960998,0.0062317704,-0.0059871166,0.013209044,-0.0033761456,-0.002635208,0.00059244473,-0.03600233,-0.0020925337,0.0018279152,0.0091267275,0.005939717,0.00015644231,-0.0052840533,-0.031664785,0.0054063527,-0.02169341,-0.010545148,0.00042518435,-0.017598845,0.003619732,0.0027439867,-0.0057302173,0.0016861234,-0.0038495879,-0.0019721014,-0.0014785178,-0.007236412,-0.047398012,0.014450226,-0.0045130267,-0.007195377,0.007611772,0.00560264,0.001951622,0.0054959664}},
      {{-0.002354882,-0.001221186,-0.0024108833,-0.0014651155,0.0067875986,0.0031272606,0.0004734453,0.0058317245,-0.005847744,0.0013048043,0.0031983852,-0.004007656,0.015118791,-0.0013962598,0.0030859692,0.007499172,0.003654693,0.008468913,-0.0029664035,0.0007443557,-0.003844972,-0.026192328,-0.0044781975,0.0040336936,-0.01030047,-0.00020850997,-0.002177472,-0.00093163096,-0.024224032,-0.0015660288,-0.0068188086,-0.019779706,-0.0070722895,-0.03278669,-0.0008114919,0.0044418606,0.000733487,0.006084275,3.753011e-05,0.0033708015,-0.004118695,-0.0019129482,-0.025185404,0.020277806,0.0011521378,-0.006116276,0.0027572922,0.017974634,-0.0013001286,0.0008787611}},
      {{-0.00453828,-0.00047981035,-0.007486934,-0.012448619,-0.001520917,0.006689618,-0.000661032,-0.000678928,-0.022846399,-0.00083526096,0.0025526662,-0.0018205413,0.021377664,-0.004674182,-0.0031418758,0.012037109,0.0016938559,0.0014677634,0.0041455617,-0.0041075656,-0.005114883,-0.035531253,-0.0003269829,0.0024457343,-0.021955159,-0.00046106704,0.0013191536,-0.007353238,-0.026024869,-0.00058328884,-0.01448105,-0.024786051,-8.738259e-05,-0.05945336,-0.0036933767,0.00708286,-0.0005760203,0.008698667,-0.00031215325,-0.00026320643,-0.0037390778,-0.00383353,-0.022017544,0.014637124,0.0029921446,-0.00082121853,0.00022997026,0.008149833,0.005005097,-0.003097596}},
      {{-0.0019505232,-0.0017113584,-0.001278761,-0.0025341755,0.005472438,-0.00091548,-0.0043868823,0.002951401,0.01663768,0.003210042,-0.0025887992,-0.0012843261,-0.0059425826,0.0025301373,-0.004198325,0.005585967,-0.004978069,0.0008405008,-0.0015725563,0.0022964394,-0.0010491512,-0.029936535,-0.0001401506,-0.0034775876,-0.010065078,-0.0024898308,-0.006209473,0.001294042,-0.032154195,0.0036159665,-0.0102274455,-0.010457071,0.009145655,-0.026475761,-0.004239507,0.0027969133,0.0024200077,0.008217103,0.006184575,-0.0011179224,-0.0030097733,-0.0050398204,-0.03619144,0.009791516,0.00074454234,0.0020264338,-0.0070121773,0.0015989835,0.0031999184,0.0016042455}},
      {{0.004086584,0.0029787973,0.0015451253,0.013053011,0.0042204787,0.0042557437,-0.0015166331,0.0054959334,0.002879291,0.002958913,-0.00504923,0.003092439,0.0156054655,0.006249274,-0.0034418802,0.011856882,0.00053664146,0.004069484,-0.00323492,0.0029343455,0.003500162,-0.03569347,-0.001800395,0.0017240002,-0.009996592,-0.0037662047,-0.016633224,0.003773452,-0.032145895,-0.0007526624,-0.0182752,-0.025436286,0.0005502174,-0.048947286,-0.00021405685,-0.0013576192,6.8047143e-06,0.010868025,-0.0016440566,0.00032712033,-0.0060130754,-0.0028247314,-0.03866405,0.004310047,0.0019039338,0.0005660602,0.0007010747,0.013354488,-0.0016983678,0.0018826055}},
      {{0.0019697116,0.00014578544,0.0017414319,0.008422194,0.0020584022,0.0010476599,0.0028664155,-0.006179968,0.020944009,-0.0011610353,-0.0042434065,0.0019488976,0.0023954927,-0.0006784524,-0.0030145526,0.010403681,-0.001180717,0.0034260135,0.00412283,0.00032926124,0.0017286735,-0.031711556,0.0041666175,-0.0012040206,-0.010500865,0.0018616616,-0.0049540955,0.0017612164,-0.03162675,-0.0034258862,-0.027448768,-0.009187008,-0.0060438104,-0.018298496,-0.001210005,-1.2660047e-05,-0.00162538,0.0059730955,-0.0017227634,0.0014255211,0.00151264,-0.0029020873,-0.039675165,0.016116973,-0.0004271026,-0.0016837937,-0.003184595,0.0010229351,0.004187689,0.0052452506}},
      {{0.008912266,-0.0078000617,0.006462285,0.008390373,0.0009794697,0.0028416144,0.010614619,-0.0071271965,0.026181772,0.0030722627,-0.0048933253,-0.0008926208,-0.008659484,-0.0055920784,-0.0023122826,0.0017183359,0.00012660488,-0.007200327,-0.00085370266,0.0030485948,-0.0056194747,-0.02809967,-0.0024232825,0.005601135,-0.0022999705,0.0011241102,-0.007965702,-2.5414502e-05,-0.025011074,0.0021320863,-0.026117574,0.0055773812,-0.01119583,-0.00042811348,-0.0030974557,-0.0050436035,-0.006697263,-9.511167e-05,-0.0005293446,0.014734014,-0.00033834812,-0.0086748125,-0.032652885,0.0151320575,0.0032628234,-0.00036725003,0.005895197,0.014677362,-0.0014559131,0.017835421}},
      {{-0.0009382567,0.0012489076,-0.006875568,-0.0021781,0.008962988,0.002772149,-0.005547095,-0.00022826808,0.011806871,-0.0011336528,-0.0004150851,-0.0054542804,-0.01161278,0.0047512976,0.0010153255,-0.0067525078,0.003822411,-0.005196906,-0.008604702,-0.0034272664,-0.008779173,-0.018404588,-0.000887468,-0.000863154,-9.148816e-05,0.0039741527,-0.0040874532,-0.0017445666,-0.019618591,-0.008111472,0.0051403954,-0.0010608162,0.004045654,0.013041919,-0.005711826,-0.0032704468,0.0014824109,0.037391525,0.0007464388,-0.003786241,0.0016844159,-0.0019729878,0.018221507,0.009343421,0.004510285,0.014228097,0.00031281658,0.0036017431,-0.00393794,-0.00162146}},
      {{-0.00039700992,0.009929443,-0.010557937,0.015383673,0.00935468,0.0041017234,-0.010545495,-0.011811365,-0.00092126353,-0.004299084,0.00048799007,-0.003835086,-0.0047265016,-0.0017494541,-0.0026769422,0.009961815,0.00045003224,-0.002342042,-0.00036597697,-0.0031656174,-0.0015515,-0.021558417,-0.0033371653,-0.004338475,0.014679495,0.0071586277,-0.0054838443,-0.0012789724,-0.02090558,-0.003335451,-0.00046252902,-0.007688711,0.006952189,0.008191299,-0.001204969,-0.006218611,0.01133887,0.039098453,0.004631409,-0.002736205,0.0035030288,-0.0033118112,0.0055971122,-0.0057794587,0.008613224,0.027542338,0.0072722267,0.010144485,-0.005597029,-0.0010362297}},
      {{-0.0042206477,-0.00047347427,-0.0038874205,0.016756387,0.0032128457,-0.0012514825,0.0002469562,-0.016580993,-0.0021955068,-0.0034334178,-0.0017535231,0.0016736321,0.008807431,0.007901934,-0.0046024867,0.00029668293,-0.0021553475,-0.0016135155,-0.0064834235,-0.0005091082,-0.0048034284,-0.020935763,-0.005156459,-0.003440867,0.012326241,-0.0018735862,-0.0009850811,-0.0021622747,-0.032172088,-0.0017281226,-0.01647628,-0.0042737303,0.013647392,0.010939076,-0.009600451,-0.0023406995,0.0028397737,0.03743658,-0.0024435832,0.002201941,-0.00034849741,-0.006936334,-0.009815599,0.0068449336,0.00061089726,0.011010943,-0.0020451036,0.0021508492,-0.0057641617,-0.000118703916}},
      {{0.010594944,-0.007659544,-0.0051044472,0.0062003434,0.0031270871,0.0027079585,-0.0007938905,0.0057750135,-0.004687283,-0.0012053074,-0.0010504854,-0.0063519464,0.004300001,0.0034041377,-0.003072288,0.0056915884,0.004690638,0.00052568526,-0.006532065,-0.005805804,-0.007281227,-0.023315089,-0.00056083227,-0.003340012,0.009169245,-0.00042929949,-0.0045184917,0.0046150056,-0.02527451,-0.0011748684,0.0041650888,-0.0075978595,0.01666744,0.008457256,-0.0041477517,-0.010530327,0.0015993159,0.036679447,-3.862338e-06,-0.0008674129,0.0005784795,0.0026909485,0.0036169745,0.008143633,0.0046128747,0.01282552,-0.001336043,0.0020573372,-0.011418661,-0.0032709627}},
      {{0.00011892106,-0.00039723964,-0.004229593,-0.008387583,0.006146592,-0.0037542146,-0.0039652027,-0.00020507626,-0.0027082597,-0.00010652767,-0.0018293356,-0.0017778235,-0.010896824,-0.00023836689,-0.0017902189,-0.00461,0.003396842,0.0008017921,-0.011196568,-0.0038902108,-0.0007789783,-0.019525789,0.0047060903,-0.0059032287,-0.010740276,0.0013470998,0.0057633943,-0.00034611972,-0.019299202,0.00046286738,-0.0053439885,-0.0037836921,0.003351882,0.013901702,-0.0035633603,0.00025393086,-0.0012613776,0.034938443,-0.00030625632,-0.0019131352,-0.00022031108,0.009562098,0.010461174,0.0022161335,-0.0035326176,0.01581787,-0.0018262317,-0.00049086474,0.0012561065,0.00012313129}},
      {{0.003289175,-0.002754178,0.0050609424,-0.009460689,0.0030083067,-0.008826898,0.004611655,0.0061258688,0.008466364,0.0028807845,-0.0010129953,-0.0021863726,-0.0006205037,-0.005991895,0.005152641,-0.0055688345,0.0070695924,0.004910669,-0.002812106,0.0069326693,0.0016699658,-0.025462573,-0.0038329451,0.0036218127,-0.0072730877,-0.0041897222,-0.005238738,-0.0019712164,-0.014660195,0.0010976314,-0.004670715,0.0047075185,0.002426618,0.011073735,-0.0016585089,-0.0004421511,-0.0019050252,0.02994558,0.00018817029,-0.002087409,0.0011119504,0.01667772,0.016811067,-0.00089709304,0.00853251,0.021948947,-0.0008339367,0.001393704,-0.002007848,0.005032732}},
      {{0.00023371605,0.00026774284,-0.0039540967,-0.0051617827,0.0039810347,0.0021288316,-0.0010290802,0.00458355,0.0010149581,0.0018825657,-0.0011100391,0.0009873447,0.009934654,-0.0016322129,-0.00021484816,-0.003722868,-0.0007234364,0.005228921,-0.004740683,0.0035935414,0.0019006573,-0.014095043,-0.0011864152,-0.0058006723,0.004618692,0.00041161262,0.0057768216,-0.00085784757,-0.015487213,0.0012247539,-0.025753124,0.0044293622,-0.0031874862,0.023647565,-0.0039941403,-0.0006360916,-0.000492386,0.033912685,-0.00539846,0.00038556315,0.0001498281,0.015589258,0.013464666,0.004080312,0.00047230718,0.014260731,-0.0035072358,-0.0008522922,0.00061269134,0.003642556}},
      {{-0.0016414879,-0.0029755868,0.00600952,0.0027485928,0.0010492144,-0.0051368037,0.0030131445,-0.0048682867,-0.0071762106,-0.0022386052,-0.0005037925,-0.0021825458,0.008059572,0.0020887288,-0.0060461713,-0.003963558,0.002024254,-0.0060687596,-0.0037966804,0.0068951664,-0.0061222063,-0.022970064,-0.004986432,-0.0016393792,0.0010982439,0.002095591,1.5218446e-05,0.003875632,-0.017579613,-0.003634717,-0.007482215,0.0042695715,0.009093493,0.0067863036,0.0015897964,0.0044100825,-0.0029501028,0.03376877,0.006404442,-0.008186287,-0.0033005958,0.016418554,0.016013559,-0.0012836348,-0.0043376344,0.019300397,0.007003214,0.0036552981,-0.005274692,0.0071312464}},
      {{-0.0014484839,0.0033863718,0.0022936212,-0.0070120823,-0.00016532766,-0.0030812817,-0.00082710193,0.0061398875,0.013689116,0.0018184043,-0.004703627,0.003143999,-0.019055925,0.0012488633,-0.0035468403,0.0023184759,-0.00024263257,-0.0028463409,0.0059753004,-0.001640382,0.00032239445,-0.008326289,0.00043293083,-0.001610476,0.0037705547,0.004154674,0.0005799484,0.0049667186,-0.020694314,0.001840599,-0.0016671338,0.015480196,0.0026731344,0.027035614,0.004393318,0.0011135533,0.0065051923,0.033557236,-0.00023545716,0.00043338182,0.0013875195,0.010057315,0.013741294,0.0008851757,-0.0031225076,0.016074834,-0.003987862,-0.0018397714,-0.0013204814,-0.010468412}},
      {{-0.00044117076,-0.0022793247,0.0025149316,-0.001044429,-0.0009745203,0.00021296654,0.003131165,0.004336142,0.005228532,-0.0027548915,-0.001164528,-0.00196036,-0.0027725082,-0.0017066698,-0.005278285,0.008277574,-0.00064373197,-0.0074775717,0.01393593,0.001270683,0.00022894258,-0.0142173525,0.0036195882,0.010134459,-0.00036139364,0.0014505407,-0.005074742,0.0019175282,-0.025760457,-0.007852871,-0.015401669,0.014034324,-0.0008599151,0.011983278,0.0025411025,0.002441474,-0.00081484136,0.035512764,0.0037634508,0.0076697255,-0.0015311068,0.0037592112,0.008602795,0.00094188,-0.0028691401,0.02064856,-0.0038699654,-0.0069566322,-0.0040945904,-0.004317065}},
      {{0.0026678364,-0.0021147407,0.0035148512,-0.00021314864,-0.0019428065,0.006161864,0.00048609436,-0.0047939983,-0.0060406704,0.002211045,0.0007828926,-0.00017027918,0.0023523201,-0.0016514569,0.0027045582,0.009718294,0.0011947975,-0.0031080577,0.0116945645,-0.0011076906,-0.00057812774,-0.007772588,0.0015629813,0.005530291,-0.005989011,-0.0030977894,-0.004379605,-0.0027853649,-0.02228014,0.0006984042,-0.012271662,0.006200472,0.009790617,0.015321545,-0.0035856075,0.0059627937,-0.0059060436,0.035602193,0.0016324867,0.009682055,0.00416138,0.01224809,0.009465999,0.0021350444,0.0024838762,0.026189605,0.0024993955,0.0041262587,0.0014184911,0.0022511578}},
      {{0.00063761213,-0.006513308,0.0005613757,0.003960596,-0.0009090703,-0.006257275,0.005641294,-0.00876356,-0.0028237267,-0.001304366,0.000746577,-0.0041232016,0.0028456764,-0.0037620778,0.00403227,0.002491224,0.00024542856,-0.002192709,0.0057035866,0.0029007916,0.004380485,-0.009070523,-0.003174997,0.0058569023,0.003323341,-0.0043066125,-0.0059432224,0.006411634,-0.022068497,0.004900797,-0.023419935,0.009038258,0.016623273,0.018648628,-0.0026494078,0.0011645699,-0.0056681163,0.034149077,-0.0015536841,0.012915037,0.0029558842,0.0060904347,0.0010456406,0.0007840488,0.0047237496,0.021474903,0.009263347,-0.0013019231,0.0017524763,0.01431949}},
      {{0.00016461883,-0.0005127457,0.00024851097,-0.006261825,-0.0022483184,0.008295087,0.003578473,-0.0052293623,0.011653802,0.0018623009,0.0024189148,-0.0015474249,0.0012055128,0.00097264355,0.0024317566,-0.0032856313,-0.0024401892,-0.0051714666,0.0033961216,-0.00032633668,-0.004202139,-0.0017262053,0.0013362599,0.0044810483,0.0033706715,-0.0011086426,-0.0056980844,0.00148456,-0.0065396675,-0.005079321,-0.00871581,0.002776942,-0.0033361097,0.053506635,0.003982846,0.0024504096,-0.0045053014,0.025690375,0.003794219,0.0104342,-3.289829e-05,0.010112737,0.035335284,0.010227123,-7.593968e-05,0.025493944,0.009726203,-0.00011514777,-0.00065225526,0.0019768025}},
      {{0.005029248,0.0018855439,-0.00042412002,0.0045814794,-0.0019507683,0.007075636,-0.0016954236,-0.007895714,0.002500507,0.0036345995,0.0013891927,0.0014730656,-0.0048795408,0.006920299,0.0023294373,0.007709593,-0.005435008,-0.005637299,0.009133343,0.0059240395,0.0037429503,-0.009244519,0.0058001303,0.004662879,-0.007857116,-0.003533436,0.003327836,0.0068114116,-0.017648283,0.0007330895,0.008595059,-0.011772268,0.0008951821,0.025173968,0.00487018,0.000754375,-0.013844122,0.032959163,0.0010851572,0.014834168,-0.0037523953,-0.0063148853,0.026829485,0.006343165,0.002144102,0.031729076,0.009994618,-0.0013679855,0.0008547211,-0.0058012144}},
      {{0.0016028996,-0.002370612,0.0066210143,0.010566921,-0.006463214,-0.0016936248,0.0066768415,0.0028017233,-0.019317385,-0.0017268979,-0.00044997106,0.0056873625,0.0515951,-0.008046286,-0.0012508015,-0.004148941,0.00011248658,0.008103883,0.0060477075,0.0021064668,0.009291733,0.009111128,0.0035447525,0.0021395618,0.0013504077,0.00032735406,0.00071743457,-0.0058383546,-0.008032308,0.0005860754,-0.00953742,0.01654216,-0.0018452867,0.044697948,0.008244628,-5.434814e-05,0.0021237603,0.009281194,-0.0028350696,-0.006494378,-0.0047316593,-0.003059945,0.043513235,0.038397733,-0.006261079,0.06709171,-0.0010476843,-0.0019299167,0.000467373,0.0021494494}},
      {{0.001800461,0.0012626289,0.0061708,0.0028147434,-0.0024442663,-0.005878021,0.008526813,0.002551067,-0.024651019,-0.006913201,-0.0013326019,0.008246284,0.040201314,-0.008265984,0.0003511031,-0.0026071952,-0.0020394633,-0.0012842346,-0.004673447,0.004621641,0.003425334,0.010112303,-0.000105946936,-0.0014017418,0.0015445148,0.005591958,-0.0005791953,-0.00078004296,-0.005275408,0.00067946984,0.012559629,0.008048096,-0.0070700087,0.045306098,0.020806065,-0.011515206,0.008660545,0.007148798,-6.514042e-05,-0.0061749485,0.0010533554,-0.0033952463,0.049357813,0.03900307,-0.0010337326,0.068544805,-0.0037729444,-0.016638089,0.007363177,0.004173352}},
      {{-0.0014993728,-0.00078377314,-0.0021177032,-0.0017915562,0.0060214116,-0.0034825234,0.0027125226,0.0072499625,-0.017672619,0.00026806892,0.00036959292,-0.0032555147,0.010502335,-0.003198507,-0.0008476574,-0.0073617725,0.0024221858,0.008294754,0.003053001,0.0023100066,0.0029388145,0.0071557015,-0.0020504494,-0.0032702016,0.009778541,-0.0027990423,0.0003800112,-0.0024273007,-0.020136792,0.0016994566,0.026963582,-0.01055961,0.016974183,-0.017507987,-0.0010475087,-0.0033330421,0.0023103126,0.03691462,0.0017598307,-0.0020594439,0.0011753113,-0.0063677668,0.025426153,-0.00071471406,-0.001722533,0.030851975,-0.004851344,0.003098566,0.0034423764,0.0006480725}},
      {{0.0044281087,-0.0028672658,0.012116691,0.0067575034,-0.0003366161,-0.0006165113,0.007310109,-0.0030782167,0.0047782753,0.001687251,0.0038924394,0.0036332095,0.010519162,-0.002340304,-0.000594748,-0.0016984404,-0.0003417296,0.004684792,0.008943314,0.00536714,0.0003464379,-0.008793806,-0.003329387,0.00352211,0.0075573744,-0.003875875,-0.0021711737,-0.005786323,-0.022899123,-0.00075739756,-0.004607398,0.0017191431,0.022055563,-0.0065867933,0.0021909988,-0.0023403117,-0.0040875515,0.033295397,-0.000472099,0.0051254528,0.00929538,0.0041632587,0.008995692,0.0023240899,0.0052978178,0.030139197,-0.00395349,0.0020315805,0.00091508165,0.006799783}},
      {{-0.0004990825,0.0026055835,0.0002884813,0.008162202,0.0032433688,0.0024599442,-0.0032972533,0.0026521678,0.003242319,0.0009440023,0.0037812057,-0.0011670466,0.018208351,0.00053231994,0.0027111515,-0.011669928,0.0017056171,0.003617227,0.0050501544,-0.0016413067,0.0012314301,-0.0007157943,-0.00063155877,-0.0009850565,0.012919183,-0.004436221,-0.004956316,-0.004076134,-0.018934267,-0.0017669954,-0.026309505,0.004198739,0.0033385826,-0.008348574,0.001414289,0.00080066425,0.0023009824,0.03820464,-0.0013109501,0.0031905049,0.0005775969,0.009063305,0.015531093,0.0030441047,0.0004243506,0.016128333,-0.007284302,0.0024073021,-0.0010573001,0.0062370826}},
      {{0.00064393505,0.0021140382,0.0030770146,0.007035025,-0.0043621194,0.0048842854,-0.0028233796,0.006238403,0.002973658,-0.0018025227,0.0008684816,0.0033439451,0.01813336,0.0016031509,-0.00122163,-0.00998643,0.0024701254,-0.0021791616,0.002430547,-0.0030705936,0.0048252386,-0.0027216703,-0.0008505893,-0.008574294,0.01035166,-0.0023789683,0.005861133,-0.0026236917,-0.017201843,0.00075868156,-0.02423492,0.0053385743,0.004181146,-0.0004941831,-0.0018864947,0.00035069423,0.005079033,0.0344068,0.0009902538,-0.0008306471,0.00027216767,0.016797017,0.018613022,0.005453464,0.003278371,0.016797313,-0.0013394778,-0.0015855792,0.0022343886,-0.000223718}},
      {{-0.00011499865,-0.0021362237,-0.0027326392,0.0018851075,0.00402806,0.0006219467,0.0016531574,0.0033775836,0.0056981025,-0.0012611838,0.0021910288,-0.0025517547,0.005575276,-0.00054171396,0.001809691,-0.005819449,-0.003785781,0.0024797358,-2.8240807e-05,0.0026171526,-0.002850285,-0.0011055324,-0.0009169699,-0.003307958,0.0051202704,8.888025e-05,-0.0018041217,-0.00073913357,-0.019560032,-0.0015097295,-0.0074054333,-0.00046922814,0.0068628048,-0.0060010394,-0.0029115065,0.005369474,-0.0028123136,0.034387734,0.00044200543,0.0030615143,0.0012827187,0.011863171,0.0183673,-0.0056291027,0.0008164535,0.026037503,0.0005127104,0.0072050258,0.0019986182,0.0034580927}},
      {{-0.0008394549,0.009074204,-0.006869494,0.005029275,-0.0049869255,0.0014116253,0.0027212074,-0.0066210898,0.016006904,-0.0011746755,-0.005735264,-0.001463752,0.017724734,0.00679563,0.0030551085,-0.003251693,0.005478179,-0.0037470316,0.0022322366,0.0014613761,-0.0055360636,-0.0052089123,-0.011748362,-0.001456222,0.005646769,-0.0020012113,0.0075108903,0.0020906061,-0.020195829,-0.0061993976,-0.024498822,0.0008857136,0.00026779232,0.0035264052,-0.0055111665,-0.0020011712,0.0029586279,0.03315226,0.0039587277,-0.0043548685,0.0023910278,0.010355074,0.017462568,0.0019762162,-0.0016195878,0.022449274,0.004078414,-0.00031529888,-0.0052702217,0.0021667995}},
      {{0.001260021,-5.877481e-05,-0.002060578,-0.0019647335,-0.0056813485,0.0028111557,0.002633605,-0.0018400159,0.010242428,-0.00084659515,0.0012665342,0.0023917605,0.010037758,0.0002850009,0.0016499908,0.009454558,0.00018603515,-0.0021382386,-0.0031501492,-0.0020808163,-0.0026816532,-0.010119439,-0.003480558,-0.000551442,0.005962498,0.0022505063,0.0016668036,0.0019935153,-0.02021725,-0.0014048252,-0.0055868877,-0.001063699,0.006844199,-0.006514652,0.004669763,-0.004320319,0.00019376392,0.035800748,0.002403775,-0.00047096066,0.0018325672,0.0044268877,0.014814196,-0.006915003,0.005634309,0.026327733,0.010297696,0.0014303057,-0.003964697,-0.0005694807}},
      {{0.0017333257,-0.0015529242,-0.00038029428,0.0013068786,-0.0092122285,0.0010157849,0.0047555747,0.00260222,0.011076696,-0.001994928,0.00062199915,0.0013884322,0.013571443,-0.0068058255,-0.0026789145,0.0019738986,0.0049620904,-0.0011154196,-0.00048555312,0.008395477,0.007230679,-0.012083041,-0.007065514,0.005202638,0.002072903,0.004364146,0.0052543296,0.0073180003,-0.030561801,0.002038689,0.0047639394,-0.015826546,0.009831993,-0.009147958,-0.0038115995,0.0016279351,0.00015035104,0.035325933,0.00090628426,-0.0033084562,-0.0024093925,0.000646768,0.0030692038,-0.008410472,0.0015415704,0.029022453,-0.0024568015,-0.00324646,0.00439507,-0.0029201643}},
      {{-0.0003930563,0.0014901579,-0.0023359626,-0.001352721,-0.00053357246,0.0018355277,-0.0056445547,0.00781951,0.0016275849,-0.0024783781,0.00036152563,-0.0024249814,0.0032901922,0.0034589234,0.0021905778,-0.011769016,0.001355195,0.008735151,-0.005228478,0.0003489447,0.00282638,0.0013729824,0.00023048633,-0.0032756804,0.013276971,-0.0031815355,0.006221442,-0.004335632,-0.019526081,0.0008585625,0.0128341215,-0.0039363983,0.0033566745,-0.0055036475,-0.003286337,0.0006650646,0.0007136398,0.030063905,0.00021147232,-0.0061224303,0.0024440198,-0.004532134,0.005384424,-0.014210641,0.00031131878,0.029685019,-0.0054759234,7.253548e-05,0.0009802708,0.000744494}},
      {{-0.006027985,-0.0023372488,-0.006612393,0.0033569224,0.00037133248,0.0034947293,0.008266876,-0.004765892,0.0067057204,-0.005971438,0.0043358114,0.0016254879,0.012576654,0.0071796086,0.0013051276,-0.005562964,-0.0069118813,0.0047962884,0.0018494662,0.00991998,0.008462324,-0.00581777,-0.0019975828,-0.0097425915,0.013783141,-0.008767394,0.009552589,-0.0078068553,-0.022602914,0.0056609814,-0.009974391,0.004790125,0.0006482335,-0.006028793,-0.010834497,0.00523245,-0.002577964,0.03387091,-0.0012935675,-0.00611612,0.0023677943,0.004599931,0.007215337,-0.01626553,-0.0042044763,0.032102693,-0.0024744396,0.0034373903,0.010696393,0.005838382}},
      {{-0.003929636,0.001298002,0.0003154705,0.0095847845,-0.0058349706,-0.0007983981,-0.00073927443,-0.0058647147,-0.007279779,0.0005209477,0.00049024203,0.003014316,0.009144438,0.0070942035,-0.005623333,-0.0053775,0.000532082,-0.00012971747,-0.0014125569,0.0010905786,0.0008996568,0.009126802,-0.0025046414,-0.0060864887,0.010351168,-0.0010705473,0.011050744,-0.0020499083,-0.025352666,0.0013680713,0.011460518,-0.0013865514,0.010979403,-0.021330614,-0.0057221977,-0.0011673021,-0.00064270897,0.03659405,-0.004576764,-0.0032907964,-0.0018251901,-0.003362815,0.005729453,-0.0058824737,-0.004084362,0.027793624,-0.0019080881,-0.007252164,0.00016077833,-0.004037537}},
      {{-0.002015686,-0.0035161406,-0.004137291,-0.00070439006,-0.0035931407,-0.0034981824,-0.002704338,-0.009641812,-0.012384445,-0.0007426665,0.0021844648,-0.0040602493,0.0074757007,0.0053221495,0.00069706957,0.0096975695,0.003350656,0.010480081,-0.0008236363,0.0020942094,-0.0013911217,0.0057699014,-0.0033950075,-0.008110895,0.0073529356,-0.00012668285,-3.3123804e-05,0.0012000873,-0.020218551,0.0008679687,0.024274375,0.006494621,0.013509473,-0.033176836,-0.0029576286,-0.0021879505,0.004476814,0.03795356,-0.004451378,-0.007157994,-0.0012811875,-0.0048637753,0.021106938,0.0018248818,0.0005090382,0.029689,-0.004587338,-0.00032899543,0.0026632606,0.0036513112}},
      {{-0.0014841147,0.002940934,-0.0020695624,0.0057735844,0.006872886,-0.0059883455,-0.0022128928,-0.009552583,-0.0003521823,-0.0012324001,-0.0021487887,-0.0011126486,-0.002151538,-0.0037660555,0.0004076866,-0.0140936,0.0011638717,-0.00083387404,-0.007354998,-0.0026450946,-0.0037012715,0.00093086343,-0.004172611,-0.0035572415,0.0140068475,0.001987938,-0.006386296,-0.0012175879,-0.027786614,0.00088403164,0.011671945,0.004403852,0.0017422796,-0.016860124,2.9101004e-05,-0.0026972184,0.0051758485,0.03278339,-0.0013031857,-0.0029219908,0.0011538363,-0.0067959735,0.00034517213,-0.014422749,-9.3534945e-05,0.027183099,-0.0038537954,-0.0059478204,-0.003839564,0.0029093272}},
      {{-0.0013574173,-0.0054909545,0.0025331392,0.0020728381,-0.009564819,-0.0013600502,0.0017376731,0.005515746,0.0030085659,-0.0045491336,-0.0011700771,-0.0041929903,0.0028651245,0.0049561323,-0.004454992,-0.0014247076,-0.0027801527,0.004594321,-0.004896823,0.0018537488,0.0019195888,-0.0050013945,0.0051045804,-0.0015071623,0.009663321,-0.006150649,0.006450524,0.004451823,-0.020475486,0.00035127276,0.0063216984,-0.0011333764,0.004054232,0.001863834,-0.0031480314,0.0036626195,-0.0055905525,0.033571247,-0.00253033,-0.00013682,0.008606895,0.0045671896,0.027470665,-0.00841921,-0.0054571573,0.032032218,0.003783736,-0.0022745924,0.00027302775,0.002405451}},
      {{2.2765711e-05,-0.000104567785,0.0016527841,0.002095041,-0.0023079775,7.106184e-05,-0.0029456357,-0.00082857884,-0.004521395,0.0019848426,0.0017932276,0.0014421531,1.4834186e-05,0.0017946106,-0.0056595895,0.0010617363,-0.0010541982,-0.00035134226,0.0035567957,0.00073235575,-0.0035523553,-0.0021439441,-0.0006152198,-0.0045546293,0.007791703,-0.003964464,-0.001174001,0.0015484506,-0.02273138,0.0035864583,0.008382846,0.0027709662,0.0034687412,-0.023662083,-0.005562702,-0.00053920713,0.00081794284,0.033098165,-0.0050628697,0.00010408168,-0.00016775484,-0.002316837,0.013552106,-0.013220393,0.0024501504,0.02814697,-0.0046420046,-0.004195348,-0.0019126952,0.0017831364}},
      {{-0.0020204468,-4.917887e-05,0.0015266233,0.0030462183,0.003980381,-0.007035471,-0.00084182987,-0.005129536,0.011405659,-0.0075430553,-0.0025561198,0.0033646235,-0.0022461459,-0.0055791936,-0.0007747979,0.0027182642,0.006602776,-0.00051382766,0.004827412,0.0026210917,-0.004257904,-0.0038553867,-0.0030520242,0.004378706,0.009148475,0.002984889,-0.0040920237,0.000118925025,-0.021837793,0.007425966,-0.0053783455,0.010231106,0.0022475095,-0.018343754,0.0095278025,0.006210604,-0.006951797,0.032482125,-0.0048408955,0.007338917,-0.00589033,-0.0025408373,0.007817226,-0.011665466,-0.0041387854,0.030349666,0.0063006184,-0.005941148,0.011457605,0.0061064805}},
      {{0.0016717088,0.00011746499,0.0009912925,0.015754651,-0.0047637485,-0.00063377473,0.0036397208,-0.009849422,-0.007836709,-0.0058095516,0.0013395561,0.0026636473,0.0037253129,-0.00014718431,0.002629184,-0.0028289948,-0.0034038944,0.005542449,0.004114581,0.006185743,-0.0017656886,0.011317929,-0.0012938427,0.0027517057,0.009994895,-0.003864876,0.001627968,0.0010710345,-0.021218684,0.00623445,0.0017075853,-0.0056957877,-0.0021306179,-0.0036580449,1.7146755e-05,0.00018050881,0.0012076342,0.026012478,0.00035920512,0.0037868563,-0.004860806,-0.008080559,-0.0060097133,-0.021222679,-0.002811178,0.02096957,-0.0016199716,0.0006541431,0.0012312523,0.006482393}},
      {{0.0066039874,-0.0048179026,-0.00017086769,0.00074825453,0.0032596984,0.00095503894,-0.0019269951,0.0026913616,0.009869878,-0.0050959806,-0.0018701355,0.0031539788,-0.0065479972,0.00093606464,0.0041517788,-0.013178912,0.0045919605,0.005618829,0.0030489988,0.0008893357,-0.0013891677,-0.0034840466,-0.0032176406,0.0035437504,0.0061057163,-0.0011956454,-0.009422645,-0.0008927713,-0.016447917,-0.005405013,-0.009127269,0.012815137,-0.00760425,-0.0025128922,0.0048792334,0.003599062,0.0041294727,0.027792817,0.0014002604,0.0044122552,-0.00851528,0.023027217,0.0007136925,-0.023938311,-0.0017255973,0.027307196,-0.01199016,0.0048312736,-0.0028038102,0.012225645}},
      {{0.0032730214,0.0035783146,-0.004112912,0.0064562527,-0.013190013,0.008927632,0.0022022908,-0.006378472,-0.012289703,0.005939648,0.0016306192,0.0017126949,-0.011031207,0.008354221,0.0026130348,-0.006414111,-8.958866e-05,-0.006115799,-0.004220134,-0.0012774771,0.0014951545,0.0059494004,0.0030660052,0.0019908473,-0.0045581236,-0.0010078019,0.009035741,0.0036129728,-0.025238223,-0.0014574407,-0.0019784244,0.008563594,-0.015299623,-0.022012973,-0.006923939,-0.0008323998,-0.0013979852,0.030952275,0.00034297965,0.0018485978,0.0040402096,-0.0051002293,-0.0032240555,0.00036828755,0.00056199526,0.017042601,0.0075874613,-0.0011154627,0.0018561424,-0.0052095754}},
      {{0.0021781127,-0.005078403,-0.005111761,0.010746481,-0.001953526,0.0011407597,0.00043696395,-0.0044511,0.0009794157,-0.001939019,0.0090751555,-0.0032184855,-0.013598603,0.00014824476,-0.0025843019,-0.006067917,0.0024743062,-0.007612453,0.00065462996,0.0015752487,-0.0040239915,-0.0037962657,-0.0006923803,0.005786764,-0.003527496,0.002949272,0.0024428815,0.0026209801,-0.029618435,-0.0010192059,0.0019195197,0.008599986,-0.009187463,-0.01370253,-0.0003606717,-0.005658424,-0.0006231173,0.025006961,-0.0078891665,-0.0031789336,-0.0012620048,-0.0023136358,-0.016430285,-0.0050162245,-0.00020213237,0.014005732,0.006011799,-0.0046487874,-0.0027883803,-0.0075508286}},
      {{0.0008805444,-0.00039447754,-0.0046315123,0.0027633861,0.001775664,0.007520864,0.0023498486,-0.002010857,-0.0018775108,0.0011670742,-0.0011333033,-0.0029330514,-0.0058137323,0.0062384475,0.001581741,0.004470842,0.0010116715,-0.0016231461,0.0019593313,-0.00085340405,-0.0019843457,-3.551279e-05,0.0015414577,0.0029926498,0.0024344474,-0.0036159917,-0.00038813893,0.0057144696,-0.02479871,7.1244795e-05,-0.00752292,0.012329087,-0.0094546685,-0.014016747,-0.006220141,-0.00046910674,-0.00455204,0.025066366,0.00044097623,0.0011299003,0.0027981591,-0.016634312,-0.015834223,-0.008424165,-0.0023285064,0.0069147064,-0.00069092656,0.005792959,-0.00020476629,-0.0011683553}},
      {{0.0043020174,-0.0005984284,0.0061183614,0.0009416815,0.00048774492,0.0032428834,0.002977598,0.012738976,0.016045898,-0.0016707544,-0.0044496423,-0.0008203657,-0.0032232502,0.00285208,-0.0046636155,-0.0040086764,-0.001812777,-6.2464766e-05,-0.0058881743,0.00043635792,0.0038801352,-0.010511672,0.0013808592,-0.00052566687,-0.016299706,0.0007187221,0.00088534405,-0.010099388,-0.021521825,-0.0050082724,-0.024635253,0.017457522,-0.030284194,0.0059843124,-0.0027419846,0.0033667542,0.0037707395,0.024870696,-0.00027183845,-0.0073462925,-0.003591513,0.008406535,-0.0022918824,-0.0061278,0.0003699452,0.007400934,-0.002956694,-0.0035071785,-0.00227376,-0.0056125927}},
      {{-0.005292979,0.00019538024,-0.0006571923,-0.01103093,-0.0007400239,-0.0040012635,0.0013118547,0.006085944,-0.013632367,0.0004871032,0.00026436316,-0.0028922695,-0.002953189,-0.00015910632,0.0015663339,0.0060982318,-0.0018629807,0.0050210236,-0.007876093,-0.00015860559,-0.0029133037,-0.0013822613,0.0062548732,-0.0020097375,-0.007286085,0.0031983987,0.0058971494,-0.00020429604,-0.018534005,0.0026818155,-0.012486804,0.0007511438,-0.021357736,-0.015458404,-0.00043479307,0.00294378,-0.0011456596,0.025485586,-0.0022277012,-0.0027829064,-0.002161584,-0.005103581,0.0009196598,-0.0014875167,-0.00080499327,0.009406389,-0.0007484269,-0.0016341171,0.002944711,-0.0010006619}},
      {{-0.0059765065,-0.0036581499,0.007885799,-0.0139323305,0.009353349,-0.0029072196,-0.0030281898,-0.0010221811,-0.01744259,-0.00080133934,-0.0051507223,-0.0021332463,0.018371023,-0.004878169,0.0019659759,0.007230081,-0.0041255173,0.0045510195,-0.0018094422,0.0041176514,-0.0037696206,-0.009008197,0.0010380765,-0.0036579377,-0.014720533,-0.00046295655,-0.0034400127,-0.0024246431,-0.016649904,-0.00075443264,-0.012478778,0.0011364024,-0.01077149,-0.02068028,-0.002798134,0.005359801,0.0022593746,0.032517646,0.0030898212,0.0014792986,0.0056365863,0.0069863102,0.0153079955,-0.009387252,-0.0024164526,0.013671989,-0.0011836578,0.0007227322,0.0036859124,0.00077513244}},
      {{-0.0005930696,-0.0031420432,-0.0037830137,-0.0024183486,0.005473894,0.000930651,-0.0027627125,0.00035598967,-0.012355093,-4.1064145e-06,0.0009060889,-0.005271803,-0.006821616,-0.0009731819,0.002098502,0.0015215996,0.0020655533,-9.991484e-05,-0.0017788876,0.00052012084,-0.0015992243,0.0039653075,-0.0029171538,-0.0019790595,0.0014847383,-0.001482254,-0.003783663,-0.00091939635,-0.017513974,0.0015472183,0.0039901515,0.004814027,-0.0026789643,-0.021098444,0.0032430363,0.0020992155,-0.001949182,0.0335931,-0.0014716372,0.0064978395,-0.001955603,-0.0037475177,-0.008324689,-0.012732103,-0.0017530277,0.012841662,0.0039635035,0.009420255,0.001344115,0.0066628153}},
      {{-0.0033457296,-0.002377945,0.0041208575,-0.0036874446,-0.003390483,0.00045553248,-0.005320481,0.012563906,-0.017932685,-0.0051257946,-0.003711844,-0.003231425,0.002928383,-0.004063412,0.009316029,0.0029567867,-0.001179264,-0.0005905038,-0.0022236903,-0.0035841058,0.00425463,-0.029807659,-0.00065393955,0.00016043213,-0.0066341604,0.0020138891,-0.00065380306,8.6105356e-05,-0.008367258,-0.0005976851,-0.0047166958,0.0026280985,0.00089147786,-0.023531899,0.003226007,-0.00071331277,0.0017411483,0.028761316,0.00015852612,-0.001140337,0.00010411123,0.007873396,-0.0011866791,0.0012345682,-0.005309046,0.010842493,-0.0044509615,-0.0051943017,-0.003046102,-0.0028104084}},
      {{-3.9239712e-05,-0.0003181681,0.0030315819,0.0072390544,-0.0038977766,-0.0033727644,1.9498345e-06,-0.013694472,0.0011473286,-0.00012729822,0.0005662112,0.0024492252,-0.02052476,0.001661068,0.00068892405,-0.010545002,0.0006171788,-0.0012608864,0.0035034248,0.0020525851,0.00079220824,-0.021317948,-0.007001,0.005605681,0.0140638435,-0.0018441109,-0.00021689702,-0.0015509205,-0.014646393,0.00054506474,-0.0071971593,0.019069705,-0.007569103,0.0066011027,0.0026415603,0.0017724957,-0.0010461388,0.025425192,-0.00013774373,0.005982602,-0.0019040103,0.0010427786,-0.027381254,-0.011914822,-0.0020828084,0.012670582,-0.0011120713,-0.010706602,0.0017431689,0.004246732}},
      {{0.0019277431,-0.0015722568,0.0035849172,0.01715268,0.003272478,-0.0074578826,0.0030470467,-0.012349112,-0.013595686,-0.004266252,-0.009529885,-1.8446965e-05,-0.019425718,-0.0094499085,-0.0005251816,-0.0049089035,-0.004977306,-0.0043306355,0.0059640594,0.0022925125,-0.0019808596,-0.031504758,-0.00037684612,-0.0026891036,0.009701576,0.006265501,-0.009771523,0.0030025193,-0.007109432,0.0018022968,0.00064089976,0.020010017,-0.0115949195,-0.0037242044,0.0057513965,0.0009031543,-0.00083125563,0.023064146,0.002941848,0.0068150237,0.00044090184,0.01863568,-0.006980772,-0.011435962,0.0046936455,0.0071534417,0.001605861,-0.00745178,-0.010673372,0.009680086}},
      {{0.0011473977,-0.002363916,0.0058795605,-0.0037039283,-0.003892566,-0.0006369516,0.0019348302,0.0013738435,-0.0015684894,0.0003799951,0.0027456617,0.0023745056,-0.025479047,-0.0058686677,0.0009017113,0.0041347686,-0.004352087,0.0017230053,0.0010726972,-0.0008134272,0.0010693027,-0.007292413,0.0013905031,0.001961112,-0.0053704083,-0.0012159331,6.833429e-05,-0.001236559,-0.015267995,0.0022354734,0.010255708,0.0030605656,0.004069592,-0.011315863,0.01039357,-0.00088176114,-0.0039371224,0.02647137,-0.00048949744,0.0009080291,-0.0012245644,-0.0061414167,-0.004087436,-0.010609649,0.00028257366,0.0113089075,0.008708385,-0.0031986611,-0.0006206291,0.0033191824}},
      {{-0.0004482824,0.0063527445,-0.0008854555,0.00065302226,-0.008896823,-0.00073948497,0.0059510767,-0.0011801677,-0.018284291,0.0013815253,-0.0007628834,0.02054849,-0.0068231947,-0.00038441477,0.0073240926,0.008593083,-0.0013391828,-0.0033193405,0.00048239419,0.0013985947,0.0037038748,-0.007882543,0.0010773777,0.0033452897,-0.0133151235,-0.003662291,-0.0013474802,0.0016368877,-0.020359926,-0.0013989299,0.0047251913,-0.001943768,0.005399832,-0.021641204,0.0060236813,-0.005476616,-0.009076399,0.034022454,-5.1871666e-05,-0.0021657676,0.0016181825,0.002154174,-0.0030854666,0.001582121,0.0028192918,0.013267888,0.004260473,0.0046209223,-0.0028368721,-0.008188918}},
      {{0.0017113653,0.0007338888,-0.0032709728,-0.0104563255,-0.010249327,0.0076582576,0.009276827,0.00718588,-0.009316309,-0.0017892033,0.0018391929,-0.00082896586,-0.032251954,0.00050223875,-0.0016179449,0.0022435035,0.0029659497,0.00023180206,-0.006844129,-0.003094497,0.003700956,-0.007940869,0.0007892104,0.0015349033,-0.020321539,0.0025015594,0.0010888173,0.0026907418,-0.015226483,-0.0037082632,-0.004163428,0.006829946,-0.011330745,-0.013868156,0.0068770945,-0.0015196882,0.0018130067,0.03072729,0.0032249708,-0.0029249191,-0.006123998,0.007845977,0.012322216,-0.002533433,0.007590968,0.014716916,0.010364483,-0.0009477975,-0.0012296357,-0.006809029}},
      {{0.0034503697,-3.3566746e-05,0.0026395007,-0.011081253,0.00699978,-0.0069773593,0.0021595962,0.016201977,-0.015074033,0.0021771465,-0.0012480601,0.0050012143,-0.011214413,-0.008557381,0.007630637,0.011492958,-0.0045034913,-0.00051515986,-0.0005503338,0.0057838922,-0.00058777124,-0.0073081125,-0.0042668367,0.0004276488,-0.019836541,0.002849808,-0.003490794,0.009855435,-0.014836585,-0.0008217355,0.009904273,-0.0011116684,-0.0039704386,-0.027788192,0.012640399,0.004299811,-0.005231624,0.034286074,0.0075619537,0.0020244464,0.0021267377,0.002778537,0.022021007,0.00574159,0.0053666914,0.008776456,0.0068750405,0.0008329883,-0.00063845236,-0.0015695004}},
      {{0.001935278,0.00038853413,0.0025729912,-0.010830097,0.0017112901,-0.004828878,-0.00032052994,0.0018260615,-0.014345292,-0.003835636,0.0019177017,-0.0007697026,-0.02566126,-0.004162271,0.00039088415,0.01052583,0.0010295435,-0.00432095,-0.005370229,0.0026367947,-0.004420035,0.0007846292,0.0006790388,0.00044824235,-0.008427884,0.0019915863,-0.0014798079,0.005035755,-0.014469789,-0.00036544178,0.015633091,0.010621834,-0.005743133,-0.027444433,0.007103247,0.000101327285,-0.0017951492,0.035562932,-0.001620361,-0.0023130665,0.001748126,0.007662509,0.0010798856,-0.0051360196,-0.003426153,0.015092141,6.314098e-05,-0.0025267666,0.0021843351,0.002802875}},
      {{0.0036702892,0.0088553,-0.0011052246,-0.0017859811,0.0018466937,-0.0052983216,-0.004628512,0.0019925004,-0.015979031,-0.00048121926,-0.0024788673,0.0052904487,-0.018305706,-0.005724518,-0.01298004,0.010202829,-0.0051654386,-0.0027057796,-0.0038760374,0.0045323186,-0.0023907223,-0.004939866,0.001786883,0.0063707763,-0.006535148,0.007201214,-0.0024987105,0.00070397084,-0.023570614,0.0055466886,0.015011204,0.019389436,-0.0021499752,-0.052542765,0.0056075403,-0.0066680782,-0.003920272,0.039685722,0.0076392987,-0.009582551,0.0011113341,0.011903469,-0.013699995,0.0011837389,-1.4512491e-05,0.0138385445,-0.0065006474,-0.011601958,-0.004298061,-0.0038784023}},
      {{-0.006431283,0.0021452392,0.004615591,-0.0025066398,-0.0063955877,-0.008759086,-0.0018588848,0.0010595083,0.0128386635,0.0010158947,-0.0011921334,0.00958244,-0.049530763,0.00084488804,-0.0057636327,-3.9843315e-05,-0.0014776035,-0.006581636,-0.00039313437,0.00020568412,0.006991488,0.0015370803,0.00092120183,0.0034805504,-0.01265986,0.0039713145,-0.0018202306,0.0015969613,-0.024988841,0.0021989406,-0.005144068,0.01733493,-0.008587184,-0.012102838,0.004368334,0.0050882003,0.0040920987,0.027509963,0.00015737156,-0.0076519,0.00082927,0.00071707874,-0.011265035,0.0045057633,0.00057083904,0.009601866,-0.003354995,-0.010921694,-0.00037951217,-0.0076936344}},
      {{-0.0037547462,0.005186789,0.007921731,-0.008691156,-0.004177775,-0.0016158547,-0.0022254372,-6.943378e-05,-0.029322963,-0.0029219661,-0.008167965,0.0037765247,-0.016375545,-0.0036048726,0.001633116,0.005650258,-0.0029442739,-0.0014392929,7.591109e-05,0.0056315344,0.0073824963,-0.009770108,0.002915486,0.004671583,-0.02059823,0.009845816,0.004050807,-0.0042541916,-0.02703877,-0.0024493905,0.017400455,-0.0052651735,0.007639625,-0.050692216,0.0068134787,-0.009303004,0.00400718,0.02714518,-0.0059526367,-0.00061907375,0.007120136,-0.0039741644,0.005283794,0.008014322,-0.0068460633,0.009884857,0.003579156,-0.008197124,-0.0048288777,-0.011455017}},
      {{0.0014626146,0.0005668315,0.0024894367,-0.0016301865,0.006697129,-0.00035973522,-0.0029034077,-0.0082686255,-0.02065758,-0.00721499,-0.00053269963,0.0010271929,0.013640657,0.003042575,0.000542232,-0.0023385922,0.00415888,-0.0066945422,0.00026475574,-0.0013201754,-0.0048955963,-0.009625228,-0.0021765651,-0.003243231,-0.008358216,0.006292142,0.00046728202,0.0022655486,0.053751778,-0.005839852,-0.004420667,0.0036750461,-0.011389492,-0.00030894828,-0.0015370013,-0.005096502,0.003373572,0.051039156,0.004480371,-0.00202501,0.0033035695,-0.0040379516,0.0026130148,0.011573569,0.00092991686,-0.0054077553,-0.0023425552,-0.0057403636,-0.0058141393,0.005189721}},
      {{0.005922662,0.005647735,-0.004951987,-0.0040106596,0.0069354475,0.007747544,-0.009703983,-0.017220018,-0.02013085,0.0032450717,-1.2012719e-05,-0.004174009,0.007204608,-0.007349534,-0.013651577,-0.0065186243,-0.005503291,-0.00014235741,-0.0033048545,-0.0038748146,-0.0044724317,-0.032231186,-0.014390459,0.005416801,-0.022941155,0.009112171,0.0059585194,-2.6543274e-05,0.029054057,-0.0038779269,-0.0019678648,-0.0059185214,-0.0034470304,-0.0077821976,0.0013478304,-0.008446239,-0.006268959,0.041321952,0.00015995969,0.0016547514,0.011346955,0.010777925,0.018660387,-0.00031448225,0.008451006,9.645429e-05,-0.004152539,-0.012530808,-0.0067808027,0.0016327437}},
      {{0.0019332591,0.005424043,0.00513498,0.006073305,0.0020956513,-0.006197191,0.004481616,-0.011477749,-0.0034451366,-0.005608399,-0.0018616556,-0.0032937422,0.004301478,0.0081006,-0.0037711568,-0.00066771253,0.004194894,-0.00044009724,-0.004757343,-0.0009481635,-0.00056714646,-0.022500388,-0.0087419255,0.015284837,-0.0035155062,-0.00018111891,-0.003038638,-0.004197219,0.03065851,-0.0017766489,-0.0031894108,-0.002349574,-0.0057429024,0.019022616,0.0068011507,0.003906569,-0.0007885446,0.039747927,-0.0025174432,0.0073615555,-0.0017310324,0.003912229,0.015066549,-0.0002844776,0.0025569475,-0.0010157736,0.00514301,-0.006967331,0.0017005057,0.0045027314}},
      {{-0.0028278285,0.007722915,-0.000116687515,0.010944395,0.008125565,-0.007919142,0.0006030126,-0.011004451,-0.007013941,0.0017389685,-0.0037656964,-0.0021123723,0.0054202643,0.01082174,0.0031119627,-0.005443368,0.0047669588,-0.0010891078,-0.026183479,-0.0058226227,-0.010936483,-0.022048144,-0.01205566,-0.014177597,0.0061249156,-0.0052175806,-0.0025965427,0.010128179,0.02250682,0.0033177773,-0.012369662,0.0076425057,-0.0054315175,0.016043974,0.0049999855,-0.017472057,0.011480849,0.03305772,0.0090173,0.0010806603,0.00036943826,0.0123421345,0.021225965,-0.010460933,0.00032211377,-0.010411175,0.0043658162,-0.024094105,0.0037690848,0.005867755}},
      {{-0.0058932183,0.0026251234,-0.0017957182,0.0008168433,0.0014549639,0.005057403,-0.0017089299,-8.3776846e-05,-0.023663176,-0.0033767486,0.0013887184,-0.0016965533,0.023866419,0.0047151437,0.0021572944,-0.008943896,0.00026372014,-0.002537852,-0.005338646,-0.0050221677,-0.00302676,-0.0025160508,0.0021284933,0.0008975046,-0.0069726147,0.0063619814,-0.003998328,-0.003184803,0.06594243,-0.003509876,0.0030873942,-0.0066352226,-0.016794462,0.0038551895,-0.0011809655,-0.0009992049,-0.001419541,0.05709762,-0.0003531523,0.0009166561,-0.0008556053,-0.007816474,0.03011647,-0.0058436724,0.0067563434,-0.016475046,0.010063142,0.0075775273,-0.0023036206,0.007753452}},
      {{0.0020152114,0.0038585265,-0.004670065,-0.0023020182,0.0054334486,0.0038975074,-0.006143336,-0.00659414,0.006930923,0.011774447,0.013906177,0.013508392,0.0038941966,-0.009277353,0.0021519174,-0.0052713486,-0.006503503,-0.0008266403,-0.010054543,-0.0018038381,0.0021740464,-0.021115463,-0.0033153188,0.0069265305,-0.012578975,-0.0073667853,0.0026622268,-0.008187395,0.052483797,0.0040994254,-0.00780405,-0.0118744625,-0.015897166,-0.0061757225,0.0024387653,-0.006683298,0.0026234027,0.04615671,0.0027295225,0.010496629,-0.005958705,-0.0024436028,0.0052062473,0.003457052,-0.006260791,-0.0008041092,-0.006392344,-0.009950617,0.0076096198,-0.0041983803}},
      {{0.005494623,0.004691668,0.0029066768,0.0019672634,-0.0033060764,0.0019534999,0.0048391633,-0.008952415,-0.0076211505,0.0035702682,0.0037556172,0.0003320211,0.012894267,0.01036329,-0.0033010808,-0.013078867,0.00059517456,-0.005847762,-0.005256509,-0.0049027116,0.0065606693,-0.009294297,-0.0029308947,0.0014227764,0.0028952896,0.0013758958,0.0030217585,0.004904546,0.047140505,-0.0056681237,-0.0037295865,-0.014326585,-0.00978296,0.008321005,-0.005837843,0.0038397175,0.00092900515,0.05331555,0.0005600628,-0.0002808951,-0.009686853,-0.0040614363,-0.0035722381,-0.015280356,-0.0016384607,-0.011171982,-0.0037190707,0.0041011907,0.0053335587,-0.0033912992}},
      {{-0.0020294338,-0.0035530666,-0.0074095135,-0.0013007416,-0.012387374,-0.0027929454,-0.008812298,-0.01156902,0.009151086,0.0041457824,0.0066167964,0.009612563,0.014472783,-0.007349978,-0.011675006,-0.023721788,-0.009692558,-0.00984176,-0.009930471,-0.0007755018,0.0012509548,-0.0047977013,0.008825467,0.010636772,-0.002686743,-0.004088207,0.008840267,0.009097644,0.038751513,0.001888928,0.003117894,-0.0029758587,-0.01627575,0.0073635397,-0.014581518,0.0014006194,-0.002895106,0.05475548,-0.011095009,0.015797673,0.011003991,-5.735915e-05,-0.00064100546,-0.005296717,-0.005061709,-0.009086735,0.0033858484,-0.018737284,-0.0054797553,0.006757967}},
      {{0.0022559888,-0.0023008464,-0.006159675,0.005501857,-0.009838795,6.682722e-05,0.00064194,-0.009420197,0.00027926284,0.00233243,0.0040875706,-0.002831993,0.007187363,0.002070458,-0.0011856017,-0.014095077,0.0011613386,-0.0008799833,0.004909377,-0.0020731427,0.009246608,-0.00016143902,-0.000577648,0.005820394,-0.001084477,0.0015935054,0.008406589,0.0009534706,0.061324786,-0.001242243,-0.01273089,-0.016877694,-0.0052355034,-0.0035154175,-0.00807988,0.00053137715,0.003933598,0.064706445,-0.008199199,-0.0042545293,-4.0791147e-06,-0.0062343315,-0.021434553,-0.004364177,-0.002568712,-0.003095011,-0.0031998863,-0.012958351,-0.00029073659,-0.008323721}},
      {{-0.008529676,0.00015117787,-0.002992689,0.0142389815,-0.0062091667,-0.005714322,0.0044799373,-0.020617284,-0.008960044,0.0025673625,0.005124418,0.003072103,0.01131114,0.004320992,-0.0059045786,0.0047681243,-0.005946651,0.00072464475,-0.0027360884,-0.0072995313,0.0005403555,-0.029990368,-0.015784739,-0.0004846919,-0.014321829,0.0012121407,-0.006739025,-0.0059087747,0.053464603,0.0023098534,-0.0028561703,-0.0012016341,0.012689043,-0.012997227,0.001029593,-0.0037385805,-0.0068242666,0.04832369,0.0016994923,0.0018785095,0.0008461141,0.015412164,-0.00646246,0.00020394873,-0.013430017,0.00559153,-0.009933961,-0.004252841,-0.0072803535,-0.008310925}},
      {{-0.0019012034,0.00425663,0.008897168,0.0022438343,-0.00016253238,-0.002591891,-0.0065541896,-0.0049354555,0.0005015427,0.004507462,-0.0028907305,0.007184522,0.01707432,-0.010057009,-0.011075275,0.0014598359,0.00500317,0.0019026495,0.005461126,0.0034876883,0.003582738,-0.009430676,-0.0016949633,0.0038971636,-0.0136370985,0.0104628755,-0.005110922,0.0018130442,0.06910071,-0.0032420978,-0.0019414861,-0.010777694,-0.010501532,-0.0033176558,0.004135872,-0.0089656785,-0.0006913645,0.060293615,0.002092491,-0.00740461,-0.0024356951,0.0060989326,-0.0031105482,0.010360054,0.0029036563,-0.0017898262,-0.0145504745,-0.011263843,0.0013657832,-0.0056330375}},
      {{0.0051699677,-0.0011146463,0.0013769704,0.0072627557,-0.0019952063,-0.01726441,0.0001371985,-0.01590207,0.015580834,-0.0029868842,-0.010423166,0.00662339,0.012926374,-0.006404233,-0.009838658,-0.008194539,0.010079729,0.00804698,-0.005924191,0.005344475,-0.0046896245,-0.016940992,0.011376179,0.007179373,-0.019712798,-0.0013274893,0.009159198,-0.008779622,0.05962987,-0.011873419,-0.010981909,-0.012583821,0.0015950918,0.004749199,-0.00817338,0.009005529,-0.008350511,0.0496853,0.006012976,0.0033620372,0.0010483494,0.015452165,-0.0002202231,0.004402545,-0.008754037,0.0030360667,-0.003184721,-0.0033409435,0.00092530705,-0.0012042583}},
      {{-0.0019961232,0.006980627,0.008433767,-0.002301478,-0.0005217056,-0.004926617,-0.007911999,-0.005099569,-0.01001898,0.0061135865,0.0029846996,0.0017868836,0.030149665,0.0016706587,-0.0033466355,-0.011567861,-0.00028431776,-0.0019115603,0.009473606,0.0011370331,1.2806176e-05,0.019626847,0.001435533,-0.0005297148,0.010179811,-0.00068014505,0.00282922,-0.0017871567,0.07886416,0.0004495844,-0.011013136,-0.008951809,-0.018158313,-0.004614748,-0.005919904,0.0017006444,0.004787007,0.07412589,0.0015886788,-0.001063026,0.0070609655,-0.0028798634,-0.015240582,-0.004987663,-0.008206736,-0.017291319,-0.0010417593,-0.0061602183,-0.0011170191,-0.0029137305}},
      {{4.2167736e-05,-0.009952146,0.009491761,0.0017333486,-0.0042953533,-0.007376198,-0.0036902116,0.0061337533,-0.0117779095,-0.002784024,0.001481885,-0.009042972,0.027608708,-0.014075749,0.0003471863,-0.021415059,0.008192543,0.002733839,0.007539739,-0.0042711613,0.009142631,0.0028839137,0.0076048286,0.007175573,0.011601678,-0.009107025,-0.002270225,-0.0022413563,0.06913212,-0.0014264797,0.0059390427,-0.00679066,-0.022546295,-0.004537828,-0.001849535,0.004687019,-0.0072821598,0.066117294,-0.00039000358,0.004217719,0.0069215954,0.005536608,0.00080030476,0.0035697592,-0.0058771726,-0.016877256,-0.004698617,0.0011111009,0.0027594005,-0.0003088173}},
      {{0.0009983387,-0.005484526,0.007027555,0.00585371,0.0028301652,0.00072638143,-0.0022905648,-0.0091871545,-0.002149657,0.0039206673,-0.0023276596,0.0032479677,0.015828744,-0.00577807,-0.002609208,-0.0037392625,-0.00048514284,-0.0039451853,0.0069608856,0.0074151936,0.0057087634,-0.0010895733,-0.0027871283,0.0066227387,-0.009932794,-0.00013674205,0.0011378671,0.00066268287,0.061212413,0.0052562533,0.0064262697,-0.0046578,-0.005231164,-0.0029083476,-0.004594063,0.005721605,-0.00044676245,0.059329975,0.0048505967,0.009912583,-0.002393967,-0.00025759818,-0.02201653,-0.010266948,-0.010441499,-0.00355303,-0.0012155564,-0.003330166,-0.0026128434,-0.009239573}},
      {{-0.0046150447,0.016475907,0.006334262,0.0040243426,0.011724791,-0.0060387286,0.0008933901,-0.006715409,0.0008015155,-0.0006099727,0.0071973763,0.013679401,0.018293163,-0.011504202,-0.0008226784,-0.020152377,-0.0012296205,0.0016604507,0.0015186061,-0.0032568122,0.0011544285,-0.0054808594,-0.00091577705,-0.0036245047,0.005055965,0.010401598,-0.006060366,0.007944157,0.05660428,-0.0042749355,0.004683758,-0.008652218,0.00022226901,0.0024581847,0.0032708973,-0.016827201,0.010028913,0.06776631,-0.0023252026,0.0030207548,-0.0035923917,0.015027746,-0.00481623,0.0016580537,-0.004225478,-0.009772514,-0.012228199,-0.0124615375,0.001952636,0.0013441148}},
      {{-0.0055429563,-0.0009279314,-0.0029683092,0.0114217345,-0.01215554,-0.0036257582,-0.00068306306,-0.008082357,0.0033941262,0.0020706381,-3.061206e-05,0.00922693,0.0040763454,0.0034306666,-0.010729107,-0.007685425,-0.000934916,0.003974491,0.001669301,0.0021707246,0.0039209826,-0.00075890205,-0.0054473295,0.0017271911,0.0009143227,0.00027464738,0.0064958856,-0.00058347936,0.057724107,-0.0038538957,0.0022571087,0.002468405,-0.0099522695,-0.0073402957,-0.008560666,-0.0018753317,0.0012654583,0.06015131,-0.005199358,0.0001425282,-0.002351947,-0.0014769856,-0.02873859,0.0059110294,-0.0028537633,-0.0047497037,-0.012611353,-0.0063398224,-0.0028704307,-0.0030319523}},
      {{-0.00764328,0.003549227,0.017304774,-0.00090556877,-0.003244198,-0.0083827535,-0.0030530938,0.001216825,-0.0011023507,0.010136489,-0.00406049,0.00671958,0.03143659,0.0121590495,0.004603763,-0.006602003,-0.010147046,-0.004746761,-0.0035651815,-0.0064563313,0.012054423,-0.012239209,-0.0060547777,-0.0032800748,-0.010704741,0.0045395074,-0.008855101,-0.009804499,0.06673081,-0.01107419,-0.008651036,-0.009170947,-0.0022223252,-0.015735297,-0.0016344883,-0.0015963041,0.0021507624,0.05779403,0.0059740683,-0.0038107857,-0.0048548705,0.006080542,0.0010232069,0.0015495035,-0.008626442,-0.0048806136,0.01271846,-0.0063460725,0.00020782209,0.0019972788}},
      {{-0.0028902036,0.005840106,0.006091907,0.009323665,-0.0047425623,0.0017209273,0.0056607258,0.00060332764,-0.008970231,-0.0012004913,0.0028976845,0.0014931821,-0.008525922,0.0047098794,-0.002740317,-0.002691329,0.0024652318,-0.0143523235,0.006858638,0.0032609412,0.003998932,-0.02334751,-0.009156066,-0.0015223672,-0.011800717,0.0024346947,-0.0033042878,0.0020532738,0.038950942,0.0072478517,0.021427399,-0.0058755903,0.008972485,-0.00030673054,-0.0032189146,0.003975578,0.003970556,0.04961446,-0.0074245026,-0.0035187416,0.005097915,-0.002756965,-0.0140620805,-0.010844343,-0.0005823175,0.01454312,-0.0045419135,-0.0046972875,-0.0008922602,-0.009703392}},
      {{-0.00045088542,0.00063748646,0.004814267,0.0039431034,0.00336489,-0.0046109455,-0.000601523,-0.00716244,0.007572322,0.009596439,0.00367081,0.000105055115,0.002480134,-6.942367e-05,-0.0010935304,0.0010008939,-0.0022418518,-0.017670253,0.009269086,-0.0010422417,-0.0055004107,-0.0077482276,-0.0017197706,0.001139721,-0.009402877,0.0014450005,0.006602855,0.0072425525,0.058262914,-0.0047979397,-0.0030812141,-0.007654542,0.0042188363,0.015660256,0.007248197,-0.012785692,0.008818846,0.058168635,0.0005437692,0.0094298925,0.0054370747,-0.009440122,-0.0006009629,-0.0137714045,0.0040092315,0.003174828,0.0038514347,-0.0075605446,5.704848e-05,0.0032728096}},
      {{-0.008628473,0.00019737831,0.0008121886,0.009346242,-0.0061586816,-0.0010498032,-0.0017895664,-0.013400558,-0.020119019,0.0014289219,-0.0008203934,-0.0025139935,0.0014625784,0.0040136026,0.003141065,-0.00030253793,-0.00039507393,-0.0046475367,0.0036472473,3.1536252e-05,0.0061633596,-0.0058711777,-0.0038237122,0.007526107,0.0013059694,-0.002329121,0.0008166523,-0.000949751,0.056784853,0.0020638467,0.008550716,0.00027038812,-0.0014776213,-0.011193351,-0.0130284745,0.0026560873,-0.0043296358,0.063728675,-0.0019320507,0.0011787282,0.0014788687,-0.009113698,-0.011779713,0.0005513754,-0.0057246257,0.00072417787,-0.0027938564,-0.006681352,0.0022155393,0.00021248824}},
      {{0.009730383,0.0053882315,0.0011606027,0.004440202,0.007981028,-0.004928215,0.00659409,-0.0086992085,-0.012504149,0.014696558,-0.0060989927,0.0164819,0.03501996,-0.0059446217,-0.0036678982,0.011053887,-0.003987773,0.0059423773,-0.017077532,-0.00017762397,0.0065168035,-0.012493336,0.0015472766,-0.0052750884,-0.0070231757,0.0008225196,-0.018103765,-0.0004003687,0.065885246,0.010615698,0.0025465784,-0.008216291,0.0030279818,-0.025111424,-0.00034368545,-0.007603391,0.010951266,0.06452925,0.004950909,-0.0021659927,-0.0024114877,-0.0054579736,0.01350738,0.00773402,-0.012380475,-0.0043789586,-0.013355549,-0.004133145,0.009517805,0.0015151168}},
      {{-0.0017501097,0.00064406014,-0.0049679633,0.004335311,-0.0016493396,-0.0009621165,0.0013238532,-0.0066393437,-0.0058213403,-0.0005334305,-0.0044022123,-0.0036802904,0.01840742,0.007270722,-0.006927438,-0.0040681036,-0.0057214545,-0.00951813,-0.0064118644,-0.002501091,-0.0013510778,-0.019814063,0.0005483197,-0.0012972547,0.0035698577,0.003186438,0.0003845903,0.006620923,0.05752731,0.002956069,-0.011488745,-0.014518911,-0.004164283,-0.0040398217,0.0130598005,-0.0017291935,0.0063729305,0.059047848,0.0010386723,0.0029252144,-0.0032261873,-0.0046735946,-0.006260038,-0.006781346,-0.008453517,-0.005087121,0.0022108539,-0.009122031,-0.0014688673,-0.0021790834}},
      {{-0.0032232937,0.002143116,0.0025872185,0.000121845245,-0.003645545,0.0060879877,-0.004044675,-0.0037062347,-0.0149377845,-0.0012699375,-0.0002727844,0.0011510176,0.023081487,-0.010578344,0.0027006285,-0.016722096,0.0039530853,-0.0028303098,0.014606891,0.0046840725,0.0076938565,-0.016613571,0.0053423145,0.0011729915,-0.0067460495,1.8979632e-05,-0.00464688,0.003930918,0.054366104,0.006212033,0.00090202526,-0.008654671,-0.0004157735,-0.013470531,0.003077918,0.00200017,0.0058225654,0.06542482,-0.005141208,-0.0074904584,0.004381516,0.009967446,0.0038843309,0.008400106,-0.008676236,-0.004492177,-0.007007342,-0.00301478,-0.0053433315,0.004118707}},
      {{0.0027832917,-0.002932747,0.0058846055,-0.014820467,-0.0068048974,0.0039491574,0.0046383296,0.0015963757,0.009061552,-0.001227608,0.0057641766,0.010543351,0.011083759,-0.0070485366,0.0027907782,0.004916933,-0.0034566147,0.0024199558,0.001893219,0.0010794454,0.0007728321,-0.001530498,0.004926725,0.0018457633,-0.0069911024,-0.0015740213,0.005867837,0.0022967588,0.07350925,0.0015291057,-0.0006874082,-0.008080283,0.003526538,-0.0063236044,0.0042183753,-0.005233239,0.0017251441,0.07346795,-0.0015982677,-0.004629643,0.0054447744,0.006661953,-0.013330734,-0.0056583243,-0.006066649,0.0041962387,0.003151538,-0.004485787,0.0007776879,-0.010275464}},
      {{0.010490635,0.009177326,0.0020486384,-0.004759537,-0.008441514,-0.0009885706,0.009970593,0.0044150874,0.0046227486,0.0042801457,0.004035356,0.008976702,0.02067922,-0.0033562698,-0.0013868426,-0.012152416,0.006973264,0.0030497543,-0.0045397496,-0.008058089,0.00988875,-0.011931245,0.01019122,-0.009453931,-0.01274179,-0.005633975,0.0026952066,-0.0004974954,0.06276037,-0.0012001209,-0.010857892,-0.0026647472,-0.00977246,0.0025698699,0.009288769,-0.0035971901,-0.005641899,0.058315635,0.0006156107,0.0021193717,-0.00049222825,0.011345476,0.008758068,-0.0080673965,0.006389485,-0.016686535,0.0075425655,-0.005829099,-0.0009644182,-0.019697253}},
      {{-0.001812248,0.0014972686,-0.0024553018,-0.010646483,-0.0071115936,0.002690378,-0.00025361418,0.008468917,0.009886536,0.00065143284,0.006036442,0.005746818,0.0357494,0.005791529,-0.005154342,-0.009547891,-0.00013124719,-0.0026248756,-0.005452605,-0.00090511446,-0.0054035173,0.00090586074,-0.001098189,-0.0078762695,0.009227011,0.0065444466,0.017900495,-0.00097167643,0.07552262,-0.003732474,-0.022861673,-0.021346247,-0.008879718,0.0136492895,0.008144485,-0.0020943058,0.003136826,0.06831055,-0.006077835,-0.013045341,-0.0011398853,0.010903459,0.001807253,-0.008142625,-0.0032600781,-0.024598956,0.008206893,-0.016848432,-0.0067868605,-0.0046625827}},
      {{-0.010729366,0.0060725794,-0.00997093,0.010406675,-0.015231714,0.0034169161,-0.0044468907,-0.00045599966,-0.010209671,0.0032404559,0.0035230939,-0.0051923688,0.021620147,0.0046799034,-9.3423085e-05,0.0017632555,-0.007662519,0.009880415,0.010291428,-0.0033578766,0.012696992,-0.0063565234,0.010516376,0.00177874,-0.0023394134,-0.00036519655,0.00048014146,0.003968462,0.05705127,0.0051442217,0.013392156,-0.027495217,0.0075245732,-0.00662282,-0.01084427,0.009353136,-0.0021551363,0.061502993,0.00630692,-0.012376026,0.014914167,0.004455785,-0.016992375,-0.014732732,0.00871887,-0.002590124,-0.0007837668,-0.009846338,-0.0009819112,-0.018342923}},
      {{-0.00019329177,0.000583819,0.002165729,-0.0153129725,-0.0032985203,-0.004078971,-0.0014518229,-0.00028299834,-0.020017134,-0.0019238063,-0.00030080785,-0.0010244118,0.024003569,-0.006794458,-0.0036404,0.0025063949,-0.006653296,0.0020387208,-0.0012199568,-0.0011776071,-0.005967552,0.023767201,0.001111426,-5.926495e-05,0.0057203867,0.0023744004,-0.0023849083,0.0033269955,0.07769734,0.0036329112,0.006839866,-0.010302937,-0.0019341499,-0.017937917,-0.0013106723,0.0027825674,0.0027995599,0.08205898,1.2733445e-05,0.0063169263,-0.0009942014,-0.0034115426,-0.00080078875,0.0019858312,0.0011503159,-0.002817481,0.0014441096,-0.0037274873,-0.0009491641,0.0024054465}},
      {{-0.0012125938,-0.015291945,0.008770866,-0.0013633632,-0.010211683,-0.005153119,-0.001263058,-0.0062479256,0.002223588,2.81441e-05,-0.009530982,0.0077521154,0.01738367,-0.0020098484,-0.017390566,0.019399056,0.004306998,-0.003069416,0.007404545,-0.011144663,-0.0090834405,0.0049558175,-0.0062915543,0.0019469534,-0.0036842073,-0.0022688345,0.002289466,0.016077708,0.057246078,0.0010880063,0.0028205158,0.0027026348,0.003152447,-0.015225281,0.017460646,0.007833401,-0.00843597,0.07248717,-0.003277786,0.0057557714,0.0026319637,0.010438686,0.017861096,-0.004795036,0.012429374,0.005340996,-0.0010714752,0.0022950158,0.0070676818,-0.0064372593}},
      {{-0.007895126,-0.002053854,0.00949341,-0.0019303432,0.004293125,0.011676655,-0.00586066,0.0044718003,0.00018888181,-0.0019348159,0.0005519445,0.0018980999,0.0290976,0.0028577687,-0.0046427283,0.004330919,0.0014517643,-0.0004967005,0.0034561772,-0.0022966533,-0.006793456,0.0004513339,0.008570552,0.0011928738,-0.007384804,0.0009938353,0.0006073863,-0.0021150857,0.06554864,0.005886229,-0.0018926691,-0.013648534,-0.000686746,-0.017201517,0.004580744,-0.00042559436,-0.0021532502,0.06734577,0.008876816,-0.0024766212,-0.0047851256,0.0063155172,0.003575445,-0.0021052852,0.0028747933,-0.004566492,0.00028619223,0.00045113201,0.0002685384,-0.0029327217}},
      {{-0.00035781207,-0.0031050846,0.00403582,0.0025437016,0.0047100685,-0.008113781,-0.0005980536,0.0025746552,0.009292866,0.0036603769,0.000744667,0.0077547957,0.031025404,-0.009586496,-0.012910691,0.00423589,-0.009416632,-0.009349005,0.0062936633,0.0004746522,0.011565121,0.005089784,0.004430711,-0.00072896335,-0.0034663514,0.0028874255,0.010173644,0.0041483673,0.060261276,-0.0039878497,-0.012721353,-0.00705927,0.0101773115,-0.026938546,0.012648033,-0.010083455,0.0013066106,0.06734785,-0.00408735,-0.0033219676,-0.003204045,0.01866661,-0.0079514785,-0.0062179016,-0.0045487955,-0.007912446,-0.0012678733,0.0011929043,-0.0012326111,-0.0055140723}},
      {{0.0019697375,0.003471391,-0.0023063829,-0.01695726,-0.0022950957,-0.0012108852,0.007153042,0.0054712147,0.0060254727,-0.00032202827,0.0049328054,0.0018746712,0.016328562,-0.0017010645,0.0015840566,0.004391352,0.00013422604,-3.6214347e-05,-0.00372274,0.00603512,0.0012948147,0.016708823,0.0079183,0.0025143044,0.0016683916,0.0036425882,0.0056560594,-0.00070683664,0.06907657,0.003528001,-0.0051131235,-0.00093383645,-0.009773903,-0.009594256,0.0006115043,0.0016381555,0.00026498057,0.07316261,0.0029482334,-0.0010600188,-0.0010533426,0.0011052522,0.013522818,-0.013690687,-0.002757497,-0.000580366,-0.004337726,-0.0030326436,-0.0014621993,-0.0021755146}},
      {{-2.4319274e-05,5.178374e-05,0.002959855,0.0052643158,-0.00083462405,0.012993006,0.011389233,0.0023408348,0.018547572,0.013008913,0.0016268255,-0.0040359264,-0.0040111006,-0.0084073655,0.012970364,0.0059486334,0.0004052978,0.010939993,0.012019208,-0.003112212,0.0069711474,0.006246776,0.008837236,0.004905352,-0.015611648,0.0016671888,0.005724159,-0.009785612,0.042369347,0.00054903474,0.0036962382,0.0057843965,0.0031043834,-0.010913143,-0.010415159,-0.008104231,-0.0021292663,0.06628285,-0.0020929668,-0.0040967143,-0.0021673143,0.008473476,0.0028165432,-0.013659042,-0.004373642,0.012472293,-0.0049669393,0.0016554705,0.011492801,-0.005279151}},
      {{0.0074017677,0.0005809888,-0.0029746047,0.0048946906,-0.0089476025,0.0020920434,-0.0011873386,0.0065501346,0.010217379,0.003406044,-0.0001027598,0.0014676132,0.030142648,-0.0024086866,-0.002321288,-0.0013071572,-0.005246697,-0.0071822605,0.007984428,-0.0018985433,0.00039664368,0.010628849,0.005727195,0.0017091495,0.01485001,0.0007161304,0.008668676,-0.0026300002,0.058285136,-0.008225604,-0.02861358,-0.0050248974,0.009805832,-0.01886889,-0.0028178915,0.0010212462,0.0013885113,0.057612814,-0.006519994,-0.0042642863,0.0034787979,-0.00067475805,-0.014663125,-0.012499318,-0.00063696003,-0.020438056,0.0039292,-5.3469357e-05,-8.718513e-05,-0.014124635}},
      {{0.005065,0.008188111,-0.0034135724,-0.0054128594,0.0028209614,0.0020016006,-0.0038944473,0.005176206,0.022925315,0.0043436536,0.003510202,-0.010659857,0.036207087,0.0069942316,-0.0020313447,0.0020268352,0.0036869866,-0.0024197903,0.002601794,0.0010461016,-0.005279123,0.011456821,-0.0022631173,0.0058851684,-0.000462973,0.005709543,-0.016283374,-0.004734956,0.0646662,0.00053208135,-0.037443507,-0.009809066,0.013569705,-0.020589733,-0.006683272,0.0122236125,0.01148399,0.056068446,-0.0052970503,0.004068984,0.002696136,0.005265356,0.00848334,-0.007654922,-0.0034405275,-0.029738188,0.010600905,0.002742869,-0.0054386295,-0.0060735825}},
      {{-0.0032412198,0.00011754123,-0.0022109018,-0.02024608,-0.0065570767,-0.00037125847,0.0023528095,0.010772371,0.009651985,-0.0009089677,0.004134092,-0.007364837,0.004435241,-0.00012711437,0.00071277784,-0.006558983,-0.001990232,-0.0032828671,-0.006567447,0.0011171183,0.0012042804,0.02588926,0.0062467833,-0.004528824,0.012165176,0.0064111394,0.006122682,-0.0026295981,0.076189265,0.0023412264,-0.01846775,-0.0024585312,-0.017216695,-0.00921058,-0.004520562,0.0036576847,-0.0020136246,0.0573218,-0.0015814262,-0.0013501259,-3.915724e-05,0.0013741769,-0.0055654617,0.0017801835,-0.0038932983,-0.01864156,0.004130563,0.0026132753,-0.0013664836,-0.0019367521}},
      {{0.003965665,-0.0012156691,-0.0017603167,-0.0034722036,0.007218513,0.0019131777,0.0036748708,-0.016609643,0.008865454,-0.004366928,0.0068113497,-0.0004030618,0.0026078029,-0.0074966867,0.004947035,0.005772387,-0.006751973,-0.01089511,-0.004739071,-0.0016524455,-0.0005411551,0.017703393,0.010810489,-0.0010539558,-0.0010231241,0.0015471731,0.010576692,-0.0087854,0.055406276,0.0036989865,-0.0151416715,0.0012921711,-0.023179755,-0.02466056,-0.0016730035,0.0033187396,-0.008091836,0.043497503,-0.0058022942,0.0039453786,0.010404152,0.0026352522,0.006528283,-0.009864586,-0.0021282579,-0.022384608,0.008016801,0.004812711,0.00032326148,-0.006441788}},
      {{0.0008959899,-0.0042646495,0.0009594936,0.0011487858,-0.0017866415,0.0029210665,-0.0029775794,0.0026000405,0.0112405205,-0.0016007532,0.0018770148,0.0033031178,0.006532006,0.004731197,-0.0026049968,-0.001734232,0.0025765463,-0.008740735,-0.0049259868,-0.0021927813,-0.008406978,0.008286745,0.001683812,0.0012908472,0.0030700557,0.0012740127,0.003825965,0.0074375416,0.059823323,-0.010087684,-0.015223676,-0.00909183,-0.013165835,-0.01677385,0.0035645228,0.00058158825,-0.0032721404,0.053992063,-8.895821e-05,0.004294266,0.011585154,0.0040823915,8.213908e-05,-0.0032931045,0.0042402414,-0.02155666,-0.0030141955,0.00029948438,0.0031078106,0.0012721873}},
      {{0.0060389955,-0.005912141,-0.0081251785,8.601712e-05,-0.0038815755,-0.0008751265,-0.0010087129,0.00077287905,-0.009870463,0.005032699,-0.008462226,-0.004754685,0.022582553,0.011310402,0.0074057123,-0.007254867,-0.0033711938,-0.0049554505,0.0028756943,-0.007563665,0.018531905,-0.029784782,0.0055435956,0.0080076335,-0.00453013,-0.016383078,-0.005270399,-0.0057906862,0.07006848,-0.01073452,-0.014737844,-0.013319371,0.0046160948,-0.029251885,-0.0040597348,0.008131064,-0.004446755,0.028678397,-0.003756474,0.009765905,0.002591471,0.022226537,-0.0020574164,8.5161824e-05,0.0001449888,-0.03184328,-0.0024331382,0.0016423039,0.003719078,0.0043159747}},
      {{-0.005739621,-0.002220128,-0.010953216,-0.00321673,0.0003330451,-0.0009935104,0.0026190255,-0.0023015584,0.011794065,-0.005898649,0.0017156036,-0.012401224,0.004484727,-0.002640027,0.0014517881,-0.0074961246,0.0040524662,0.0066662263,0.0031097662,0.0047831265,0.0013274424,0.015336734,-0.003718771,-0.0034795483,-0.0018859175,-0.0024543013,0.0009948505,-0.008257965,0.052602623,-0.007936262,-0.018655607,-0.009344402,0.003388474,-0.023066923,-0.006287312,-0.002323477,-0.0070198616,0.048845656,0.0028724938,0.005103831,0.0051299273,0.005831196,-0.007973623,-3.204256e-05,-0.008393597,-0.020964408,-0.004214342,0.007959934,0.00018453533,0.003419115}},
      {{0.002587111,0.00038215576,0.0026013535,-0.0072066453,-0.0068524186,0.012628038,0.0054438845,-0.006061759,0.014665649,-0.014931811,0.011671279,0.0027651144,0.020031778,-0.00054783165,0.0072858506,-0.01115953,-0.005668851,0.016268345,0.014568232,0.009116674,0.0029668333,0.012158248,-0.00026537498,-0.0005374665,0.008486984,-0.004227244,-0.004727158,-0.006414753,0.04071588,-0.0011243584,-0.019606799,-0.022364272,0.0055785365,-0.025545046,-0.01097671,0.017555807,-0.0024848809,0.042031,-0.0046922104,0.008932135,0.00703169,0.019033669,0.017191015,0.0062053925,0.013372424,-0.0292543,-0.01299014,0.019473786,0.006170521,0.0047991797}},
      {{0.0061544925,-0.003068782,-0.0036486275,-0.009454514,-0.00586488,-0.00589078,0.00048560702,-5.9943297e-05,0.024596186,0.005697763,0.004743837,-0.0059525985,0.0069808112,0.001771996,0.0032540755,-0.006399429,-0.009006666,0.0020046225,0.010163505,0.0037479755,-0.001847608,0.017550083,0.0041478784,0.0026389104,-0.005869972,-0.00078254327,0.002852096,-0.0022562917,0.0477597,0.00070704473,-0.016368885,-0.017734325,0.0028191293,-0.02128956,-0.0069224783,0.0049013905,-0.0031470868,0.043666802,0.004063346,0.0042057913,0.005087879,0.0066078403,-0.003231194,-0.0014049442,-0.0034591253,-0.02532867,-0.0042706532,0.007118819,0.00040990525,0.004554604}},
      {{-0.0054429118,-0.0021185467,-0.0013596733,0.0029434771,-0.0064045573,-0.00171919,0.008531905,-0.010017987,0.015913626,0.00040200868,-0.0006102651,-0.002779216,-0.0012604716,0.0066710766,-0.003050817,-0.00072376523,-0.0033999844,0.0026610766,0.0049240864,-0.0012160401,0.0033624663,0.010684103,-0.0021978614,-0.005470692,-0.012675203,-0.002950858,0.0021703225,0.0035907154,0.044695012,0.0077620377,-0.009832204,-0.0126656955,0.015712827,-0.017175505,0.012084161,0.009511287,-0.0014301891,0.04514844,0.0007958473,0.0019623735,0.007940953,0.0010451525,-0.0063245744,-0.006232421,0.005284314,-0.007596134,-0.006130755,0.0076414575,-0.007415251,-0.00337602}},
      {{0.0031469865,-0.005985263,0.0030556761,0.0013854263,0.0071854126,-0.0054212315,-0.001785854,0.0068236627,0.0054291873,0.00045476877,-0.0049360003,0.0012632881,-0.0023864794,-0.0063076783,-0.0035510135,-0.0028632542,-0.0018569519,0.007958478,0.0006300652,-0.00034692985,-0.0024491635,-0.017370299,-0.0031312131,-0.00011859748,0.0060530514,-0.0032950686,-0.003969089,-0.0012859912,0.06668722,-0.0010391109,0.0023606732,-0.0015056847,0.011195667,-0.01707498,0.0015492706,-0.0050718784,8.949286e-05,0.042541847,-0.0037278587,-0.004526094,-0.0053142244,-0.0010747836,-0.024915293,0.011438361,-0.0034976339,-0.020432668,-0.011550564,0.0005707549,0.0044442452,0.0050364607}},
      {{-0.004237015,-0.0033045632,-0.0076740156,0.0022465987,0.0112555325,0.0051934705,-0.0054150666,0.00041968218,0.0016043122,0.00279575,-0.0007447013,-0.0016984866,-0.002020463,0.007325963,-0.0003909302,-0.0034879292,0.010676752,0.015522238,-0.0028164976,0.0057243095,-0.011633795,-0.041891955,0.011605872,0.0045249807,-0.02082726,0.0028857498,-0.00063155394,-0.00014765245,0.047897115,-0.0053413273,0.010736202,-0.016405486,0.013196161,-0.019441042,-0.005770627,-0.0012070982,-0.00389735,0.021913841,-0.0065517356,0.0039607645,-0.010577826,0.008999629,0.013228417,0.0054672984,0.008430086,-0.028048033,-0.0053816545,0.010074033,0.004442189,0.0039000928}},
      {{-0.004704472,0.0012437376,-0.0015626887,0.002264792,0.008865658,-0.0053422432,-0.00065164786,-0.005724102,0.012957494,-0.0043575093,-0.006545524,-0.0024350611,0.0032410107,-0.0021350486,0.0041765817,-0.0046128603,0.002597639,0.0028613799,0.0019695123,0.00029874995,-0.011889787,-0.03659771,-0.0033562232,0.00058904366,-0.012281082,0.00025676674,-0.009171941,0.0064684874,0.0615305,0.0013763574,-0.004767576,-0.0036813957,0.0054756664,-0.011086142,0.0025246,0.0017056533,0.0057586203,0.03104645,0.0046182005,-0.0017387036,0.0045496793,0.006580615,-0.010801107,0.0065167802,-0.0038376679,-0.027924363,-0.009023657,0.0044559506,-0.001141727,0.0072568147}},
      {{0.0075186775,0.0058857547,-7.41136e-05,0.0026899797,0.0047061373,-0.011823997,-0.009178284,-0.008930055,0.0060378076,-0.0028161122,-0.00397202,0.0026751605,0.024388615,-0.0068993056,0.0060654273,0.007770101,0.00024024093,-0.009201777,-0.0026405267,-0.0051035695,-0.004720279,-0.036458593,-0.012138407,0.00409774,-0.002805541,-2.7408707e-05,-0.0069701355,0.0063455584,0.06679825,0.023426564,-0.014054437,-0.019925153,0.023983428,-0.033521023,0.008127251,0.0015563255,0.0070198546,0.031806257,-0.00696907,0.0025829729,-0.007611883,-0.0022426005,-0.013647187,0.00636475,0.018263396,-0.02471693,-0.00588649,-0.010964003,-0.0069739795,0.0011487261}},
      {{-0.0015200814,-0.0012722329,-0.0033479903,-0.0044605397,0.0051969653,0.013718602,-0.005190553,0.008649215,0.018019717,0.007185962,-0.0006872979,0.0016097275,-0.0061178003,0.00770758,-0.0002038553,-0.011033584,-0.00129342,0.0074543464,0.0019743608,-0.0005673113,-0.0021764077,-0.016879577,-0.0022008854,-0.0025626824,-0.0066820863,-0.00040653924,-0.0026231075,0.0014947047,0.07940689,-0.001711097,-0.016552195,-0.016497742,0.010597924,-0.015389203,0.00041981545,6.403166e-05,-0.00057414605,0.03717756,0.0036769712,-0.008082262,-0.0021803544,-0.0050781355,-0.0192764,0.009180664,0.0035678379,-0.024090098,-0.008340461,0.0033271578,-0.007381118,-0.004316907}},
      {{-0.004484764,0.0010070694,0.0008913846,0.0057371696,0.007774974,0.02159778,0.0055943416,-0.00869866,-0.009217959,0.009660123,-0.0103432415,-0.0090986295,0.012813785,0.0022070115,-0.006603263,-0.016039714,-0.0041780653,0.00032061464,0.0012878464,0.008199005,0.0034855725,-0.051330302,-0.0043454636,0.0068338714,-0.011636451,-0.0072326814,0.0036800732,-0.007947327,0.050686393,-0.0047540083,-0.011042334,-0.011339798,0.00788634,-0.02395958,-0.0048404434,0.015233041,-0.0013251387,0.016856581,-0.009914252,-0.003975382,-0.010287895,0.0061337934,0.0059871743,0.002903757,0.013810112,-0.036151744,-0.0018111159,0.008936841,-0.013059389,-0.008841073}},
      {{-0.0038672606,0.0057722144,-0.00027971683,0.00938429,0.000544198,0.003470294,-0.004040291,-0.0015892067,0.003906918,0.0009596518,0.0007082965,-9.24045e-05,-0.008321319,0.009979779,-0.0092168385,-0.0037199184,0.0043526054,-0.0016989502,-0.0021648456,-0.003834134,0.00018884381,-0.044298988,-0.0019912268,-0.010577494,-0.014186167,0.0041249697,0.0019422857,-0.0076682325,0.0527489,0.003407564,-0.0069433656,-0.011523174,0.0053142854,-0.01071761,-0.010043527,-0.0044785524,0.0023718341,0.027538296,0.0003298946,-0.0028360118,-0.0024439925,0.0069341017,-0.013307463,0.0011522004,0.00319524,-0.018958023,0.00013537775,0.0072856788,-0.0020016665,0.003243285}},
      {{0.0051381304,-0.005131674,-0.0018196176,0.01844035,-0.0008512866,-0.0009871218,-0.0021793258,0.0027162635,-0.0049798046,-0.01436548,-0.0061809686,-0.004344131,-0.009952057,-0.004332537,-2.3017377e-05,-0.0005074914,0.0064290673,0.008898597,-0.008912902,-0.00088072685,-0.0027106265,-0.05362064,0.0017346342,0.0032988733,-0.016247543,0.0143142985,-0.008576417,0.016339831,0.041426156,0.010881762,0.0032709527,0.0027824587,0.016858073,0.001915987,-0.001726606,0.00630124,0.015218069,0.031934086,0.003357146,0.0007185726,-0.0029284628,0.01842029,0.013272988,0.0018810307,0.0053866645,-0.01282974,0.008892952,0.0038579504,-0.0121260015,0.008574663}},
      {{0.0013635604,-0.0032060666,-0.0006371074,0.0013109014,-0.00048169316,-0.0073050475,0.0006387338,-0.008780265,0.0002038537,0.002996273,-0.008670924,0.001669667,-0.009010786,-0.0042026034,-0.0017116999,-0.011030371,-0.0016477312,-0.0011943608,0.0027731932,0.007784583,0.0023684092,-0.018438272,-0.0036297725,-0.0032729886,0.001826169,-0.0043743374,0.0012415571,-0.0026284684,0.065184996,0.0044103363,0.00654704,-0.0011788988,0.0038316322,-0.0069069536,-0.002573068,0.004604775,0.0007850072,0.040249966,-0.0017294979,0.0012321866,0.0030985058,-0.012246579,-0.03526322,0.013725737,-0.0011576186,-0.014999102,0.0010461945,-0.0058481414,-0.0015964241,0.007372253}},
      {{-0.0044095577,-0.0018129027,-0.009298563,0.002396228,0.009703201,-0.0038331747,-0.00041696514,0.0060897954,-0.0064617423,0.00068025506,-0.0037988594,-0.00047048437,0.009046027,-0.0025783295,-0.0003812972,-0.0005567208,-0.0038553854,0.00045642644,0.017461604,0.009780222,0.0103951115,-0.02999373,-0.0028874013,0.0060190926,-0.0034119075,-0.002500039,0.0055055986,0.0007512718,0.063116856,0.008779383,0.004935346,6.69422e-05,0.0059569064,-0.0018770631,0.00034051546,-0.0044586407,0.008798512,0.030119328,0.012917211,-0.018671563,0.002256106,0.00947006,-0.00045529965,0.017942313,0.0013332681,-0.028051464,0.007780153,0.005780303,-0.0020223612,-0.009018228}},
      {{-0.004520754,-0.007679209,-0.00018934057,0.001945364,-0.00297336,0.000590379,0.0019208372,-0.0033442858,-0.010600111,0.003128049,-0.006242597,0.011063859,0.003966166,0.0075191697,-0.0015878789,0.0035575416,-0.000888142,-0.010802074,-0.0007763241,-0.00037176284,0.00606495,-0.032774825,0.0058693867,0.001198168,-0.0122020235,0.002302789,-0.000980705,-0.0011878554,0.067343704,-0.0018321197,0.0071015377,-0.010355499,0.005332598,-0.007219527,0.0039271596,-0.001317496,0.005264327,0.043389194,-0.004668936,-0.008292438,-0.0041590314,0.011521969,-0.009798931,0.008834489,0.0018534395,-0.0055418042,-0.0037856738,-0.0014784366,-0.0040172734,-0.009253049}},
      {{-0.0016432957,0.0050365236,0.006817865,-0.0058612814,-0.0010105598,-0.0081702275,0.008111631,-0.0009143544,-0.012686507,-0.009060953,-0.016420564,0.007977041,0.002776239,0.005568647,0.0077057565,0.008306651,-0.008405005,-0.004900403,-0.003406224,-0.004617005,-0.00040363017,-0.029614238,0.008240767,0.014247394,-0.012516817,0.012732545,0.00408999,0.0054599135,0.07073782,0.0048129763,0.0002551511,0.007911161,0.015429991,0.0023918191,0.013453087,-0.011325752,0.0126098525,0.047579527,-0.0072468836,0.004948025,-0.00068145845,0.0072826054,-0.005161895,0.00677884,-0.0014737389,-0.00751561,0.000652569,-0.015376696,-0.008515633,-0.00088997855}},
      {{0.0017467912,-0.0014813354,0.0009618524,-0.001346662,0.00047817614,0.008119829,-0.0004847688,0.010718803,-0.00713433,-0.00025965384,0.005892545,0.0039982125,-0.006288091,0.009713525,0.0059280554,-0.010866433,0.007497608,0.0054342207,-0.008147471,-0.003767099,-0.0010648823,-0.024010478,-0.0035291833,-0.002623777,-0.014936934,0.0010680157,0.0068775117,0.0013551203,0.07445698,-0.009276932,0.0033050464,0.00097368244,-0.00695971,-0.0065237647,-0.0015300505,-0.0005750914,-0.0016468489,0.042664584,-0.002536722,-0.009614129,0.0014567174,0.00068273384,-0.010057512,0.0080168685,0.00281452,-0.018005315,0.0026166535,0.009559964,-0.0034828067,-0.0050996877}},
      {{-0.010237324,-0.0068526696,0.0016572571,0.003079482,5.352345e-06,0.009731868,0.0045510717,0.004175097,-0.027823882,-0.013586293,-0.006361153,0.006473871,0.0068190917,-0.0012584246,-0.00020712687,0.0028869938,0.0054638274,-0.00714403,-0.0051968647,-0.009899507,0.002701178,-0.032428812,0.007178953,-0.006948998,-0.0048481068,0.0026857345,-0.014760514,-0.00083186734,0.05433671,-0.0072846683,0.005852452,0.010581214,0.01648071,-0.012786482,-0.0015839357,-0.0066097383,0.0022296063,0.034231678,0.008548403,-0.0052848347,-0.017631717,-0.0050356295,0.0077189314,-0.00041583026,0.0073381066,-0.019981721,-0.004996195,0.009471819,-0.0010731543,-0.010464874}},
      {{0.0039630965,-0.0042645554,-0.0069394936,0.0069860825,-0.0035464694,0.0046510757,0.0014851271,-0.00075470534,0.00793035,0.006991931,0.0045550326,-0.00047205287,-0.01678872,-0.0034990406,-0.0021892032,0.0011205946,0.0059160367,-0.0071996003,0.0002339543,0.0064391387,-0.00029472276,-0.02939055,-0.0013922186,0.0012619401,-0.0011363721,0.0057155807,-0.0012570117,-0.0016124076,0.05942175,-0.0063939746,-0.0016125328,-0.00062959106,0.0076536024,0.01029772,-0.0007536618,0.004266455,0.0028888306,0.042213935,0.0021138096,-0.002512856,0.0050675245,0.008591234,-0.008305313,-0.0072725327,0.0113871535,-0.0064922376,-0.0004986314,-0.0053835083,0.0039920234,-0.010406012}},
      {{-0.007820923,-0.009461889,0.0010050863,-0.0025721337,-0.004332698,-0.0011643221,0.0009194804,0.0044846404,-0.013367787,-0.00934182,0.00064916,0.0027091992,-0.010746146,-0.00072116376,0.0027484598,-0.0023999154,-0.0027097203,-0.0022661167,-0.005503952,-0.0035073024,0.0003591748,-0.016887272,-0.0010564978,-0.008291354,-0.006928451,-0.0014235915,0.008554924,-0.0060985563,0.059753466,-0.014704262,0.003328985,0.0074451747,0.015548343,0.002508924,0.0022402995,-0.006778689,0.009747213,0.04784266,-0.00025874152,-0.0032519687,0.0021556797,0.0073133255,-0.0045783087,0.0076845707,0.0015094894,-0.0014814697,0.0032183556,-4.7150963e-05,0.009404738,0.0024688065}},
      {{-0.0024615487,0.0028911214,0.00022118955,0.00035610102,0.0040782695,-0.00073555956,-0.00023361375,-0.006361317,0.00866744,-0.0011962441,-0.0032968773,-0.0019080628,-0.022294767,-0.005465206,0.0014745165,0.0049375985,0.00042279725,0.0011523326,0.0023116136,0.0024554299,-0.0036137144,-0.016155286,-0.002758368,-0.0009178356,0.0008241529,-0.0010842386,0.0018878267,0.00801895,0.068433404,0.002007138,0.012840044,0.0070781372,0.0047032684,0.007583397,0.00190434,-0.0022159566,-0.00049771415,0.05061071,0.0018684893,0.0013671996,0.0034627016,-0.010017475,-0.015691878,0.009562462,-0.0018796315,0.0044900742,0.0022389458,0.00081447104,-0.0010079918,0.004807494}},
      {{0.0059876405,0.00033487397,0.0005476939,0.00029151756,-0.009032559,0.009021115,0.003444141,-0.0017224373,-0.0024983226,0.008910307,-0.0014770691,-7.346196e-05,-0.0030816281,0.0018099565,-0.005512992,0.002256068,-0.005179843,0.005733565,-0.00011075192,0.008636816,-0.0028559836,-0.02903757,-0.00024127479,-0.006037275,-0.007987465,0.0018152168,0.01017563,-0.0015411903,0.052050762,0.010664193,-0.0047669867,0.009733557,0.01968957,-0.0026614515,0.013764692,0.003059443,0.010420858,0.039530482,0.003106354,-0.010702211,-0.0032668558,0.008950218,-0.000600661,0.010826243,-0.00023809257,-0.0024502329,-0.0055097123,-0.00076055015,0.0018427919,-0.00083961606}},
      {{0.0017875634,0.005327142,-0.0011003014,-0.00018697148,0.0040736743,-0.0014341428,0.0022070433,-0.010376714,-0.0110012675,0.00477112,-0.0031774258,-0.00057600084,0.0010148385,-0.003196299,-0.00045295263,-0.005377112,0.00043439004,-0.011035013,-0.002377746,0.004024496,-0.010665143,-0.024704678,-0.004224363,0.0077160923,-0.010018022,-0.003891196,-0.007228153,-0.0016348438,0.061054092,0.0019227079,0.0039439723,0.0015901813,0.009472611,-0.008832733,-0.0012106571,-0.0018113982,0.003006821,0.055542473,0.0043019988,-0.0034067014,-0.0008502293,0.01307622,0.011135463,-0.0013493937,0.0032014234,-0.0012193356,0.0022259122,-0.0058574495,0.00033617037,0.0021808746}},
      {{0.0047462215,0.01203566,0.0013841537,-0.0028574339,0.015787652,-0.0061612423,0.002513979,-0.004668528,-0.0013900162,-0.0072188093,0.0067157857,0.00036596137,-0.006892171,0.01557735,-0.0035312986,0.002495266,-0.0009512709,0.0045870766,-0.00023032536,-0.0092835575,0.002449693,-0.01894115,0.00081959873,-0.011755243,-0.012536415,0.0035237605,-0.005317859,-0.0058299117,0.05613491,0.0019249219,-0.017017897,-0.006860017,0.010673097,-0.007637313,0.0019305918,-0.005382369,0.004665422,0.05723071,-0.002379386,-0.010444475,2.7115486e-05,0.004468713,0.006880638,-0.0053963265,0.012437215,0.0007551534,-0.009364629,-0.0055796225,-0.0024246247,-0.0050487705}},
      {{0.00237917,-0.0019120924,-0.0033705174,-0.0015650914,0.0060397335,-0.0041108774,-0.005466337,-0.0012416216,0.003416717,-0.006976204,-0.0017958588,-0.0006419277,-0.00045461903,0.0011352531,-0.0024931824,0.013090056,-0.0016536018,-0.0016212544,-0.0009238501,-0.0058019483,-0.00056072074,-0.0006043795,-0.0035400465,0.0033163566,-0.002410004,0.0017162744,-0.003424638,-0.00027990816,0.07631627,0.007205839,-0.0006428233,0.0075333137,0.004474291,0.0047260574,-0.0033741628,0.00021061432,-0.0019833858,0.064646386,0.006017979,0.0035867402,0.0066913445,-0.0014066239,-0.005884924,0.006989261,4.037515e-05,-0.0028495407,0.004848314,0.0008261846,-0.0025781034,-0.0019576561}},
      {{-0.009062454,0.014105644,-0.0082419235,-0.00047795704,0.0008656073,-0.010830697,0.004770827,-0.012655311,0.01937699,0.0029775947,0.006364832,-0.002347126,0.010927759,-0.0028814946,-0.009039523,0.011796047,-0.0039481954,0.0035934576,-0.0023993617,-0.008207609,-9.267312e-05,-0.016996581,-0.004137936,-0.0070635495,-0.0025316915,0.006508519,-0.0014532792,0.009328971,0.0621719,0.0047425907,-0.00779369,1.8359193e-05,-0.00071207347,0.0011624489,0.00072525593,-0.010452054,-0.00085269334,0.056255862,0.003143172,0.0079650935,0.004776116,0.012472401,0.006252421,-0.0010063557,-0.0031111492,-0.009454367,-0.0045555383,0.002541166,0.012166988,0.016155005}},
      {{0.00427223,0.0028628593,-0.00017827698,0.011440666,-0.008963027,0.0013422663,0.00034776577,-0.0011819017,0.001150516,-0.00020287359,-3.870764e-05,-0.00054465845,0.0013592818,0.0015769666,0.005058461,0.00018495612,0.003290268,0.010140197,-0.0054674475,0.007736407,0.0019001632,-0.018897625,-0.0040979143,-0.0007538544,-0.0050271265,-0.0043352004,0.0065505877,-0.004533517,0.06296835,-0.0018383842,-0.005797151,0.0048434506,0.0032612411,1.29709115e-05,-0.0046053925,0.001018592,-0.0022748006,0.05582275,-0.004911392,-0.0023148148,-0.0109985685,0.010248893,-0.00928017,0.0024497623,-0.0013649779,-0.0077458816,-0.009213609,0.0038774202,0.003992414,0.0013517847}},
      {{0.0021294965,-0.008013639,0.012022017,0.00844268,0.011708993,-0.008959657,0.0025790757,0.0048283087,0.0067390613,-0.013962334,0.0044833277,0.004835305,0.018125715,-0.0010316733,-0.006343367,0.01126693,-0.0064829937,0.0045631356,-0.010086348,-0.003745698,-0.0023887896,-0.023910865,-0.00023931469,-0.009310859,-0.012493337,0.0043001096,-0.012784509,-0.0032519447,0.06916982,0.009282393,-0.024796547,-0.00025376346,0.012676744,-0.013494211,0.0088103525,-0.0046861847,0.009331099,0.05827289,0.002085906,-0.004752326,-0.015235011,0.012998028,0.01936988,0.0033011104,-0.017265994,-0.012939947,-0.0050270213,-0.005312644,0.0029709789,-0.00038303767}},
      {{0.0034719212,-0.001090687,-0.00047885868,0.0033595166,0.00281971,-0.00029204617,-0.0021098377,-0.00017640715,0.0051940265,0.003381974,0.0031855144,-0.0005806634,-0.018991135,-0.0012851609,-0.00035191505,0.013674525,-0.00080898736,-8.030622e-05,0.009158072,-0.0008572547,0.0030346995,-0.014118087,0.007140515,-0.005228289,0.0011759606,-0.0005282473,-0.005017075,0.003427958,0.06409161,0.0001311921,0.009837469,0.0085181855,0.011165656,0.0016442328,-0.0021090114,0.0003866666,-0.002269414,0.057449736,-0.0015410047,-0.0013964382,-0.0015353438,-0.011398825,-0.016546886,0.010482406,0.0059837312,0.005725672,0.0005537194,0.0070525813,0.0073946672,0.0038656113}},
      {{-0.007764644,-0.0077270297,-0.013605299,0.008041524,0.003623707,0.0066889096,0.0026804896,-0.011684333,-0.018186629,-0.00033385924,-0.0073744003,0.0026914023,0.012463283,-0.0011419175,-0.0058258115,0.005863978,-0.0020655813,-0.0038193644,0.0112175755,0.0024312602,-0.004418829,-0.032503944,-0.0027769506,-0.0033166395,0.0069934675,-0.0059832847,-0.010198038,-0.010986061,0.045576245,0.0067153545,-0.0039155656,0.012959805,0.01442055,-0.023447221,8.9769565e-05,-0.011786333,0.01146383,0.04798779,-0.012626087,0.00509739,-0.003041161,0.014887614,-0.004863252,0.023244016,0.0015724899,-0.021864694,0.0036539296,-0.005459637,-0.004355739,0.0053923866}},
      {{-0.0029813775,-0.00073074125,-0.0015414304,0.0062597734,0.0008988466,-0.005479193,-0.0017561471,0.0031893472,-0.0011624214,-0.0017722418,-0.0023768588,0.0038548284,-0.00181073,-0.0041496786,-0.007615275,-0.0067798933,0.0021433372,0.0032833116,-0.0015434765,-0.003991302,-0.0028804576,-0.02608927,0.0030726017,0.0028350702,0.0030580156,-0.00093028304,-0.0057429974,-0.0049299467,0.055934835,0.004498638,0.0010145839,0.0051002554,0.021314515,-0.005873119,0.0070407884,-0.005311197,0.005262779,0.05659595,0.0038925908,-0.0010949844,-0.0022606126,-0.0072960793,-0.0047495575,0.0005365629,9.8325436e-05,-0.003656245,-0.008331376,-0.0038925612,0.0068358495,0.001148121}},
      {{0.0001208651,-0.0039359434,-0.0018083847,0.011750155,-0.009929739,-0.0030534728,-0.0025487097,0.0056854747,0.0032373308,0.00464069,-0.0034720527,0.011610573,0.0018077652,-0.00078302657,0.003711131,-0.0060325214,0.0031836126,-0.015974341,-0.007903208,-0.0026763848,0.0010394874,-0.026608188,0.002887745,-0.0009032666,0.0007574246,-0.0069713434,-0.0056895884,0.00096790097,0.05802846,-0.0013321174,-0.005016479,0.01900574,0.026498865,0.007568536,0.015952207,-0.003960215,0.0008418142,0.050231744,0.0017822194,-0.0035587007,0.0003576904,-0.008025827,0.007898392,0.009814643,0.0016361623,-0.010088971,0.009758184,-0.011567546,0.004121545,0.0054703467}},
      {{0.00086397893,0.005826686,0.0009613637,0.015690256,-0.006009491,0.006989245,0.004431906,-0.0010228093,0.013242058,0.00075575424,0.0024505332,-0.0019176059,-0.02219798,-0.006057649,-0.0034355572,0.016255619,-0.0030413023,0.004444577,-0.007825825,0.002140392,0.0074126287,-0.019323548,0.004137974,0.00039520074,0.011135494,-0.0005247705,0.009080033,-0.00051367155,0.060052235,0.006211827,0.022671461,-0.0022888454,0.003873997,0.012121906,-0.0017986257,-0.0051267766,-0.0043349946,0.055827994,-0.0054213144,0.0018423282,-0.00093643204,-0.021605013,-0.01747118,-0.0042471457,-0.002068187,-0.0021415087,0.0024990628,0.0008652236,0.005785134,0.006283771}},
      {{-0.00039033743,-0.0028084281,-0.0042407042,0.021554822,-0.0007344976,-0.006141813,0.0024794764,-0.008811193,0.004671124,-0.00427981,-0.010940998,-0.00096686446,-0.002390601,0.008038577,0.0007265673,0.021829937,0.0056578736,0.011280259,-0.004242135,-0.005062737,0.0028686123,-0.016312366,-0.012218347,-0.017952375,0.0032732713,-0.018559504,-0.0021807186,0.013033907,0.04847194,-0.0061092866,0.006203201,0.0127471,0.016478958,0.0036670682,0.008356446,-0.0031325936,0.012798939,0.05765904,-0.007530553,-0.013043229,0.0046156617,-0.0016051083,-0.011797838,0.0001586494,-0.005266645,-0.0110720955,-0.006578202,-0.0090242205,0.0072395857,-0.004113129}},
      {{0.0011627353,0.00152288,-0.0031971803,0.020411242,-0.0032949252,-0.00036317654,0.00041331328,-0.003524148,-0.0052529173,0.0023846356,0.0014252282,0.00093878346,-0.0012898324,-0.00382339,-0.00016758316,0.024457537,0.0025212874,-0.001738764,-0.0015599148,0.0051968,0.006639387,-0.02219962,-0.0054741683,-0.00018011798,0.014598643,-0.0039214655,-0.0074911504,0.004112395,0.055865243,-0.0005209425,0.0167327,0.014651577,0.004315704,0.014737507,0.010705649,0.002378126,0.0031792594,0.053409517,0.005144162,0.0010074415,-0.0034999663,-0.0050888816,0.012963565,-0.0030552351,-0.0018801454,-0.020994747,0.0035800776,0.0016039026,-0.0031197662,0.0007455953}},
      {{-0.0014474563,-0.0026512903,0.006538015,0.004588918,0.014260858,-0.00010681409,-0.003613303,0.019462477,0.0012361915,-0.007648608,0.007713238,0.010544271,-0.0067902706,0.0064844694,0.00075494207,0.013839335,0.00036190238,0.0073027364,-0.006202839,0.007133043,0.0044467305,-0.027943192,-0.010468743,-0.0062285447,0.010773431,0.0028020618,0.0019267134,-0.00033079842,0.054459266,-0.0033304463,-0.00053676026,0.019846322,0.008340318,0.01144026,0.004684488,-0.010663806,0.0057028835,0.04932243,0.0022731507,-0.020386806,-0.011145516,0.0053352728,0.02864684,0.006196362,0.002189867,-0.026855893,-0.0036691441,-0.010587058,-0.0016253056,0.008095674}},
      {{-0.0004357263,-0.005148297,-0.003065767,0.002847312,0.0012688242,0.0059696124,0.005641682,0.005991796,0.010256685,-0.0031358253,0.0070900368,-0.0057683713,-0.04726563,0.004777683,0.00015975718,-0.0002008487,0.0054714917,0.0026878747,0.006797365,-0.004338326,-8.109238e-05,-0.022258267,0.0020334662,0.0002887397,0.003202459,-0.0057046483,-0.0015968872,-0.0006735592,0.049286306,-0.0028193877,0.004737413,0.016552182,0.0061000916,0.011449349,-0.003593036,0.004097973,-0.0023231327,0.042055972,0.0011284731,0.007587211,-0.0049843085,-0.017265284,-0.025022993,0.00028370184,-0.00073901494,-0.0030435626,0.0013587243,0.010960572,0.002075102,-0.0010772282}},
      {{0.0018007831,-0.0024452757,0.009338099,0.0024018348,0.0070408164,0.0010303265,0.0051645166,0.021361,0.0006914444,0.0044182683,-0.005885221,-0.0037320028,-0.020740703,-0.00079626427,0.0109153185,-0.01068026,-0.0069640954,0.0019122249,0.0036662645,0.00050788256,0.005887113,-0.025918832,0.012003288,-0.0038512202,-0.0016540342,-0.0030827345,0.009011548,0.0020353848,0.047168955,-0.01427494,0.0024357215,0.027416613,0.015223465,-0.009855672,0.004687147,-7.85182e-05,-0.003684036,0.04260869,-4.4005035e-05,-0.00651241,-0.010459933,0.0002820773,-0.032793414,0.005697031,0.003611293,-0.010137041,0.002353139,0.007047467,-0.017789254,-0.0057012206}},
      {{0.006984982,0.0008494422,-0.0022678433,0.010696664,-0.0047089397,0.004014808,0.00090255187,0.008123581,0.0027935354,-0.0064025023,-0.0035325254,0.0035185576,-0.011146834,0.008424909,-0.0035109264,-0.014900499,-0.004059738,0.004732011,0.0009045642,0.0008417027,0.0012088906,-0.020233963,-0.0014306466,0.003689993,0.014512644,0.0029223482,0.0011528912,-0.009268679,0.05839194,-0.0068720016,-0.004384838,0.018346982,-0.0033833762,0.001100657,-0.0004542182,-0.00067617995,-0.0024015093,0.047350965,-0.0022472015,-0.001570438,0.00014880598,-0.016504867,-0.014616504,0.0014695309,0.000952118,-0.025741968,-0.0033103297,0.0049852626,7.017622e-05,-0.0015704132}},
      {{0.0056424877,0.008113358,0.004097393,0.006714441,0.007543976,0.0025935366,0.018680558,0.010903482,0.019641958,-0.009425433,-0.007385023,0.009262584,-0.0009673652,0.016256155,0.0025308584,-0.00659053,0.008938469,0.008332163,-0.018950893,-0.00040098478,0.0075480663,-0.02749747,-0.0012871912,0.0041093035,0.0016550351,0.0052296505,-0.0048733633,-0.011124541,0.06216307,-0.0017474565,0.003833086,0.012012774,0.020172946,-0.010873054,0.019077696,-0.008952117,-0.0028311247,0.04802097,0.003633372,-0.021388302,0.0045055393,-0.00972896,-0.012573506,0.0003775494,0.0111205205,-0.015155198,0.006600248,0.002101498,0.0022071723,0.00366919}},
      {{0.0015792269,0.0015335557,0.0010842257,-0.0062006637,0.00919646,0.0008371583,-0.0020730975,0.009047308,0.025891079,-0.0031437362,-0.0003640085,-0.0012614758,-0.042006627,-0.0012764789,0.0026936932,0.0010776842,-0.0058564767,0.0030517764,0.006193858,0.006212399,-0.0033669758,-0.023496259,0.0039005305,-0.0011799735,0.00801345,-0.0019328583,-0.0037534786,-0.00034030408,0.054210365,0.0048249452,0.012492718,0.017231414,0.0060815946,0.011927797,-0.006328307,-0.00054084125,-0.005515004,0.041733593,-0.0009980351,0.003514016,-0.0026010727,-0.023428846,-0.020392705,0.007380798,0.0016444032,-0.012059318,-0.0023553784,0.010750672,0.0047536124,0.0028085255}},
      {{0.004294533,-0.010491778,-0.0017257706,0.0032834467,0.016543193,-0.004304094,-0.0015496814,0.010216151,0.0036611918,-0.0053721755,0.00079870044,-0.0075811003,-0.008605655,-0.013724558,0.0034494663,0.02095076,0.010739284,0.0034608177,0.010309984,-0.0017924637,0.0062208422,-0.037915416,0.004012047,-0.004228931,0.0033884088,-0.0065804785,-0.003936076,7.4311116e-05,0.048442908,-0.0017476961,0.02030622,-0.0007631616,0.019650137,0.006536889,0.0077112024,-0.005941732,0.00037866132,0.050351072,0.013468705,-0.0018393742,0.0026152967,0.0019026975,0.011145013,0.008740107,0.00031533587,-0.0044327695,-0.011859557,0.009096431,0.0025133297,0.008691144}},
      {{-0.0030399116,-0.0026092532,0.0042618825,0.0063102026,0.0004344688,0.0016258602,0.0020338632,0.007908445,0.008426924,-0.00062113424,-0.003111103,-0.0047116093,-0.025335671,-0.0059693973,0.0017635064,0.008036664,-0.0026062394,0.003198732,0.011157534,0.00046292698,-0.0057291635,-0.01774666,0.0021461286,-0.008668171,-0.0002494352,-0.0028998838,-0.0110464,-0.009073384,0.03696755,0.0060143825,0.03098455,0.021268176,0.009768314,0.014920809,0.0030140001,0.006081452,-0.005722015,0.04822169,0.0021304856,0.0070113083,0.0006573516,-0.009107013,0.0011527257,0.0024407848,0.0059685716,-0.013824413,-0.0065894886,0.0025885187,0.0006890287,0.0029005816}},
      {{-0.0046989927,-0.010420148,0.002645185,0.011054159,0.010976889,-4.400818e-05,0.0032493237,0.012616122,0.023835737,-0.0068165613,0.005896386,-0.006525224,0.01221134,-0.0025507503,0.007518956,0.019990087,0.011695119,0.0067338073,0.020912785,-0.0011790111,0.00034497466,-0.012015045,-0.007266136,-0.01260131,0.0015174849,0.002852998,0.0044422587,-0.0024921452,0.038612247,0.0048104534,0.0017280856,0.009713758,0.011901881,-0.008015225,-0.006793691,0.0016860893,-0.0005506919,0.053723987,0.010263717,-0.010460333,0.0013940028,0.0019268718,0.0081952,-0.0066256844,-0.003679298,-0.029606216,-0.006889628,0.0022255208,0.015255463,-0.00023433166}},
      {{0.0016311955,-0.004840276,-0.0013770141,-0.0022892077,1.566677e-05,-0.0048625697,-0.0009726576,0.016939688,0.019903325,-0.006260704,-0.0025934514,-0.0006463072,-0.024443887,-0.008131305,0.007872928,0.0021970228,0.0055449936,0.0073937452,-0.0008930815,0.0002602539,0.0047684666,-0.0030864363,0.0026898775,-0.0036985439,0.012062733,-0.003808287,0.0024884983,-0.0023853176,0.04850013,-0.0015663919,0.0035607428,0.026591424,-0.014411875,0.021265406,0.004096283,0.0007650151,0.0021263831,0.047919966,-0.00405306,0.0013670988,-0.005217221,-0.020367539,-0.008350602,0.008941877,0.010317287,-0.028636068,0.00014867357,0.0065272255,-0.001306521,0.0013463738}},
      {{-0.0030517515,0.010746333,-0.0035575316,-0.008806997,0.010785297,-0.01113134,-0.00014923734,0.0049764523,0.0007663969,0.0038059347,-0.01725931,0.0010977212,0.0034546438,-0.015853599,0.012199664,0.0054828986,-0.012537196,0.020417906,0.0074530663,0.01279058,-0.00018330441,0.0071152183,0.003058425,-0.007804297,0.012352336,-0.011874101,0.0037259213,-0.006669148,0.03931178,0.0054528224,-0.021232363,0.026304333,0.00977103,-0.0024694644,0.0041044247,0.013246986,0.001698451,0.058984447,-0.008415,0.009304212,-0.0009822014,-0.015450008,0.012905671,0.01100421,-0.013905623,-0.0337095,-0.009262304,0.0074072443,-0.0041217445,0.017166784}},
      {{0.001688294,0.005550237,0.0016668248,-0.0050315256,-0.0017712635,0.00080123555,-0.000762018,0.012949522,0.020239044,0.0037281753,0.0012462802,0.0007042038,-0.028168434,-0.006887486,0.0060999976,0.0040037245,0.0010790785,0.0021896218,0.0017661363,0.0013628033,0.0069862315,0.0037302612,0.004762605,-0.0013727252,0.01225841,-0.00078547664,-0.0033263357,0.002283033,0.037169423,0.008320448,0.0034565162,0.025741382,-0.009909509,0.025496993,0.0011575087,0.0039142584,0.004115529,0.052671123,0.00012085159,-0.0028987094,-8.9432826e-05,-0.009568478,-0.00062308274,0.005886663,-0.0055188877,-0.024436932,-0.0016158742,0.004027815,-0.0006724099,-0.002437894}},
      {{0.0074415496,-0.014643341,-0.0039708493,0.005775019,-0.00052618847,-0.011345909,-0.0038931337,0.0143058365,0.0030178237,-0.011546423,-0.0028019836,0.0013741998,0.014738707,-0.00842815,0.0055876104,0.01889624,-0.015117114,0.016634183,0.013873969,-0.00089271565,0.008322327,0.010053063,0.0009744887,0.0013315842,0.0046103275,0.0021368347,-0.000375008,0.0022953306,0.04438902,0.009210375,0.0155539,0.02356497,0.006847735,-0.0036960233,-0.002694165,0.0060399035,-0.0046748584,0.07030542,0.0043818974,0.0006926081,-0.009569139,0.007941686,-0.004428634,0.012494316,0.0063462495,-0.027073862,-0.004101497,-0.005634086,0.00044496698,0.018282844}},
      {{0.0048317914,-0.0015760128,0.004035067,0.0049766875,0.0034013242,0.0018767351,-0.0056604343,0.02861594,0.03334988,0.0007844598,-0.00702818,0.0019857588,-0.032761138,-0.0007743321,-0.00132596,0.005113504,-0.0025144026,0.0051603247,-0.0024349403,-0.002853327,0.008802092,0.010676216,7.690795e-05,-0.007367745,0.015250966,-0.00041505543,-0.0068570618,-0.0016455462,0.043570727,-0.0009490844,0.01294522,0.030071976,-0.0040884744,0.029866321,0.006155557,-0.003912834,-0.0005137426,0.060850903,0.0012952124,0.0014332633,-0.0034646564,-0.0033767615,0.003626613,0.017930932,-0.003388665,-0.02639746,-0.0010869636,0.0054814965,0.0032877726,0.002134221}},
      {{-0.0011133561,-0.0027873614,0.011594062,0.019916233,0.00025610812,0.0010157945,0.0075812726,0.00034025195,-0.008033781,0.004231619,-0.014027064,-0.009908456,0.0041694883,0.002920697,0.004746142,0.011203649,-0.005174262,0.0010514688,0.009438843,0.0027453757,-0.0020103632,0.024285857,0.0076595806,0.005434841,0.0077707632,-0.004251063,-0.013643971,-0.0067640627,0.047782477,0.004511509,0.0329882,0.024746906,0.006996791,-0.010350129,0.016799962,0.0026336582,-0.00015980053,0.08697669,0.012370459,-0.0021114259,-0.00522257,-0.011927548,-0.003092689,0.024793051,0.001225179,-0.014622303,0.004039764,-0.007008971,0.0126372,0.001432241}}
    }};
    
    embs4 = {{
      {{0.50501746,0.22595674}},
      {{5.069196e-06,2.4434017e-05}},
      {{3.418672e-05,5.5723965e-05}}
    }};
    
    embs5 = {{
      {{-0.108832985,0.1266942,-0.02712354,0.04047525,-0.02938968,0.2325337,0.14185253}},
      {{-0.00015373559,0.0007298841,0.0003636506,-0.0007744179,-9.7095566e-05,-1.7622106e-05,-0.00019251078}},
      {{0.00026408528,-6.610129e-05,0.00017080239,-0.00023786529,-0.00068538723,-0.00025166635,-0.0012424769}},
      {{-0.00013224769,-0.00025136344,-0.00027308843,-4.4630142e-05,-0.00054183375,0.0004265143,-0.0015048725}},
      {{0.006721814,-0.0018849095,0.0014787985,0.013061923,0.003340347,0.0027858699,0.0059071532}},
      {{0.011523725,-0.062789366,6.2838364e-05,-0.010238557,0.0026847497,0.000883243,0.00022322523}},
      {{-8.042806e-05,-0.005738246,-0.003446496,0.0061554383,0.004780334,-0.0017059641,-0.009775615}},
      {{-0.0011455076,-0.06085755,0.0002900242,-0.00803591,0.0042779744,-0.0044404534,-0.0014927823}},
      {{-0.018991956,0.024771009,0.0033749032,-0.005577809,0.02808787,-0.0036327865,0.008024567}},
      {{-0.030041689,-0.09081599,0.001963791,0.026579084,0.0119025195,0.021979513,0.018717304}},
      {{-0.011491087,0.01573216,-0.0061846357,-0.020584833,0.002517247,0.013098356,0.010678496}},
      {{-0.033177223,-0.06886823,-0.005347152,0.027148454,-0.024976846,-0.021558305,0.030264765}},
      {{0.022707434,-0.006622173,-0.023287343,0.002401567,0.005014804,-0.0042956457,0.0153556885}},
      {{0.082749106,0.016124576,0.0037524921,-0.01764987,0.013302596,-0.003058868,0.056387704}}
    }};


    in_h1 = {{
      {{-0.01138671,-0.0071298787,-0.00014209347,0.0016479051,0.0029965986,0.012264104,-0.0074507315,-0.00025148742,-0.00020846605,-0.0004866788,-6.0306982e-05,0.0006329476,0.0031183218,-0.0047648344,0.0005396561,0.0002837346,-0.0014919793,-0.0005264481,0.0006656565,-0.001068487,-0.0002530876,0.004101572,-0.0009993894,-0.0010588648,-0.0010778813,0.0006567435,0.0036063546,-0.0007749056,0.0003516544,0.00027615952,-0.0040130764,-0.0010065482,0.0005348498,0.000787137,0.0049068807,-0.00024395867,-0.0006294783,0.0014559431,0.0016001115,-0.0010031627,0.0003107382,-2.6753423e-06,-0.0011208912,0.0006305519,-0.0006814388,0.0001663455,0.0006396798,0.0017794608,-0.004634957,-6.297519e-05,0.00037749583,-0.0016233249,0.0019135086,-0.0019668692,0.00039978887,0.00019970526,0.0005616763,0.0007691872,-4.9662962e-05,0.00017950482,-0.0011506806,0.00074887095,-0.00065646105,5.594064e-05,0.00024317918,-0.0027995992,0.00020841684,-0.00020255345,0.0004500905,-0.0005819918,-0.0026457151,0.0007505725,0.00017593411,-3.0891784e-05,-0.00035133734,-0.00047798632,-0.00132076,-0.0003953188,-0.00021211182,0.00043342597,-0.00016518073,-0.00020088293,0.0027887274,-0.00072754995,0.001908367,-4.885453e-05,0.0009911332,0.0003397178,-0.0073333266,-0.0022081034,0.0038497108,-0.0034371717,-0.0010297426,4.502735e-06,-0.0005507692,0.0016903108,1.2456396e-05,0.0009368841,0.0007503724,-0.0007984107,0.006498102,0.0019403944,-0.00035698293,0.0052042603,0.0012358982,-6.0235514e-05,0.00014330792,0.000804848,0.0003033874,-0.00016442683,-0.00024279142,0.0005361301,-0.0027687645,-0.0017334969,0.0015021916,0.00086522946,-0.0017143784,-1.0948896,-4.6421456,-0.63321835,2.480779,29.88769,1.2878512,-1.5890602,2.8717604,-0.19613175}},
      {{-0.14692453,-0.017349996,0.094661236,0.058497682,0.046237327,0.3328313,-0.12830512,0.054698605,-0.10297561,0.0022045376,0.00053419627,0.0022973893,0.002693405,-0.01288566,-0.002549154,0.002444854,0.014531149,-0.0073831524,0.023478666,-0.008741513,-0.008176599,0.043486387,-0.0061317724,-0.024029339,0.009020945,0.008231975,0.037362047,-0.008525934,0.014103415,-0.0014763718,-0.035658482,-0.006367504,0.0067322683,-0.0007002685,-0.020057518,0.0045036655,-0.00031216667,-0.034798477,0.011983628,0.0032366756,0.006587858,-0.0019366601,0.00038768002,-0.0048284354,-0.002841642,0.0035694395,-0.004805019,0.032949664,-0.025720429,-0.003376076,0.0020124768,-0.008038655,0.025049116,0.009921352,0.0003938176,-0.0012267182,-0.0060443818,-0.0015582934,-0.0012673684,-0.00087168766,0.0059147147,0.016651431,-0.004232714,-0.015648266,0.0021724398,-0.035756543,0.032605823,-0.0022706238,-0.0055384827,-0.00029959134,0.013651956,-0.010774354,-0.0027011912,0.0350046,-0.0069755367,-0.008809842,0.014960247,0.0035536948,-0.0029386254,0.060219042,-0.001311763,0.0048539517,-0.0031099322,-0.005356001,0.0013565152,0.0039296597,0.0022603045,0.017830817,0.0028393564,0.004569945,0.039490737,-0.009750752,-0.0027013945,0.0035480943,-0.002672897,-0.03470716,-0.0013892221,0.008476904,0.0011735861,0.006781266,0.055414468,0.0029458934,-0.00963161,-0.023656975,-0.006743995,-0.018198527,0.0021329043,-0.0015158928,0.0042290166,0.0032256984,0.008856057,0.011918322,0.002508044,-0.05714743,-0.0072927414,0.006794751,-0.0034718688,1.639253,1.4121588,-1.2622874,2.140457,12.89663,1.2001345,-2.0792737,3.5854678,0.13469712}},
      {{0.02142886,0.0033798213,-0.0019064201,0.00095245853,-0.0012297287,-0.014264606,0.017669277,-0.0020855654,0.00058131147,4.456679e-05,3.5665875e-05,4.51731e-05,0.0011420718,-0.0016613324,0.00035286692,0.0002417752,0.000707608,-9.119131e-05,-0.0020629691,0.00019367991,-0.00024539029,-0.0018068855,-0.00030058247,0.0022079796,-0.0012939271,0.0008237664,-0.0006973577,-0.00035677804,4.8389662e-05,-0.0003095852,0.0033230847,-0.00024108653,-0.00028695774,0.00017647685,0.0002814199,0.0028054963,-0.0002192306,-0.00046183757,0.0003286162,-0.00012325114,-0.000117360185,0.00020577457,7.375526e-05,6.719916e-05,-0.00010888834,-1.4988337e-05,0.00023307788,0.00023685266,0.0012093539,-6.279724e-05,0.00018693839,0.00015266132,9.968327e-05,-0.00087559706,-1.740146e-05,-0.00013165906,0.0006143105,0.000287621,-6.407064e-05,-0.00010788765,-8.373755e-05,0.00016531382,0.00040092185,-0.00011489715,-0.00019208874,0.00034106028,-0.00038708808,-0.00017854598,-3.5440436e-05,-0.00013056603,0.0003867988,5.2012623e-05,0.00011394745,-0.0027656162,0.00013372839,0.0007796013,-0.00014128645,-4.564377e-05,0.00011615822,-0.00039743463,-0.00012812275,-0.00042113295,0.001206477,-0.00036518104,-2.6561813e-05,-0.00034655392,0.0025484506,-0.00014278066,0.0013315422,-0.0005559436,0.0009825798,0.0011179196,-3.7144047e-05,-0.00012365538,7.0095055e-05,-0.0023441098,-0.00027205536,0.00019437601,-0.00023092082,-0.0012961075,-0.0005073249,-0.002021245,4.8061844e-05,-0.00011582687,-0.00027815672,0.00053373276,0.00022826738,0.0009092272,-4.355387e-05,0.00023414381,-0.0033102534,-0.004275671,0.00023171616,0.0011498166,-0.001178057,0.0011972293,0.00072418235,-0.14165208,-0.02353539,0.098338775,0.21865319,87.15975,-0.20427552,-0.17069402,-0.00082238665,0.016699348}},
      {{4.7220087,-1.1105704,-1.259201,-0.7889397,-1.0748011,1.0904474,3.3853698,-3.347204,-0.36910102,-0.09022272,-0.0052630664,0.02392533,0.13034439,1.3852214,0.15999249,-0.009179532,-0.39352226,0.041162565,0.094425336,0.03327931,0.0028811232,0.61719066,0.035540868,-2.1436317,0.53813803,-0.052426398,-0.16664828,-0.044682533,-0.2581702,-0.31170458,0.021130182,-0.046556782,-0.033165876,0.1316708,0.27327305,1.4754409,0.11353011,0.21809025,0.053492907,-0.13713412,-0.13916221,-0.007327986,-0.0002668867,0.17173056,0.037461765,-0.07318918,0.111478984,-0.2947332,0.09697742,0.013132312,-0.067843676,0.01957353,-0.13817027,0.20847565,0.034737088,-0.0872154,-0.22173594,0.003808591,0.05983254,-0.004516807,-0.04532151,-0.040401682,0.03144889,0.039089188,-0.013997694,0.08470651,0.26093975,0.03661173,0.0053634513,-0.05576205,-1.5726011,0.0071614827,-0.0025329108,-0.11784606,-0.03208253,-0.013857956,-0.051028714,-0.008320851,-0.025216334,-1.1607393,0.02087647,-0.007987682,-0.003364831,-0.005063886,-0.010809689,-0.017726213,-0.1922686,-0.03102445,0.17701435,0.08536543,-0.083391555,-0.4414386,-0.040426,0.03714671,-0.019573992,3.5102894,-0.015900593,0.049166966,0.03678842,-0.06146093,-0.18663119,-0.07945867,0.0019482196,-1.9328309,0.053905975,0.07546875,0.0089665335,0.056069188,-0.011808078,0.007268181,0.36474758,-0.8915104,0.10132894,1.0735446,-0.09044063,-0.044013143,-0.053094987,1.1758395,0.13087057,1.7652757,1.3265445,10.776232,-0.3516611,3.441048,-0.32789686,1.4432713}},
      {{0.19506258,0.07539144,-0.07695479,-0.05698365,-0.0705903,-0.1476932,0.21608694,0.016791722,0.052752458,0.0010374264,-0.0043546865,-0.004973257,0.0068031377,0.0063001197,-0.002364157,-0.0044881683,0.03920681,-0.0065270877,0.059094995,0.0059018545,-0.0037904028,-0.010308076,-0.010486124,-0.101224616,-0.026709551,-0.003545842,-0.0053571705,-0.0056444574,-0.048131388,0.14547417,0.022385184,0.006251044,-3.278592e-05,-0.0031075852,-0.043221094,0.06334969,-0.024151132,-0.0088566765,0.013344178,0.004628388,-6.6379704e-05,0.0024207786,0.009660724,-0.007327303,0.0010200936,-0.0023280764,-0.0057498827,0.0011252579,-0.08612462,-0.009179571,-0.0059096976,0.008361335,-0.02136071,-0.021242153,0.00041862894,0.00041932124,0.024936497,-5.0157563e-05,0.0012741842,0.0012413905,0.0043539274,-0.007555048,-0.0032260683,-0.004486565,0.00017254971,0.013963753,0.10417059,0.0016292689,-0.003808403,0.0041639693,-0.09744768,-0.0015537111,-0.0011391622,-0.02524311,-0.0007919534,-0.004030243,-0.0014784666,0.00069283566,0.0054004677,0.017971005,0.005744568,-0.0041085905,0.01105805,0.004438165,0.0041873134,-2.0842424e-05,0.024647286,-0.0034280962,-0.0662491,0.046608992,-0.02229818,0.19991817,0.008942811,-0.0036376717,0.0020778978,-0.17090146,0.0027748933,-0.0039635166,-0.0008675685,0.013964542,0.031797845,0.036459737,-0.0029573746,0.0022510383,-0.0029701188,-0.013968267,-0.000395609,-0.006497465,0.0036811782,0.0014823696,-0.013505308,-0.00626904,-0.006407386,0.0082179755,0.006842561,-0.0062095956,-0.061467085,0.84147656,-0.39168832,1.07458,-4.227153,25.39352,-4.290695,11.511592,1.2968335,1.4109409}},
      {{-0.08492344,0.01650786,-0.0059748925,0.013855555,-0.015604418,0.023255603,-0.070158474,0.016271722,-0.0040904908,0.00038783535,-0.00028486006,0.0008737685,0.0016553138,0.004705463,0.0009025925,0.0010222887,0.003533658,-0.0014400117,0.0065959184,-0.00032545673,-0.001200351,0.0061725853,-0.0012761528,-0.0008002054,0.008557012,0.0026809298,0.0037668042,-0.0015037114,0.003198251,0.00044491055,0.00034161785,-0.0011753171,0.00029690712,0.00019313059,-0.0021607813,-0.004771303,-0.0009842052,0.007509495,0.0035030735,3.82373e-05,0.00067324884,0.00042950292,-0.00024859258,-0.0005250353,-0.00044274385,0.000837811,0.0005055002,0.006790821,-0.0032059178,-0.0006300557,0.00061035895,-0.00080425054,0.0039791064,-0.00067204674,0.00014656527,-0.000594124,-2.2488615e-05,0.00016435013,-0.00013121603,0.0002548787,3.1496386e-06,-0.00031078886,-0.0017805975,-0.001222124,0.00031396578,-0.0035902602,0.0035486873,0.00019205945,0.0002996646,0.00017120277,0.0068511507,-4.964628e-05,-0.00013653102,0.0010133848,-0.0006643579,-0.0011531457,0.0019819543,7.9371785e-05,0.0003204789,0.0014058243,0.0008123457,0.0006824851,-0.0038831588,-0.00080690265,0.0018114429,-0.00012069607,-0.00565136,0.0014478863,2.2001368e-05,-0.00048449796,0.0066729896,0.0053578573,-0.0015434439,0.00023833006,-0.00058587734,0.0020231714,-0.00028546277,0.001110934,-0.00010222699,-0.008207884,0.00403943,0.004907521,-0.0011844565,-0.0042859,0.00033146486,-0.0011524447,0.0009805243,-0.00064339157,0.00068098534,2.6373458e-05,-0.010495049,0.022063548,0.0024512894,-0.009019221,-0.004666018,-4.321728e-05,0.0006076517,0.13235667,0.27358738,0.16169572,0.09089218,-7.6826935,-0.24447694,0.26722512,-5.119396,0.104062684}},
      {{0.04191903,0.025431238,-0.040897977,0.0030642913,-0.069632776,-0.27901903,0.06719334,-0.02159056,0.106376395,-0.0013735043,-0.00087900716,0.0009021198,-0.0024166463,-0.0031612166,0.0014896948,-0.0011855194,-0.012357189,0.0030328333,-0.018568557,0.001584406,0.0013233682,0.013247355,0.0031120484,0.029138768,-0.00347515,-0.0033237087,0.00096007576,0.0020140214,-0.012329056,-0.008283046,0.019950809,0.0007176089,0.0012346834,-0.00029123708,-0.003172193,-0.00062590465,-0.0072177527,0.024256406,0.0062804455,-0.004784996,-0.0023649966,0.0011717854,-0.0050230348,0.004322368,-0.000504184,-0.0017451419,0.00625336,-0.011252341,0.0067679086,0.0019488216,-0.0001473266,-0.00029057113,-0.0055277203,0.011836087,0.0017246386,0.0028489984,-0.025443127,0.0019281626,-0.0035989292,0.004137012,-0.008403495,-0.0018927479,-0.009831209,0.011355835,-0.0022942263,-0.0047858874,-0.033382785,0.004297346,0.0075969584,0.000347277,-0.011525043,0.0182277,-0.0028502496,-0.026679879,0.0050169313,-0.00886586,-0.007151493,-0.0045633875,0.0006627955,-0.0038479688,-0.00049159187,0.0008237335,-0.016243162,0.0037385842,0.010878648,-0.0011841371,0.012958729,-0.010281929,-0.00028707183,-0.005590728,-0.021319406,0.01762478,-0.014958646,-0.0012791945,0.001599127,-0.016873542,0.00045984006,-0.004430243,0.002756745,-0.0050480478,-0.023072494,-0.0026203073,0.0051861214,0.009163386,0.005684736,0.0012878521,-0.0025825042,-0.011695722,-0.0018527589,-0.0008400007,-0.0070210514,-0.00741286,-0.004051155,0.013296969,-0.0032679765,0.020660132,0.023759913,2.2946813,-0.41382605,-0.12681182,-8.516124,49.782444,1.5145309,3.8100898,0.43543148,0.039591826}},
      {{0.00072550535,-0.007246433,0.05010537,-0.022718132,0.04257982,0.0044985577,-0.025120743,-0.004340175,-0.020124244,0.0016944266,0.0014366037,-0.0007929137,0.026753811,0.0013718678,-0.0061803716,-0.0017553009,0.0053093918,0.00064192136,-0.012206793,-0.0027248666,-0.0022970072,-0.0017141766,-0.010977586,-0.012798988,0.0028689113,0.0049413596,0.0017187317,-0.009294995,-0.0150018325,-0.016365195,-0.025240213,-0.0011388913,8.735059e-05,0.0012119806,-0.02479134,0.0029416382,0.0004428107,-0.007019728,-0.0028048076,4.6118777e-05,0.0010904167,-0.0015848284,0.005238638,-0.003115084,-0.0025865736,-0.0019257758,-0.002466337,-0.008054617,0.0009509538,0.0001917843,0.001180382,0.00080284534,-0.004904377,0.00094024633,0.0011870802,0.0012172586,0.017447228,-0.00018349232,-0.001006153,0.0013574074,0.010016996,0.006256909,-0.0065795304,-0.0074514286,0.004052399,0.0016628131,-0.005264095,-0.0010849409,-0.0048894743,0.010385716,-0.021589223,-0.007677007,-0.0032597743,0.011863988,-0.003301351,-0.00019001224,-0.004361649,0.0016098559,0.005618708,0.015942132,0.0015363647,-0.0026512702,0.0065655457,0.0026594873,0.0035469956,0.0019274212,-0.0023373582,0.00782391,0.006035527,-0.0148779955,-0.0003353245,-0.009165187,0.018645199,-0.00501076,0.0038164752,-0.017091429,-0.002278872,-0.01066293,-0.003699927,-0.0075610485,0.016470294,-0.0036572963,-0.0054772557,-0.02267112,-0.0009772194,-0.018240927,0.0018238849,-0.005867783,0.0019656236,0.0024883845,0.022218257,-0.0021119674,-0.00011454888,-0.010958909,-0.012386092,0.013028743,-0.0042597577,-3.0770864,1.9702445,-0.76303214,-2.4373124,19.648727,4.3340263,9.444762,0.013983887,-0.4987305}},
      {{0.033463683,0.008630281,-3.2610988e-05,0.0035143467,-0.0029338985,0.0033535005,0.039874207,0.009248447,-0.00011678503,-0.00031323102,-0.00019004646,-0.00015281967,0.00065946527,0.0016836488,0.0006110538,-1.6184422e-05,-0.00047496997,-0.0002064046,-0.0010335048,0.00034550097,7.7283636e-05,-0.00060109835,9.6254196e-05,0.003181862,0.002341694,-3.2968983e-05,3.507862e-05,4.865374e-05,-0.0008428498,0.0022840777,0.000108459324,3.6133682e-05,-0.000124184,-0.00011933717,0.0008111369,-0.0008845958,0.00032444618,0.000100061305,0.00045375497,0.00011337246,5.9558215e-06,6.358991e-05,0.00030753118,-2.581631e-05,0.00019563906,0.00012279862,6.794099e-05,-0.00095574127,-0.0006815271,-0.00011791798,-0.00022915975,9.806947e-05,-2.1659956e-05,-0.00021031447,1.51266595e-05,-0.00023819329,-0.0006595176,0.0002232123,-4.360495e-05,8.953077e-05,-7.3693845e-05,-0.0007290317,-0.00027543734,0.0001042616,-4.751786e-05,0.000652391,0.0018820256,0.0002121799,0.0001207293,0.00016497367,0.0005844654,0.00010534399,2.0675723e-05,8.162394e-05,-0.0002864388,0.00020502701,0.00011797061,2.8898736e-05,6.591769e-05,-0.0016549559,0.00012921059,-7.9005054e-05,-0.00095366617,-8.382489e-06,0.00038616752,-3.1842376e-06,0.0072204857,-1.4833503e-05,-0.0010881865,-0.001566812,-0.00010977468,-0.0009770596,-0.00019195159,4.531141e-05,-0.00023809305,0.002436095,9.893812e-05,-0.00049589283,-7.3473624e-05,-0.00043940835,-0.0028655124,0.00075109233,-0.00015522551,0.001275256,-0.0003444719,0.00010915806,0.0001459584,-0.00048638484,-5.1097693e-05,-0.00014457526,0.0013144447,-0.01327316,-0.00036370906,-0.0010398797,-0.0013065977,-0.0012823251,-0.0019030784,0.5665183,-1.7803267,1.6431242,2.4514542,4.5827427,5.5321717,-1.2424803,-0.3162875,0.41145694}},
      {{-0.12601082,-0.012225725,-0.0016712704,-0.020696804,0.014171155,0.057740733,-0.115134,0.0033933942,-0.025769249,0.00014639163,-0.0010207781,-0.0005711991,0.0040239836,0.0015727364,0.00074840314,-0.00010730721,-0.0017356353,-0.0016053801,0.0009883246,-0.000597517,-0.00019164696,-0.00274108,-0.0012913853,0.0015536188,-0.0031366758,-0.0025990144,0.0056678723,-0.0001934831,-0.009757945,0.0019205683,-0.0146194985,0.00089038507,0.00064236403,-0.0009176375,0.0012251385,-0.018704519,0.00410653,0.020943753,0.0020860515,0.00097274384,0.00020797302,-0.00039808996,0.002445225,-0.0005601485,-0.00019361937,0.00012702218,-0.0018425644,-0.009229516,-0.0091678975,-0.0009164756,-0.0010649161,0.00014800674,-0.00076926296,0.005723878,-0.00012178825,0.00066626735,-0.0069300453,-0.00077986345,-0.0004549447,0.0008119986,0.0013413685,-0.0019346203,-0.0033061784,-0.00032843172,0.00091894215,-0.0007264663,0.010253545,0.0013114004,-0.00014430574,0.002718751,0.0051272865,-0.00092356413,-0.0016885538,0.011082006,-0.0017206945,-0.0024002085,-6.41715e-05,-0.00013074031,0.0009495754,-0.006307206,0.0017733083,0.0015109839,-0.005620948,0.0018617269,0.0018111006,0.0016898299,-0.015554444,0.0014938889,-0.01631358,-0.018697953,-0.0027369354,-0.009329701,0.0014595484,-0.000398482,6.6793887e-06,0.0072596297,0.00043372484,-0.0035965745,0.00011080463,0.008723598,0.009502904,-0.006404401,-0.0014194304,0.007892521,-0.0012670752,-0.003838319,0.00023605161,-0.006574593,-2.6329257e-05,0.00016302029,0.01643946,0.02971696,-0.0008526771,-0.009036774,-0.014072426,-0.0058365026,-0.013298954,-0.6718565,1.3902119,-0.94947845,-6.9970675,0.018691834,-4.021857,-3.4543753,0.52207917,-0.36483628}},
      {{0.09017003,0.029548507,-0.01580231,-0.008423468,-0.021041673,-0.12343838,0.075482,-0.0035692719,0.025557928,0.00043639273,-0.00035370208,0.001198791,0.017202403,-0.001744624,0.0038008122,0.002479929,0.0013198485,-0.0004024533,-0.012601867,0.0027826298,-0.0021373508,-0.01354251,-0.0030372434,0.0005657727,-0.00479318,0.010870311,-0.01133605,-0.0060045384,-0.009904088,-0.0010791019,0.028502531,-0.0037007593,-0.0028975108,0.0030019819,0.003196861,0.003236926,-0.002981375,0.00011113075,0.0072073736,-0.0020500352,-0.0020122374,0.0022792916,-0.001533089,0.0021292374,-0.0011010669,-0.00075170735,0.0042835902,-0.0049869055,0.008456778,-0.0003859737,0.0012962105,0.0018008268,0.0011500844,-0.010457234,-0.0002222964,-0.0030165103,0.004914564,0.0029954175,-0.00096793723,0.00029822966,-0.0014142852,-0.0036166715,0.0033108331,-0.0010885537,-0.0024901512,0.007013017,-0.006518558,-0.001261414,-0.00032220184,0.000645822,-0.008561776,0.0026870086,-0.00058877346,-0.03331035,0.0014426148,0.00583899,-0.0057310816,-0.0004816778,0.0017130086,-0.0144632505,0.00063318224,-0.005445422,0.0044084056,0.00039877056,0.0024560732,-0.0037501971,0.008570383,-0.0021228006,0.0049504275,-0.00441638,0.00638614,0.0048011034,0.0011914979,-0.0027457152,0.0025765607,0.0038797741,-0.00243986,-0.00453665,-0.00056614866,-0.01030532,-0.0030469475,-0.0015772051,-0.0010341645,0.0014164781,-0.002984315,-0.00066558947,0.0019839834,0.0037494015,0.0006972224,0.0019759052,-0.0120068975,-0.0129909795,0.0031826575,0.012438835,0.0033368005,0.015775146,0.00034268416,-0.84633917,-0.24154405,1.1774272,0.72629136,-88.31155,-2.6963506,1.0247637,1.0382966,0.56574106}},
      {{-3.2439446,0.30872354,-0.73959297,0.4419285,-0.8534875,0.537186,-2.6008246,0.07916795,0.024543222,0.0048435577,-0.008776834,-0.01345476,-0.03809199,0.010061979,0.0008243144,0.005268918,0.025371242,0.00011834035,0.21458362,0.033372425,0.019401565,0.9670417,0.008249784,-0.012247009,-0.027585013,-0.021195378,-0.03844954,0.022266213,-0.020928983,0.026954303,0.048400592,0.024231158,-0.014233451,-0.012527424,0.029483574,-0.34806597,0.03734857,0.43394813,-0.0045265565,0.0022832626,-0.008117527,0.012206288,-0.0060299756,-0.0031081685,0.006141712,-0.009770191,0.0059076627,-0.014993562,-0.0019877153,0.002676946,0.00031183215,0.016337957,-0.034865677,-0.050337724,-0.005263825,-0.0026038827,0.022808827,-0.00040123737,0.020620054,0.002414161,-0.028296549,-0.13447574,-0.0042495457,0.046604544,0.002058184,0.08671326,0.125896,0.033019878,0.031650443,0.00484972,0.21380743,0.015035408,0.014258061,-0.008030177,0.0031413822,-0.022631746,-0.046079192,-0.022762025,0.00011513765,0.46624118,0.04222843,0.019119238,-0.11717615,0.033430878,0.008110738,-0.0024702335,-0.8669858,-0.052978344,-0.06394801,-0.055479564,-0.062337466,0.01672956,0.008489063,-0.014427267,-0.012609379,0.3882392,0.019711344,-0.021943102,0.0057866075,-0.08380201,0.018899966,0.08211546,0.030524004,0.11908052,0.06969471,0.060188428,0.006998737,-0.034561597,-0.0031164265,-0.018909605,-0.04185944,0.51759124,-0.021403333,0.021579487,0.023869751,0.0136909615,-0.11716263,-2.3988314,-0.037680447,0.09727914,-1.9425635,2.1468527,1.4194149,0.9676981,2.5801497,0.95248616}},
      {{-0.021829411,-0.00032815014,0.010032665,0.0056727543,-0.0019938562,0.041927688,-0.014252526,0.009887663,-0.007204495,0.00023619799,6.4644955e-05,6.122785e-05,-0.0017472343,0.0055491263,-0.00044727078,-0.00033000828,-0.0008902878,0.00030227803,0.0012858997,-0.00038540072,-0.00029267534,0.0026067612,0.0007296051,-0.0025204907,0.004024547,0.00011094932,0.0004549172,-0.0003706675,-3.360108e-06,0.00035678892,0.008691267,-0.0001326457,0.0009031285,0.00051246164,0.00020212051,-0.009312871,1.9022937e-05,-0.005234215,0.000760319,-0.00037981512,-7.987172e-05,-0.00040299966,-0.00086113845,0.00045029246,-0.0002590677,-0.0005581358,0.00024286039,0.0018578743,-0.008297014,0.00052155106,0.00012468047,-0.00058198854,0.00094332406,0.004523036,-0.0003328257,2.9307257e-05,0.00059503334,0.00022359255,1.658876e-06,-0.00061791285,-0.0004083964,-3.054419e-05,0.0012640735,-0.0013736499,-0.00032335852,-0.0057309135,0.0056202454,-0.00017773666,-0.00051648775,-0.0012965415,0.004539994,-0.0011839725,0.00023962255,-0.003179158,-0.0003582729,-0.00081311027,0.0006711968,0.0003059051,-0.001712176,0.0011071838,0.00014476123,0.0009440335,-0.005222235,-0.00010845289,-0.0012862507,-0.0006026993,-0.002492188,0.00059799274,0.0033347304,-0.003994075,-0.0031843935,0.0007770758,-0.0018230072,0.00079839805,-0.00055944186,0.0010215495,-0.00012994454,0.0027217234,0.00052896154,0.003368,0.000169307,0.008389408,-0.0007389588,0.0024343373,0.00044364255,0.00020358004,5.2096126e-05,0.0029267468,0.0006833319,0.00015005458,0.010241787,0.0041076327,0.0020184426,0.0011009831,-0.00053405145,-0.0016085012,0.0004883091,-2.4510138,0.12833004,0.8708003,-11.152804,-4.3022738,2.3973334,-1.385715,0.15217866,0.10556657}},
      {{-0.05930107,-0.018973147,-0.046159606,0.015202487,-0.00863502,-0.01564122,-0.043141242,-0.003179532,0.03337605,-0.00029846304,0.00024226093,0.0016392233,-0.009236631,-0.0016776726,0.0028028577,0.001953739,0.0073330165,-0.002952381,0.012329591,0.00016766852,-0.0006302012,0.021835972,0.0006789435,0.00613468,0.0087539125,-0.0002236561,-0.0063979267,0.0020336793,0.015229456,-0.0015415071,-0.03909091,-0.0006421136,0.00026742244,-5.704268e-05,0.009938047,0.0016044789,-0.0053402856,0.0019866421,0.0073056235,-0.0004431985,0.0021562849,-0.00045826074,-0.0030993714,6.103749e-05,0.00043796457,0.0027004783,0.0005544117,0.02218117,-0.0058339955,-0.002463399,0.0008417507,-0.0022939818,0.007874803,0.01669129,0.00082125765,-0.0010517729,0.003966951,0.00023754731,0.00019620861,-0.001343746,-6.729419e-05,-0.0048380997,-0.0019147199,0.0016502184,0.0018159299,-0.0017335872,-0.03290226,0.0023150397,0.0026241618,-0.0019968888,-0.012471058,0.0009212503,0.0015302079,0.022490246,-0.00082489045,-0.0020372807,0.0054124244,0.0007418734,0.0008014612,0.02167896,0.00043772117,0.0031543216,-0.016021999,-0.0033445335,0.00088693976,0.0012015596,-0.0016600236,0.00044912606,-0.024421528,0.0077653583,0.015162882,0.015390235,-0.0036120282,0.0022425926,-0.0015872793,0.0028768338,0.00045418012,0.0047043175,0.0009462694,-0.008915732,-0.002868234,0.0110438345,-0.0005544985,-0.010106345,0.0030665135,0.0034571423,0.0005076597,-0.0011294564,-0.00052493426,-0.002471517,-0.04308395,0.0052857073,-0.00021155179,0.0023305786,0.014874969,0.0031265756,-0.006708619,-0.5868037,1.8155493,-0.76191586,-2.351394,17.881104,-4.555391,2.3448954,3.16708,-1.0134546}},
      {{-0.009058122,-0.0071499525,0.013778324,-0.01910758,0.02063363,-0.015408443,-0.01741751,-0.0010819063,-0.0034319838,0.0010154104,3.4018874e-05,9.474999e-05,0.003939733,-0.0030522451,0.0015541848,0.0018583906,0.0052799806,-0.0021825305,-0.010086379,0.0027364485,-0.0028771097,-0.0002088393,-0.0021590195,-0.0063259485,-0.0017013409,0.0069306195,-0.012313703,-0.004274886,-0.008718328,-0.0131348735,-0.009463992,-0.001142196,-0.0014562154,0.0007178019,-0.0011769775,-0.0023761224,-0.0034508558,-0.0036455162,0.006732335,0.0006631251,-0.0015497066,0.00095555786,-0.00022750154,1.2837868e-05,0.00063136645,0.00016911225,0.00042419758,-0.0008426047,-0.01160027,-0.002783325,0.0003774888,0.0015228514,0.0021939634,-0.0103050275,0.00046017204,-0.004311001,0.002500877,-2.6343638e-05,-0.0026677547,-0.00029702802,0.00046165189,-0.0036808352,0.0013162511,-0.0054110936,-0.0024300662,0.0045483955,-0.0083449185,-0.00049767486,-0.0013251387,-0.0012888496,-0.013064663,-0.0029945662,-0.0008075585,-4.9445885e-06,-0.0021085024,0.0066626803,0.0021386934,0.00247787,0.0038353868,0.0034695407,0.0015216557,-0.0042141667,0.004747133,-0.0010346428,0.004651624,-0.0011158428,-0.005611494,0.003345154,-0.0025359823,-0.009678595,0.0025105989,-0.0006594299,-0.002709711,-0.00021298618,0.002791642,0.000982169,-0.0026454714,-0.004868065,-0.0003751508,0.0009186643,0.009905755,0.0058998405,-0.004157204,-0.0070136026,-0.009432907,-0.0013321693,0.0030576566,-0.0018204958,0.0004941925,0.000843205,0.0065487307,0.0010672314,-0.0020249998,0.003309868,0.0018492801,0.0014664467,-0.0039034828,0.21387705,1.4183955,-0.9778439,1.9968078,17.004906,0.42970592,-17.249846,-0.43427348,0.66869015}},
      {{-0.40076724,-3.257276,1.1717477,-0.6052586,2.2680414,-0.825423,-4.1123867,-5.932609,1.9549595,-0.023332983,-0.0068681748,-0.0076101064,0.0030508044,-1.5522743,-0.024544599,-0.001216896,-0.019859517,-0.03016782,-0.36328518,-0.08513894,-0.014774056,0.087172054,-0.10289013,-0.88343096,0.13486189,0.027306719,0.16785495,-0.044787396,0.11338799,-0.061466362,-0.10153924,-0.107952416,0.09933235,0.04409671,0.113647826,-0.38910437,10.782346,0.34158105,0.0001622094,-0.032344997,0.01306687,-0.024295704,-0.09774038,0.13321243,0.026445482,-0.059228875,-0.019259457,-0.01810224,-0.28793955,0.05457967,0.027202459,-0.024411663,0.0017570173,-0.096716955,0.03157498,-0.11580342,0.031394966,-0.008220283,-0.011004743,-0.09383117,0.26567128,1.231089,-0.265795,-0.21409883,0.015545982,-0.63362014,0.060958046,-0.049434967,-0.3475318,0.25215703,0.18417314,0.17374606,-0.6641109,-0.599246,-0.16283949,0.22193325,0.4486107,0.34083983,0.50075614,1.8278215,-0.29035357,-0.16163693,1.1230962,-0.14013784,0.052657317,-0.22211382,-8.108254,0.06663588,-1.8413355,0.053030334,-0.24886863,-1.1095309,-0.39376843,0.25062948,0.26117027,0.7895626,-0.48166955,0.014610477,0.020086776,0.31431234,-7.622671,0.2260138,-0.34028372,-0.65950465,-0.6506743,-0.67769694,-0.03789063,0.083242804,0.10548573,0.27310103,-0.3804564,-1.2467599,0.18921113,0.32398808,0.050337452,-0.026697744,-1.7058638,3.7066152,-0.9232316,2.1372397,-0.8486849,5.107554,0.27974838,4.229502,-0.45491683,0.9850946}},
      {{-0.023294894,0.010027089,0.013271407,-0.0013679584,-0.01993814,0.021806803,-0.008889886,0.008114917,0.008228415,-0.0004098161,-0.0016006698,-0.0014996881,-0.008127715,0.0031484163,0.00081004185,0.0014615159,-0.0101883905,-0.0017655006,0.00086374034,0.0029133302,-0.003078721,0.0042128307,0.00037921852,-0.0048939423,0.00038325504,-0.0004253419,0.017536907,-0.0018658,-0.015268521,-0.0024530778,0.009674047,-9.303866e-05,-0.0009468655,-0.0015466544,0.00028058724,-0.009284869,-0.0012042888,-0.0043338677,0.008163056,0.0036874707,-0.00040237865,0.00079442136,0.0028760002,-0.0008901249,0.0014746154,-0.00031601623,-0.00025315527,0.0084558325,0.0031592278,-0.002932541,-0.0018797156,0.0021950267,0.0012898,-0.00478579,-0.0006928356,-0.0044663255,0.003964094,-0.0017564944,-0.00074372586,0.0029132694,-0.0033335912,-0.0039774254,0.0068121245,-0.00043239543,-0.0061133634,-0.0036715986,0.0073068812,0.0009182986,-0.0014210127,-0.0030183739,0.0056763915,0.003066317,-0.003534862,-0.007326868,0.0017831444,-0.009927807,-0.00070420245,-0.0036521002,-0.0055369926,0.0014459552,-0.0029683716,-0.0032807556,0.0036152094,0.0048499876,-0.007169128,0.001480587,-0.0064367657,-0.0027604082,0.006748106,-0.005703788,0.0018340735,0.0025029343,-0.00378819,-0.0017750795,0.004119771,0.00016186581,0.00245569,-0.0021773472,0.003231473,-0.00029989472,0.00067183585,0.0077257124,0.0034664844,0.005757134,-0.0024022239,-0.002895578,-0.004947078,-0.00659056,0.00070141524,0.0002430521,0.020217003,0.0051007005,0.009063094,-0.0033617993,-0.0017846063,0.005164113,0.0012325178,2.5951176,1.7980855,0.06560646,4.619021,29.889725,-1.039974,1.9327174,-1.028182,-2.7848206}},
      {{-0.019212984,0.008787262,0.00309891,0.011668286,-0.012696076,0.043201655,-0.012463165,0.0074781133,-0.008738084,0.000104478844,0.0009221676,0.00094542827,0.0017504647,0.0074889776,-0.006150607,-0.0019025195,-0.005332115,0.0029510611,0.0064779203,-0.0034229334,-9.164981e-06,-0.0012245537,-0.0014056019,0.0007393218,0.0038463515,0.00061058387,0.009632619,-0.0030970213,-0.0014299452,0.009744595,0.003925542,-0.0016499114,0.0019782758,0.00044540592,-0.006123871,-0.0032520613,0.0026916955,0.0044007916,-0.0059661297,-0.0014971896,0.0017012614,-0.0009015434,-0.002322457,0.00039984038,-0.0026796444,-0.0018461802,0.001122923,-0.0017270751,0.0060113217,0.0036980151,0.0012560036,-0.0029374168,-5.3420495e-06,0.0070639374,0.00012409023,0.0020874427,0.0112611335,-9.335861e-05,0.0007818426,0.0005113983,0.0005225552,-0.0012230957,0.00019101833,-0.0010013559,0.0014265946,-0.006311675,0.008137145,-0.0008117374,-0.0012081902,0.002828347,0.008838748,-0.0007940246,-0.0002898163,0.0034825695,0.0003724583,-0.0046151415,-0.011849238,-0.0015762936,-0.0033290312,-0.0009813567,-0.0011091535,0.000634316,-0.0048233923,0.0027444768,-0.001219256,0.0010853298,-0.002698399,0.0007267104,0.0040536076,0.0032925773,-0.0022034603,-0.0019167287,0.0072164047,-0.0024976006,3.693721e-05,-0.00067725894,0.00065670285,-0.0005028997,-0.0002521811,-0.0069202343,-0.0052758083,-0.003035899,0.0011600815,0.0016781528,0.0070128986,-0.005102669,-0.0016218406,0.0033532346,0.0009548228,0.0010359316,0.007828695,0.004897903,0.0037625108,-0.0033021183,-0.0037873376,0.00033600183,-0.003981123,3.6156406,0.20979716,-3.6716938,-2.0692952,-5.1462293,-1.1283193,-6.747589,-0.8735893,2.0623515}},
      {{-0.0036530956,-0.0033099006,-0.0054838886,0.00058400014,0.0061595286,0.036508113,-0.0075105843,0.0012888439,-0.012015441,-0.00020994642,-0.000112954935,-0.00016755985,-0.0011128567,-0.001835923,0.0012295413,0.0011763532,0.0032363285,-0.0013364984,0.006462366,8.902389e-05,-0.00013830206,-0.0017719564,0.0010336386,-0.0027650301,-0.0013080004,0.0005154215,0.004186703,0.0008836568,0.0053226124,0.0039674905,-0.0062468364,-0.0002711366,-0.00079570257,-0.0002424296,0.006566882,0.004509637,0.001078546,0.00097312283,-0.0013982322,0.0015094014,0.00036048482,3.0391553e-05,0.0006377705,-0.0009038933,0.00051659445,0.0011067955,-0.0010455586,0.00042304018,0.001735274,-0.000424733,0.00017136373,0.0004003706,0.0031647908,-0.0018337187,-0.0007583731,-0.0011956501,0.00378633,-0.00039196317,0.0004413219,-0.00061453163,-9.745484e-05,0.0032490594,0.0032471956,-8.392947e-05,0.00012501415,0.0024202915,0.004805114,-0.0004549945,-0.0008188457,-0.00040367246,0.0020295503,-0.001500736,0.00058373564,0.006198578,-7.337453e-05,0.0015933038,-0.00054103206,-3.2724656e-06,-0.0006226871,-0.0018268888,-0.00056467805,-0.0008222754,0.0027394192,-0.0010546145,-0.0026505096,0.00011013925,-0.00041002838,0.00022753778,-0.0066732503,0.004142267,0.008256669,-0.0029546148,0.0006362342,6.350158e-05,-0.00022920583,0.0074166446,0.00053555716,0.00019939928,-0.00036272322,-0.002205392,0.004463822,-0.0029559708,0.00083197193,0.0012660543,-0.0016088046,0.0032941978,-0.00020921302,0.00165314,-0.00014496333,-0.00046716598,-0.005888188,0.0009687437,0.00050419045,-0.0030319386,0.0022225454,-0.0028067885,-0.0053045666,0.42752808,0.16259095,-0.2018785,-9.837183,7.975847,3.775961,-6.278106,0.22005852,-0.00957143}},
      {{0.7803501,-0.28764108,-0.39289272,-1.6942636,0.07370223,-2.4581575,-0.1439417,-1.4870706,-0.25783,0.010225079,0.00033289287,-0.015139371,-0.029763734,-3.9724288,-0.059554387,-0.026491357,0.017604167,0.021939667,-0.44399533,0.030005248,-0.0055417144,3.1185904,-0.020145813,0.63959855,0.43330562,0.01953881,-0.027047452,-0.015469457,-0.08266608,0.08343207,0.19952838,0.019927358,-0.0059699295,-0.036086496,-0.07424399,0.9204456,-0.16763347,-0.4706969,-0.0014942664,0.03521679,-0.020302685,0.0065370467,-0.009403389,-0.03461167,-0.008700448,-0.028716525,0.002743636,-0.034317125,0.006012648,0.026920393,0.003121768,0.026021834,-0.06056271,-0.016831184,-0.0022925667,0.0016688488,0.07460376,0.035268884,0.039409347,-0.041654672,-0.073355794,-0.10379478,0.06163661,0.0451438,-0.010633479,0.06652326,0.23295136,0.018439466,0.0030772395,-0.089115575,-0.17565672,0.027505588,0.10817362,-0.041726522,0.041600052,-0.008038586,-0.026246857,-0.069460675,-0.060638364,1.8303376,0.016477752,0.0016208406,-0.14539216,-0.05504231,0.01106559,0.036556523,0.330764,-0.011983468,0.08090039,-0.052491374,0.080807865,-1.513122,-0.032783173,0.0030444397,-0.10992047,-5.2708592,0.009464465,0.09624959,0.050260756,-0.20393357,-0.4869792,-0.0802704,0.061777357,-1.5845581,0.13616107,0.17623311,0.048937622,0.049303196,0.00755515,-0.09844549,-0.024293648,1.0128424,-0.07293703,0.56198364,-0.22344495,0.018880647,-0.3713384,-2.4089167,0.35470363,-0.19615021,1.7824036,-9.391044,0.46156943,0.05299803,0.57842505,0.04472626}},
      {{1.1261994,1.1967738,0.050187957,-0.30570877,-0.30663416,-0.6967236,1.1532601,0.9304971,0.01919052,0.012472221,-0.0015281298,0.0042937105,-0.03204342,0.0120121725,-0.011327953,0.011476178,0.033855937,0.013453056,-0.8584182,-0.022882978,0.0030065419,0.09283188,0.026042406,-0.6414398,0.052576717,-0.01498441,0.07497229,0.03381497,0.09161331,0.061213944,-0.024317933,0.005870072,0.0070906086,-0.010849363,0.009706841,-0.14004101,-0.059850123,0.034859393,-0.033224296,0.011075011,0.011719624,0.0038823728,-0.014393133,-0.014922661,0.0010162398,0.0042050006,-0.007415781,0.046886723,0.05172716,0.013926386,0.0058029834,-0.014875605,0.032129265,0.0068515027,0.0033890235,0.020629777,-0.00046359363,-0.005988684,0.0054024262,-0.014444803,-0.010642191,-0.050923295,0.0157891,-0.0065644453,0.014031762,-0.005779292,0.010324682,0.0033590824,0.011853733,-0.030029299,-0.37528273,-0.011147894,0.03101106,0.11642849,0.006590314,-0.026933119,-0.0027201865,-0.01652673,-0.028032623,-0.12748641,0.00015885207,0.021271128,-0.11140596,-0.015741084,-0.02228226,0.021740394,-0.4312218,0.03835783,0.25860775,0.021337006,0.13836043,-0.09591875,-0.0010980779,0.0014453534,-0.043701246,-0.17602906,0.004454631,0.03137595,0.00028693344,-0.13133283,-0.1486774,-0.09167308,0.017733127,0.7739168,0.04750544,0.044223998,0.014854634,0.007681515,0.0068231695,0.02580395,0.07051558,-0.11636217,0.00048242926,-0.33043,-0.07447044,0.016915036,-0.20814021,0.8628336,0.76965666,-0.9274268,0.55929667,-31.246296,3.8478096,-4.86998,1.8807304,-1.2264781}},
      {{-0.07941167,-0.03415305,-0.035188105,0.05628241,-0.029303018,0.09348653,-0.019399436,0.016670387,0.016334526,-0.0049133757,-0.0017263149,0.0071319486,0.01868221,-0.03510685,0.012988852,0.0033833657,-0.04044666,-0.004829116,0.019755349,-0.01105483,0.0007606131,0.029588591,0.006727098,0.015953058,-0.020188255,0.0014366694,0.03021093,0.0048134234,0.043962523,0.030988436,0.0027259374,-0.008431192,0.0055732066,0.0036975993,0.032507837,0.0028570867,-0.00023820593,0.04230305,-0.00013809778,-0.006857924,0.0025432885,-0.0012736556,-0.007801512,0.005368196,-0.0048086667,0.00474862,0.0025555415,-0.0016289903,-0.0312996,0.004214623,0.0020665934,-0.009421919,0.029177355,0.016930858,-0.0020948306,0.00440365,-0.019458754,0.005017664,0.00042318576,-0.00045545452,-0.010504313,0.009839972,-0.007820169,0.0074494504,0.0051419274,-0.036544126,0.0104773035,0.00042446412,0.007681725,-0.0069633173,0.007420531,0.011342491,0.0036856225,-0.017719187,-0.00028902694,-0.009584602,0.0017614025,-0.0022027842,-0.008889409,-0.021408068,-0.0020229886,0.0101409685,-0.009692518,-0.008212107,0.0055422336,-0.0005591083,0.028006852,-0.0042867893,-0.07774085,0.014679184,-0.0004071225,-0.031342294,-0.02015277,0.006324703,-0.010475947,0.019593151,0.002721378,0.02186202,0.005962629,-0.026770025,0.035534054,-0.021259163,0.0003434879,0.064920954,0.011239135,0.007257113,-0.00058224465,0.010226684,8.561823e-05,-0.0040104426,-0.015703078,0.0019407626,0.012312266,-0.011123236,0.021301502,0.008402783,-0.0046505556,-0.049820796,4.1223264,0.6170136,0.24976088,9.764944,-0.6595946,1.6677259,-2.8675997,0.08543107}}
    }};

    h1_h2 = {{
      {{-0.026466094,0.21308851,-1.0900315,-0.106116585,-1.3371792,-0.083925016,-1.579221,0.27195394,0.04107473,2.0538452,3.8501487,0.3241284,0.046652842,-0.45223194,-6.6832805,-0.37841722,0.44663897,-6.2722716,0.18231922,-0.03227718,-0.7619333,-1.8387161}},
      {{-13.746653,-0.32142153,-1.990008,-0.028877439,1.1304953,-1.9937849,-1.2472152,-0.4212823,-0.056668233,0.6118575,-1.0578732,0.38137087,-0.20594108,-0.030441253,0.28818917,-0.5982914,-0.19424209,-0.2709377,0.67673755,0.10237147,-0.34761688,1.5810369}},
      {{-0.26776245,0.16840392,3.0439765,0.2310938,-0.4333434,-5.5672536,-0.99497104,-0.92316806,-0.50554013,-0.9201744,1.0096074,0.4088664,-0.7097584,-0.061426662,-1.2907716,-0.10311403,0.23780172,-0.028883878,2.9684608,-0.10696222,-0.48463896,0.15512143}},
      {{-0.9076098,1.3906692,-6.037006,-0.00077159493,-1.7580256,-0.31859505,0.6228664,-0.73857397,-0.13375752,0.11215961,2.1539721,-0.034956634,-0.42569178,-0.550598,0.47237396,-0.2574019,-0.27346608,-0.13006397,0.87283665,-0.0257037,-1.1874082,-0.13377608}},
      {{0.86617345,-0.60361904,2.8806343,0.118656464,-0.1145596,-3.523309,0.21618634,-0.7094199,0.08125765,-0.95552194,-2.0801342,0.09358607,-0.4089447,-0.5672326,-1.6472839,-0.25860345,-0.07702735,0.115172185,0.60356206,0.0020428137,-0.72983253,1.464632}},
      {{1.2409568,-3.4206564,1.7957363,0.00214534,-0.9120533,7.092162,-0.24118522,-0.1572945,-0.08360516,-0.7120475,-3.8556612,-1.4715235,-0.058402542,-0.9805117,0.3092855,-0.011422964,-0.035886925,0.43915793,0.07996834,0.14635772,-0.7824804,-0.6724797}},
      {{0.14829038,-0.30188942,0.11080973,3.2050986,0.10843964,7.613804,0.71705055,-0.18727525,-0.5123295,11.246183,-2.986511,1.6147252,0.18448962,0.122745305,-0.49970043,-1.352464,0.04838793,0.00456975,-0.02446822,5.1745543,0.17903808,0.45141363}},
      {{-0.14452067,1.231973,-0.8085728,0.22162676,-0.029305523,-2.3502119,-3.3568995,-2.8194091,-0.22839761,0.48004454,-0.5645986,-0.04938059,-2.0413687,-0.0026522388,-1.030078,-0.552542,-0.4428395,0.10098397,-12.609506,0.037265576,-1.3229804,0.7161305}},
      {{0.0658816,0.3514884,-3.3211775,-0.1960586,0.08983859,-4.864806,0.14192025,0.41916624,0.16080469,-1.7562454,1.2667049,1.0094631,-0.40936103,-0.8768025,-2.2407026,-0.64762056,-11.943875,-0.2946336,0.5386205,-0.72047865,-0.6965411,-2.1675453}},
      {{-0.59090286,1.2069274,-5.180463,-0.008856959,-1.2957414,-1.0606307,0.31782448,-0.085150056,-0.08347809,0.5483678,3.3122878,0.039875396,-0.05916327,-0.3338299,-1.0429167,0.020721322,-0.032091774,-0.18041393,0.3325374,-0.010695333,-0.6298804,-0.047013745}},
      {{0.03042983,-0.9076161,0.08676598,-0.05857335,-0.16298278,-0.12673615,-0.25980717,-0.5842042,-25.306131,2.3067086,1.5083859,-0.5992273,0.76532686,0.29512826,-0.25974053,-0.4918822,0.025452888,-0.03890443,0.055284902,0.066099465,0.07775373,-0.19695407}},
      {{-0.010848458,-0.19704208,-10.609093,-0.06209913,-0.29665697,-0.4908976,-0.38376132,-0.03233658,-0.0068521323,-0.5761608,1.5820727,-0.07811883,-0.025155123,-0.085463926,-0.11702164,-0.03762614,0.015950784,-0.032214426,0.124920934,0.030705696,-0.055710074,0.15524074}},
      {{0.030096903,0.08931212,-8.886455,-0.01849372,-0.14294907,0.4137999,-0.5546872,-0.08351848,0.46075067,-1.7636899,1.2056115,0.08324076,-0.4296932,-0.2854042,-0.41684616,-0.18296914,-0.057889886,-0.20378898,-0.31815243,-0.0023308673,-0.48290032,0.34668714}},
      {{-0.42306432,0.6466412,-5.9536166,0.020691931,0.08875496,0.24440165,0.6618505,2.2689948,-0.22260973,-0.28734562,-0.8458589,-0.091588505,-0.06829877,-0.48242363,-2.5532234,-0.35578167,0.11867324,-3.999277,-0.16120356,-0.039720424,-1.8797135,0.53942454}},
      {{-0.010385485,1.0165817,-1.4207344,-0.066464424,0.18792771,-0.40847075,-1.983159,-1.0769664,0.07489638,0.70775247,-0.36345816,0.23004211,-14.268328,-0.37503183,-0.75374436,-0.46598685,-0.16005124,0.27668834,-0.7326504,-0.27236584,-0.29717854,0.50985014}},
      {{-0.23457298,-0.56606424,2.5916214,0.004757087,-2.213568,0.44327906,-0.5808776,-0.1730756,-1.2546209,0.81802756,2.407682,-0.055610985,0.6912673,2.0335498,-1.2657214,0.08088649,0.21541202,1.4692792,-0.30601168,0.10808229,-1.4559029,0.34262386}},
      {{-0.11795358,1.0971768,-3.5601258,0.04477372,-0.7732945,-1.0324289,1.5594865,-0.3816031,0.041236192,-0.44536915,-0.36568302,-0.22345634,-0.7628773,-1.6204482,-0.29578528,-0.61563337,-0.8685226,-0.5423473,0.9229497,-0.080383286,-0.9197519,2.0347764}},
      {{0.04240619,1.8335708,-4.5048003,0.0059224674,-1.2013246,-1.4353368,1.625468,-1.3790727,-0.19371943,0.5401638,-0.9616388,-0.090741605,-0.5563799,-0.628883,-1.432917,-0.3620304,-0.22317833,0.06572604,1.0881116,-0.011035989,-1.176439,-2.0820582}},
      {{0.38401297,-1.8266923,2.0188148,-0.02881527,-0.5531578,2.7830658,-1.0421332,-0.70835733,0.17512421,-0.8486968,-3.4697776,0.8185925,-0.37500972,-7.0645747,1.4771007,-1.0044222,0.11776903,0.24812071,0.6720933,0.05442989,0.2825543,0.32010832}},
      {{-1.088586,0.63512707,-1.1596886,-0.02969164,-1.2573591,-1.3838625,-1.5944268,0.9271743,0.020289209,-1.4513632,3.1877923,0.39977404,-1.5398568,-0.61319745,-0.8789669,-0.36165345,0.18875659,-0.18551771,-1.5846192,-0.25618523,-0.5095097,1.3670175}}
    }};

    h2_out = {{
      {{1.2024407,-2.0632021,1.9374644,-13.168497,0.7951624,-3.349227,-1.3379027,-0.7613397,-0.042793304,-2.8548386,-4.643998,-1.6855972,-4.2067513,1.0747995,-2.8008041,-2.349841,-2.4759164,-3.445457,-1.5205075,0.041255616}},
      {{1.7586612,-3.1284008,1.2236961,-13.9016905,0.9187727,-3.2658691,-1.0966359,0.008381109,0.9476245,-4.6504436,-4.4545836,-3.8696823,-0.89475846,1.2585025,-3.2516892,-3.5744174,-1.4445047,-4.324349,0.6332194,-0.002338066}},
      {{1.5005931,-4.1857076,-0.09217004,-10.674924,1.3876121,-3.4753594,-1.1061904,0.24924652,0.682469,-6.1150713,-4.542352,-2.4982302,0.4586847,0.3731905,-1.9353337,-4.024747,-1.1027745,-2.3760245,1.3757138,-0.4901865}},
      {{-0.06375064,-4.039835,-0.9376766,-4.251172,0.5313381,-0.05161915,-0.6479724,-0.011580445,-0.009874482,-5.7075734,-3.2453895,0.11520374,0.5280426,-0.6053205,0.07110844,-3.3316572,-0.5500779,0.19425659,1.5067012,-0.8089077}},
      {{-1.871449,-4.1775293,-0.775325,-1.8057436,1.2068416,-3.4593456,-1.4274625,1.5220692,-0.8052073,-13.129234,-3.7677796,-3.3375587,0.35733494,-3.6846611,0.63355863,-2.7581813,-0.91126645,1.2283394,1.5323217,-2.5876408}},
      {{-2.984663,-3.2103522,-0.2172747,-0.3603816,0.67508763,-2.9426296,-1.5070418,2.5041928,-1.2614727,-15.768254,-3.7785926,-4.2408204,-3.0276804,-4.8789635,1.0139227,-2.43088,-1.3127892,1.2340864,1.1359878,-3.0506947}},
      {{-3.106084,-2.024526,0.9745304,0.21734872,-0.058995735,-3.7884254,-1.546968,1.5562884,-0.9988052,-12.715301,-4.3178215,0.36097392,-11.740464,-3.4253387,0.5170098,-1.7751975,-1.8879457,0.6502973,-0.42695597,-2.3075871}},
      {{1.4911289,-1.4145701,1.8897274,-8.04033,0.39533195,-2.9885747,-1.2277427,-0.6568883,0.7468983,-0.632736,-3.437213,-2.8887093,-6.6109614,1.1677865,-3.5517337,-0.24261764,-3.0512488,-2.5083363,-2.8174746,-0.3446117}},
      {{1.6334643,-2.599664,1.3640085,-10.499103,0.54266655,-2.1247482,-0.34049177,-1.1761334,1.2638941,-1.7677314,1.7913435,-3.1102571,-2.167681,1.2162514,-3.5132835,-0.91136426,-1.2625031,-1.3096912,-0.5042228,-0.16071899}},
      {{1.4339666,-3.5996246,-0.18175961,-7.035729,0.8528638,-2.3488088,-1.0616808,-0.56295186,1.2507374,-2.065944,-1.6066997,-3.1700163,0.24896817,0.070175745,-1.7665012,-2.4019182,-0.7057289,0.5642023,0.21753842,-1.1057774}},
      {{0.87625545,-4.3456545,-1.213968,-2.2777283,0.80764055,-0.014277723,-0.3420135,0.09916761,0.8462424,-3.1877553,1.172838,-0.20473602,0.5192677,-1.6189773,0.093023516,-1.7424378,-0.86021215,1.1976004,1.5206144,-1.601032}},
      {{-0.30596703,-3.5194094,-0.8844402,-0.71222866,0.45706043,-2.4961333,-1.0257466,1.7086155,0.4599981,-3.8827603,-0.61780584,-4.0287323,0.11231195,-4.2430453,1.027994,-1.7321063,-0.9930305,1.3236909,-0.0018641843,-2.9533594}},
      {{-2.0395398,-2.4925787,-0.30432278,-0.015881874,-0.3103435,-1.9389995,-1.4040573,2.8959193,-0.04375877,-3.9138966,-2.0120122,-3.2456045,-7.047544,-4.4432197,1.0662115,-0.8643404,-2.2560265,1.1438208,0.3081146,-2.8911023}},
      {{-3.2065737,-1.5663043,0.56772184,0.096207365,-0.74434805,-3.5217054,-1.6468596,2.042452,-0.34519982,-2.0026894,-2.1798575,-3.8060508,-15.322753,-3.7893271,0.8891535,0.55881697,-2.2120063,0.85831743,-1.5246127,-3.0564291}},
      {{0.7100209,-0.58856547,2.0003884,-2.516198,0.15220106,-2.9128492,-1.3239422,-2.0791547,0.3465463,0.26188105,-3.3734374,-2.4683902,-12.604715,1.1966938,-3.1598396,0.17235057,-1.9305412,-1.779977,-2.645049,-1.2206718}},
      {{0.7593929,-1.2745037,1.7449957,-1.8140353,-0.37272373,-1.2845651,-0.9226346,-2.2760155,1.2194499,0.08836546,-1.3704312,-3.962795,-5.061099,1.2923921,-3.4692411,-0.7520102,-0.44658512,0.3627304,-0.8002445,-0.95126194}},
      {{0.5694095,-1.9923108,0.2170058,-0.6866235,-0.29599455,-2.353971,-1.2377479,-1.1554637,1.146786,0.21038859,-0.8808842,-1.4891896,0.3412589,0.66578186,-1.7379718,-0.42962477,-0.17391385,1.0105355,0.049182553,-0.16656396}},
      {{0.6294359,-2.7744617,-1.0157567,-0.32887045,-0.8394683,-0.5205616,-0.7406438,0.05881277,0.69348663,0.28694913,0.20842366,1.4375434,0.5347247,-0.45266265,0.18656723,-1.1088498,-0.23950596,1.037454,0.8275002,-0.33255872}},
      {{0.4426988,-1.9517709,-0.73254514,0.18915443,-1.0225849,-2.0695536,-1.3392719,1.8047069,0.20557712,0.32575142,-0.9149583,-1.9209201,0.2652555,-3.3456225,1.0261997,-0.17992605,-0.6105047,0.5189866,-0.0469615,-1.0378013}},
      {{-0.4565357,-1.6194024,0.1447669,-0.008242005,-1.3904104,-2.575815,-1.713519,3.3120034,-0.34257177,0.28755164,-2.2671072,-5.1552544,-6.302261,-4.931152,1.0566639,0.21770898,-1.9330544,-0.29267484,-0.8387914,-1.2322366}},
      {{-2.1447372,-0.8191502,0.76533866,-0.3394745,-0.9972175,-3.5552557,-1.6956662,2.6239333,-0.64704466,0.008144402,-1.6642615,-5.0391297,-15.468334,-3.390647,0.8242097,1.3006108,-2.3093164,-1.0591418,-2.3612344,-2.2245417}},
      {{-0.47879294,-0.10591569,1.797141,-0.19683568,-0.4920559,-2.1929197,-0.07895188,-2.8106203,0.19726825,0.45820576,-1.1014113,-0.7353795,-12.282158,0.070790805,-1.7268775,0.49026898,-0.80140966,-0.5500268,-1.4336275,-0.98238045}},
      {{-0.84413093,-0.16803849,2.1645324,0.10997836,-0.6938529,1.4441127,0.16741948,-3.2709062,0.4841548,0.431158,1.4643599,-1.8447136,-5.8809557,1.1431986,-2.6359892,0.29751354,-0.0034445336,0.53020877,-0.5840105,-1.6296697}},
      {{-0.5800286,-0.2739393,0.49316937,0.48930135,-0.59489685,-0.99367285,0.11488346,-2.2031326,0.5508767,0.4865268,-0.80318487,0.431105,0.33556613,0.9826795,-1.2751368,0.2230644,0.19189595,0.62606645,-0.500864,-0.3595218}},
      {{-0.063286036,-0.6698533,-1.6921896,0.557687,-1.0064155,1.9414551,0.9564331,-0.14020126,0.058760956,0.4851419,5.3630495,3.8757224,0.5560459,0.2351803,0.07758975,0.16782223,-0.20550297,0.02040895,0.303704,0.2436865}},
      {{0.47550854,-0.41181046,-1.1502436,0.36591604,-1.5275632,-1.6022369,-0.16937378,2.013622,-0.22222409,0.462067,-0.2626343,0.08376317,0.33153862,-0.97273904,0.83791804,0.65441155,-0.31057644,-0.7979021,-1.3193867,0.24653415}},
      {{0.6529259,-0.32578298,0.4740693,-0.23662564,-1.5667719,-1.6327147,-0.23724367,2.8727484,-0.99904424,0.39706558,-0.18637809,-1.8487207,-4.417095,-2.9711833,0.9930015,0.9436715,-1.8838911,-2.2389278,-1.8633401,0.03081705}},
      {{-0.07213005,-0.27873245,0.72913057,-0.7367071,-1.1625944,-0.90211284,-0.02601638,1.4410154,-0.50993794,0.4392667,-0.09496973,-0.36657062,-10.028038,-1.5914087,0.6112309,0.69860965,-2.854944,-2.1022518,-2.820136,-0.15594883}},
      {{-2.2652426,0.8844581,2.1924505,0.3902523,-0.32479113,-2.8993819,-1.252958,-2.9092188,-1.0911465,0.13379098,-2.8315644,-2.898939,-13.772635,-1.5691144,-1.8271989,-0.3375569,-0.30299562,0.44938448,-1.1912469,-2.2146366}},
      {{-3.036467,0.77483726,1.9529337,0.51362234,-0.64176166,-1.9933205,-0.9686184,-2.6713314,-0.42460775,-0.054837458,-0.67857087,-3.916648,-5.539022,0.41728172,-2.229125,-1.0498607,0.41615254,0.31970173,0.09506151,-2.0745566}},
      {{-2.6033428,0.7700347,-0.36947837,0.65694165,-0.27820134,-2.0874524,-1.1488571,-1.7062569,-0.39828974,0.13953894,-1.4968314,-2.0755143,0.35085464,0.9146259,-0.79656863,-0.6008748,0.43104196,0.0473301,0.49864885,-0.621394}},
      {{-0.83948535,0.6353741,-1.4261436,0.23230149,-0.7696694,-1.0540055,-1.1367662,0.06761027,-0.7136597,0.18509753,-0.287875,1.0706595,0.5300814,0.8285198,0.19463223,-1.1233115,0.18937218,-2.0337784,0.96428436,0.2879124}},
      {{0.29686478,0.5897477,-1.1747559,-0.6560959,-0.7814411,-3.10466,-1.4598331,1.7456677,-1.4240975,0.22733623,-0.969824,-1.9688313,0.34156737,0.46844766,0.77291137,-0.15202935,-0.12665243,-3.67197,-0.6779383,0.5183894}},
      {{0.9581243,0.34035683,0.7354086,-2.9443061,-1.1115316,-2.5445168,-1.5351914,2.3970034,-2.5821445,0.21119323,-2.4738483,-5.1441765,-3.014766,-0.44424626,0.73167914,0.2416203,-1.7584579,-3.8320947,-2.7199404,0.5294702}},
      {{0.9038911,0.061934594,1.5389687,-3.3371835,-1.0429913,-3.7997682,-1.357654,1.6058557,-1.6319802,0.22994927,-2.8778741,-3.7357948,-7.5226135,-0.37937164,-0.09134237,0.8891828,-3.3204782,-3.9733443,-4.097912,0.13194351}},
      {{-2.823279,1.4852493,1.8139431,0.71140754,-0.5873106,-3.385537,-1.6504614,-1.7953137,-1.4135755,-3.05693,-2.9414747,-3.1242454,-12.7096615,-3.434713,-1.2044482,-0.7917548,0.04348307,0.15732995,-0.8195322,-2.4330342}},
      {{-3.2156243,1.2493827,1.555238,0.6854151,-0.33955052,-1.8076189,-1.4817934,-2.0486453,-1.4100432,-6.335316,-2.8311405,-3.928723,-4.0415487,-1.3563721,-1.2557807,-0.973281,0.4257546,0.09001616,1.0055639,-1.7572}},
      {{-3.69785,1.403793,-0.55692255,0.36530647,0.48807174,-2.4848135,-1.7194765,-1.1400825,-1.467709,-6.172402,-3.3382638,-5.739941,0.2892941,0.24031223,-0.77869946,-1.8940285,0.43550295,-1.9668565,1.2650951,-0.61971074}},
      {{-1.2579898,1.0924479,-1.4801561,-0.94811684,0.2590817,0.22726035,-1.2104199,0.09168158,-1.811844,-5.1296377,-2.3711104,-1.7977713,0.5099585,0.9705121,-0.0005920846,-1.9436578,0.2149205,-3.7065115,1.5138484,0.27971637}},
      {{-0.14541295,0.88129747,-0.8025674,-4.968369,0.7324463,-2.9045353,-1.7750827,0.93248814,-3.1605618,-2.098276,-2.8711996,-5.2567463,0.29846564,1.0177276,0.39612356,-2.49247,-0.26773697,-4.7856426,0.12891401,0.6594089}},
      {{1.078348,0.5488537,0.6382915,-9.782036,0.59559137,-2.0365882,-1.4487431,1.0288862,-3.5294158,-1.1350591,-2.6158009,-3.8169096,-1.885472,0.9832894,0.34884107,-1.2143861,-2.4556968,-3.9480393,-1.7860314,0.6696758}},
      {{1.2316664,0.37338886,1.5360547,-7.5039577,0.14519505,-3.7054164,-1.615336,0.7570781,-3.016431,-0.3631925,-3.0514767,-4.0569253,-6.116153,0.82006204,-0.67911524,0.028315932,-3.9067562,-3.3950937,-4.33739,0.4203216}},
      {{-4.007606,0.3025122,1.3601879,0.5747281,-0.20212947,-3.4450843,-1.3516862,-1.4653444,-1.2258638,-12.45652,-4.419488,-0.39442095,-11.267837,-1.693514,-0.69179744,-2.7679322,-0.5000371,0.06904414,0.07739329,-2.0628052}},
      {{-3.4432504,0.49857736,0.7537274,0.4104479,0.106554724,-2.7314825,-1.3508981,-1.0900548,-1.0729347,-17.295301,-4.33229,-5.0397778,-1.9482275,-2.5004356,-1.0056785,-3.7991471,0.32711735,-0.25829652,1.9517952,-2.3493304}},
      {{-3.0899692,0.88163567,-0.9837799,-0.4879127,0.69170314,-2.693779,-1.4170437,-0.61221963,-0.9645776,-13.767632,-4.004482,-4.9847965,0.30737808,-1.6783223,-0.45197734,-4.4408493,0.15275393,-1.9077055,2.2040727,-1.7296498}},
      {{-0.92312676,0.16866294,-1.5046716,-3.922741,0.3913874,0.07462531,-0.93326396,-0.17535947,-0.967374,-9.812232,-3.0948586,-1.0095664,0.524984,0.22670971,0.13361974,-4.421477,-0.24668108,-2.1510696,1.5197012,-0.105041854}},
      {{0.4617569,0.43377504,-1.505188,-11.721667,1.341535,-4.166884,-1.7488087,0.79866695,-2.257189,-9.170883,-3.8461695,-4.5558023,0.4805469,1.0688586,-0.14574006,-5.3000875,-0.6959548,-4.4082413,1.2057891,0.46466935}},
      {{1.2351924,-0.3077506,-0.11467581,-16.802732,1.1423684,-3.8674624,-1.6461655,0.69893354,-3.0829322,-3.9753547,-4.2679076,-4.6310077,-0.769896,1.1969231,0.02165578,-5.0989947,-2.0536263,-4.608712,0.2671394,0.59307873}},
      {{0.9704842,-0.08948213,0.620027,-14.660868,0.6270947,-3.5200207,-1.2794361,0.41213125,-2.3127565,-2.9715831,-4.4305987,-1.4452742,-3.4651449,1.020678,-0.331287,-3.3556292,-3.272145,-3.7868345,-3.0005262,0.12963647}}
    }};

    b1 = {
      -0.03935663, 0.4154623, 0.06813095, 0.2717342, 0.16251202, -0.3289463, 0.07043057, 0.060143825, 0.27125192, -0.25338316, 0.1364214, 0.25942004, -0.068981275, -0.013732043, -0.0010166542, -0.8248144, -0.12883316, -0.059836503, -0.005757288, -0.031168442, 0.051829256, 0.037128136
    };

    b2 = {
      0.023331234, 0.078060165, 0.21277837, -0.15073977, 0.26003772, -0.16120502, 0.92033845, 0.03206648, 0.014054816, -0.12829575, -0.014977641, -0.30193332, -0.24152942, -0.08460132, 0.15651087, 0.10621224, -0.030940974, -0.0874756, 0.22478376, -0.003248957
    };

    bout = {
      -2.6218755, -2.043123, -1.53054, -0.9403665, -1.803643, -2.3899174, -2.7301548, -2.370651, -0.21067227, -0.412625, 0.7724215, -0.49085534, -0.82026017, -2.5512636, -2.1237922, -0.69480056, 0.8442997, 1.3803692, 0.7162519, -0.964042, -2.244539, -1.6241851, 0.3691432, 1.1378284, 3.2949579, 1.0569531, 0.13668221, -1.3770996, -2.1973665, -0.74273306, 0.6310908, 1.163659, 0.5032387, -1.1178075, -2.2039726, -2.519401, -0.9721578, -1.0901636, 0.103609584, -1.0570889, -1.0939597, -2.753967, -2.8476908, -2.3900244, -1.908142, -1.1081084, -1.9375967, -2.2764986, -2.7557902
    };

    BN_gamma_in = {
      0.25877398, 0.46354848, 0.4884811, 0.120446205, 0.0057994127, 0.30965847, 0.040829957, 0.6963257, 0.73953617
    };

    BN_gamma_1 = {
      8.942852, 2.3890262, 5.619849, 1.3732746, 2.897982, 8.184412, 3.4705966, 4.248848, 5.956587, 5.9429603, 2.923785, 0.8768863, 8.949426, 3.8072155, 5.9127154, 2.2750335, 7.246726, 6.2120576, 6.9766955, 0.5996075, 3.8186772, 2.4877546
    };

    BN_gamma_2 = {
      3.3613603, 2.4885333, 2.1545837, 3.79801, 2.3910515, 6.933348, 0.5555263, 3.0559547, 1.2550825, 2.3120134, 5.9340262, 11.160691, 2.5577452, 3.5643768, 2.003077, 4.3933764, 2.58635, 3.3343396, 1.8974744, 1.9030235
    };

    BN_beta_1 = {
      -0.015382956, -0.12562762, -0.3234678, -0.07863935, -0.0051564397, -0.01942844, -0.044359088, -0.023310438, -0.0013151397, -0.034732137, -0.18835106, -0.04065542, -0.011404725, -0.04227115, -0.012502069, 0.0029777572, -0.011807923, -0.010655476, -0.011407165, -0.04522672, 0.00016566485, -0.028027313
    };

    BN_beta_2 = {
      -0.23038282, -0.2568, -0.26685503, -0.034364644, -0.4418311, -0.046816096, -0.39354908, -0.22592685, -0.31495482, -0.04202417, -0.100873366, -0.08448772, -0.054674745, -0.13442963, -0.4082556, -0.14133815, -0.19487101, -0.12924539, -0.3075088, -0.17523135
    };
    
    mean = {
      93119.14679226116,61514.43726359288,92279.84066912085,63951.58601476366,19465.761881705766,65336.28641742842,91321.25885271597,61770.84459842645,94094.02798269883
    };

    stdev = {
      695789.1859119398,601709.1986001211,691622.792175041,603753.6803167332,525404.6234132319,604947.933653798,691918.4177574695,602511.7312584047,697023.8795335494
    };
  }
  
}


__inline Void TEncSearch::xTZSearchHelp( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const Int iSearchX, const Int iSearchY, const UChar ucPointNr, const UInt uiDistance )
{
  Distortion  uiSad = 0;

  const Pel* const  piRefSrch = rcStruct.piRefY + iSearchY * rcStruct.iYStride + iSearchX;

  //-- jclee for using the SAD function pointer
  m_pcRdCost->setDistParam( pcPatternKey, piRefSrch, rcStruct.iYStride,  m_cDistParam );

  setDistParamComp(COMPONENT_Y);

  // distortion
  m_cDistParam.bitDepth = pcPatternKey->getBitDepthY();
  m_cDistParam.m_maximumDistortionForEarlyExit = rcStruct.uiBestSad;

  if((m_pcEncCfg->getRestrictMESampling() == false) && m_pcEncCfg->getMotionEstimationSearchMethod() == MESEARCH_SELECTIVE)
  {
    Int isubShift = 0;
    // motion cost
    Distortion uiBitCost = m_pcRdCost->getCostOfVectorWithPredictor( iSearchX, iSearchY );

    // Skip search if bit cost is already larger than best SAD
    if (uiBitCost < rcStruct.uiBestSad)
    {
      if ( m_cDistParam.iRows > 32 )
      {
        m_cDistParam.iSubShift = 4;
      }
      else if ( m_cDistParam.iRows > 16 )
      {
        m_cDistParam.iSubShift = 3;
      }
      else if ( m_cDistParam.iRows > 8 )
      {
        m_cDistParam.iSubShift = 2;
      }
      else
      {
        m_cDistParam.iSubShift = 1;
      }

      Distortion uiTempSad = m_cDistParam.DistFunc( &m_cDistParam );
      if((uiTempSad + uiBitCost) < rcStruct.uiBestSad)
      {
        uiSad += uiTempSad >>  m_cDistParam.iSubShift;
        while(m_cDistParam.iSubShift > 0)
        {
          isubShift         = m_cDistParam.iSubShift -1;
          m_cDistParam.pOrg = pcPatternKey->getROIY() + (pcPatternKey->getPatternLStride() << isubShift);
          m_cDistParam.pCur = piRefSrch + (rcStruct.iYStride << isubShift);
          uiTempSad = m_cDistParam.DistFunc( &m_cDistParam );
          uiSad += uiTempSad >>  m_cDistParam.iSubShift;
          if(((uiSad << isubShift) + uiBitCost) > rcStruct.uiBestSad)
          {
            break;
          }

          m_cDistParam.iSubShift--;
        }

        if(m_cDistParam.iSubShift == 0)
        {
          uiSad += uiBitCost;
          if( uiSad < rcStruct.uiBestSad )
          {
            rcStruct.uiBestSad      = uiSad;
            rcStruct.iBestX         = iSearchX;
            rcStruct.iBestY         = iSearchY;
            rcStruct.uiBestDistance = uiDistance;
            rcStruct.uiBestRound    = 0;
            rcStruct.ucPointNr      = ucPointNr;
            m_cDistParam.m_maximumDistortionForEarlyExit = uiSad;
          }
        }
      }
    }
  }
  else
  {
    // fast encoder decision: use subsampled SAD when rows > 8 for integer ME
    if ( m_pcEncCfg->getFastInterSearchMode()==FASTINTERSEARCH_MODE1 || m_pcEncCfg->getFastInterSearchMode()==FASTINTERSEARCH_MODE3 )
    {
      if ( m_cDistParam.iRows > 8 )
      {
        m_cDistParam.iSubShift = 1;
      }
    }

    uiSad = m_cDistParam.DistFunc( &m_cDistParam );

    // EMI: Modification "array_e & counter_i"
    array_e[counter_i] = uiSad;
    
    // only add motion cost if uiSad is smaller than best. Otherwise pointless
    // to add motion cost.
    if( uiSad < rcStruct.uiBestSad )
    {
      // motion cost
      uiSad += m_pcRdCost->getCostOfVectorWithPredictor( iSearchX, iSearchY );

      if( uiSad < rcStruct.uiBestSad )
      {
        rcStruct.uiBestSad      = uiSad;
        rcStruct.iBestX         = iSearchX;
        rcStruct.iBestY         = iSearchY;
        rcStruct.uiBestDistance = uiDistance;
        rcStruct.uiBestRound    = 0;
        rcStruct.ucPointNr      = ucPointNr;
        m_cDistParam.m_maximumDistortionForEarlyExit = uiSad;
      }
    }
  }
  counter_i = counter_i + 1;
}

__inline Void TEncSearch::xTZ2PointSearch( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const TComMv* const pcMvSrchRngLT, const TComMv* const pcMvSrchRngRB )
{
  Int   iSrchRngHorLeft   = pcMvSrchRngLT->getHor();
  Int   iSrchRngHorRight  = pcMvSrchRngRB->getHor();
  Int   iSrchRngVerTop    = pcMvSrchRngLT->getVer();
  Int   iSrchRngVerBottom = pcMvSrchRngRB->getVer();

  // 2 point search,                   //   1 2 3
  // check only the 2 untested points  //   4 0 5
  // around the start point            //   6 7 8
  Int iStartX = rcStruct.iBestX;
  Int iStartY = rcStruct.iBestY;
  switch( rcStruct.ucPointNr )
  {
    case 1:
    {
      if ( (iStartX - 1) >= iSrchRngHorLeft )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX - 1, iStartY, 0, 2 );
      }
      if ( (iStartY - 1) >= iSrchRngVerTop )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iStartY - 1, 0, 2 );
      }
    }
      break;
    case 2:
    {
      if ( (iStartY - 1) >= iSrchRngVerTop )
      {
        if ( (iStartX - 1) >= iSrchRngHorLeft )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX - 1, iStartY - 1, 0, 2 );
        }
        if ( (iStartX + 1) <= iSrchRngHorRight )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX + 1, iStartY - 1, 0, 2 );
        }
      }
    }
      break;
    case 3:
    {
      if ( (iStartY - 1) >= iSrchRngVerTop )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iStartY - 1, 0, 2 );
      }
      if ( (iStartX + 1) <= iSrchRngHorRight )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX + 1, iStartY, 0, 2 );
      }
    }
      break;
    case 4:
    {
      if ( (iStartX - 1) >= iSrchRngHorLeft )
      {
        if ( (iStartY + 1) <= iSrchRngVerBottom )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX - 1, iStartY + 1, 0, 2 );
        }
        if ( (iStartY - 1) >= iSrchRngVerTop )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX - 1, iStartY - 1, 0, 2 );
        }
      }
    }
      break;
    case 5:
    {
      if ( (iStartX + 1) <= iSrchRngHorRight )
      {
        if ( (iStartY - 1) >= iSrchRngVerTop )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX + 1, iStartY - 1, 0, 2 );
        }
        if ( (iStartY + 1) <= iSrchRngVerBottom )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX + 1, iStartY + 1, 0, 2 );
        }
      }
    }
      break;
    case 6:
    {
      if ( (iStartX - 1) >= iSrchRngHorLeft )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX - 1, iStartY , 0, 2 );
      }
      if ( (iStartY + 1) <= iSrchRngVerBottom )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iStartY + 1, 0, 2 );
      }
    }
      break;
    case 7:
    {
      if ( (iStartY + 1) <= iSrchRngVerBottom )
      {
        if ( (iStartX - 1) >= iSrchRngHorLeft )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX - 1, iStartY + 1, 0, 2 );
        }
        if ( (iStartX + 1) <= iSrchRngHorRight )
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX + 1, iStartY + 1, 0, 2 );
        }
      }
    }
      break;
    case 8:
    {
      if ( (iStartX + 1) <= iSrchRngHorRight )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX + 1, iStartY, 0, 2 );
      }
      if ( (iStartY + 1) <= iSrchRngVerBottom )
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iStartY + 1, 0, 2 );
      }
    }
      break;
    default:
    {
      assert( false );
    }
      break;
  } // switch( rcStruct.ucPointNr )
}




__inline Void TEncSearch::xTZ8PointSquareSearch( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const TComMv* const pcMvSrchRngLT, const TComMv* const pcMvSrchRngRB, const Int iStartX, const Int iStartY, const Int iDist )
{
  const Int   iSrchRngHorLeft   = pcMvSrchRngLT->getHor();
  const Int   iSrchRngHorRight  = pcMvSrchRngRB->getHor();
  const Int   iSrchRngVerTop    = pcMvSrchRngLT->getVer();
  const Int   iSrchRngVerBottom = pcMvSrchRngRB->getVer();

  // 8 point search,                   //   1 2 3
  // search around the start point     //   4 0 5
  // with the required  distance       //   6 7 8
  assert( iDist != 0 );
  const Int iTop        = iStartY - iDist;
  const Int iBottom     = iStartY + iDist;
  const Int iLeft       = iStartX - iDist;
  const Int iRight      = iStartX + iDist;
  rcStruct.uiBestRound += 1;

  if ( iTop >= iSrchRngVerTop ) // check top
  {
    if ( iLeft >= iSrchRngHorLeft ) // check top left
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iTop, 1, iDist );
    }
    // top middle
    xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iTop, 2, iDist );

    if ( iRight <= iSrchRngHorRight ) // check top right
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iRight, iTop, 3, iDist );
    }
  } // check top
  if ( iLeft >= iSrchRngHorLeft ) // check middle left
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iStartY, 4, iDist );
  }
  if ( iRight <= iSrchRngHorRight ) // check middle right
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iRight, iStartY, 5, iDist );
  }
  if ( iBottom <= iSrchRngVerBottom ) // check bottom
  {
    if ( iLeft >= iSrchRngHorLeft ) // check bottom left
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iBottom, 6, iDist );
    }
    // check bottom middle
    xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iBottom, 7, iDist );

    if ( iRight <= iSrchRngHorRight ) // check bottom right
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iRight, iBottom, 8, iDist );
    }
  } // check bottom
}


//additing other square search

__inline Void TEncSearch::xTZ8PointSquareSearch2( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const TComMv* const pcMvSrchRngLT, const TComMv* const pcMvSrchRngRB, const Int iStartX, const Int iStartY, const Int iDist )
{
  const Int   iSrchRngHorLeft   = pcMvSrchRngLT->getHor();
  const Int   iSrchRngHorRight  = pcMvSrchRngRB->getHor();
  const Int   iSrchRngVerTop    = pcMvSrchRngLT->getVer();
  const Int   iSrchRngVerBottom = pcMvSrchRngRB->getVer();

  // 8 point search,                   //   1 2 3
  // search around the start point     //   4 0 5
  // with the required  distance       //   6 7 8
  assert( iDist != 0 );
  const Int iTop        = iStartY - iDist;
  const Int iBottom     = iStartY + iDist;
  const Int iLeft       = iStartX - iDist;
  const Int iRight      = iStartX + iDist;
  rcStruct.uiBestRound += 1;
// check top
  if ( iTop >= iSrchRngVerTop ) // check top
  {
	 if ( iLeft >= iSrchRngHorLeft ) // check top left
    {
		xTZSearchHelp(pcPatternKey, rcStruct, iLeft, iTop, 9, iDist);
    }
	  
	 if ( iLeft >= iSrchRngHorLeft ) // check top left
    {
		xTZSearchHelp(pcPatternKey, rcStruct, iStartX - 1, iTop, 10, iDist);
    }
    xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iTop, 11, iDist );
	
	if (iRight <= iSrchRngHorRight) // check top left
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iStartX +1, iTop, 12, iDist );
    }
	
    if ( iRight <= iSrchRngHorRight ) // check top right
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iRight, iTop, 13, iDist );
    }
  }

  if ( iLeft >= iSrchRngHorLeft ) // check middle left
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iStartY-1, 14, iDist );
  }

  if (iRight <= iSrchRngHorRight) // check middle left
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iRight, iStartY-1, 15, iDist );
  }
  
  
  if ( iLeft >= iSrchRngHorLeft ) // check middle left
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iStartY, 16, iDist );
  }
  
  
  if ( iRight <= iSrchRngHorRight ) // check middle right
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iRight, iStartY, 17, iDist );
  }
  
  if ( iLeft >= iSrchRngHorLeft ) // check middle left
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iStartY+1, 18, iDist );
  }
  
  if (iRight <= iSrchRngHorRight) // check middle left
  {
    xTZSearchHelp( pcPatternKey, rcStruct, iRight, iStartY+1, 19, iDist );
  }
  
  
  
  if ( iBottom <= iSrchRngVerBottom ) // check bottom
  {
	  
	if ( iLeft >= iSrchRngHorLeft ) // check bottom left
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iBottom, 20, iDist );
    }  
	  
	if ( iLeft >= iSrchRngHorLeft ) // check bottom left
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iStartX - 1, iBottom, 21, iDist );
    }   
	  
	  
    
    // check bottom middle
    xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iBottom, 22, iDist );

	if ( iRight <= iSrchRngHorRight ) // check bottom right
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iStartX + 1, iBottom, 23, iDist );
    }
	
    if ( iRight <= iSrchRngHorRight ) // check bottom right
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iRight, iBottom, 24, iDist );
    }
  } 
  
  // check bottom
}











__inline Void TEncSearch::xTZ8PointDiamondSearch( const TComPattern*const  pcPatternKey,
                                                  IntTZSearchStruct& rcStruct,
                                                  const TComMv*const  pcMvSrchRngLT,
                                                  const TComMv*const  pcMvSrchRngRB,
                                                  const Int iStartX,
                                                  const Int iStartY,
                                                  const Int iDist,
                                                  const Bool bCheckCornersAtDist1 )
{
  const Int   iSrchRngHorLeft   = pcMvSrchRngLT->getHor();
  const Int   iSrchRngHorRight  = pcMvSrchRngRB->getHor();
  const Int   iSrchRngVerTop    = pcMvSrchRngLT->getVer();
  const Int   iSrchRngVerBottom = pcMvSrchRngRB->getVer();

  // 8 point search,                   //   1 2 3
  // search around the start point     //   4 0 5
  // with the required  distance       //   6 7 8
  assert ( iDist != 0 );
  const Int iTop        = iStartY - iDist;
  const Int iBottom     = iStartY + iDist;
  const Int iLeft       = iStartX - iDist;
  const Int iRight      = iStartX + iDist;
  rcStruct.uiBestRound += 1;

  if ( iDist == 1 )
  {
    if ( iTop >= iSrchRngVerTop ) // check top
    {
      if (bCheckCornersAtDist1)
      {
        if ( iLeft >= iSrchRngHorLeft) // check top-left
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iTop, 1, iDist );
        }
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iTop, 2, iDist );
        if ( iRight <= iSrchRngHorRight ) // check middle right
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iRight, iTop, 3, iDist );
        }
      }
      else
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iTop, 2, iDist );
      }
    }
    if ( iLeft >= iSrchRngHorLeft ) // check middle left
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iStartY, 4, iDist );
    }
    if ( iRight <= iSrchRngHorRight ) // check middle right
    {
      xTZSearchHelp( pcPatternKey, rcStruct, iRight, iStartY, 5, iDist );
    }
    if ( iBottom <= iSrchRngVerBottom ) // check bottom
    {
      if (bCheckCornersAtDist1)
      {
        if ( iLeft >= iSrchRngHorLeft) // check top-left
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iBottom, 6, iDist );
        }
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iBottom, 7, iDist );
        if ( iRight <= iSrchRngHorRight ) // check middle right
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iRight, iBottom, 8, iDist );
        }
      }
      else
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iBottom, 7, iDist );
      }
    }
  }
  else
  {
    if ( iDist <= 8 )
    {
      const Int iTop_2      = iStartY - (iDist>>1);
      const Int iBottom_2   = iStartY + (iDist>>1);
      const Int iLeft_2     = iStartX - (iDist>>1);
      const Int iRight_2    = iStartX + (iDist>>1);

      if (  iTop >= iSrchRngVerTop && iLeft >= iSrchRngHorLeft &&
          iRight <= iSrchRngHorRight && iBottom <= iSrchRngVerBottom ) // check border
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX,  iTop,      2, iDist    );
        xTZSearchHelp( pcPatternKey, rcStruct, iLeft_2,  iTop_2,    1, iDist>>1 );
        xTZSearchHelp( pcPatternKey, rcStruct, iRight_2, iTop_2,    3, iDist>>1 );
        xTZSearchHelp( pcPatternKey, rcStruct, iLeft,    iStartY,   4, iDist    );
        xTZSearchHelp( pcPatternKey, rcStruct, iRight,   iStartY,   5, iDist    );
        xTZSearchHelp( pcPatternKey, rcStruct, iLeft_2,  iBottom_2, 6, iDist>>1 );
        xTZSearchHelp( pcPatternKey, rcStruct, iRight_2, iBottom_2, 8, iDist>>1 );
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX,  iBottom,   7, iDist    );
      }
      else // check border
      {
        if ( iTop >= iSrchRngVerTop ) // check top
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iTop, 2, iDist );
        }
        if ( iTop_2 >= iSrchRngVerTop ) // check half top
        {
          if ( iLeft_2 >= iSrchRngHorLeft ) // check half left
          {
            xTZSearchHelp( pcPatternKey, rcStruct, iLeft_2, iTop_2, 1, (iDist>>1) );
          }
          if ( iRight_2 <= iSrchRngHorRight ) // check half right
          {
            xTZSearchHelp( pcPatternKey, rcStruct, iRight_2, iTop_2, 3, (iDist>>1) );
          }
        } // check half top
        if ( iLeft >= iSrchRngHorLeft ) // check left
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iStartY, 4, iDist );
        }
        if ( iRight <= iSrchRngHorRight ) // check right
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iRight, iStartY, 5, iDist );
        }
        if ( iBottom_2 <= iSrchRngVerBottom ) // check half bottom
        {
          if ( iLeft_2 >= iSrchRngHorLeft ) // check half left
          {
            xTZSearchHelp( pcPatternKey, rcStruct, iLeft_2, iBottom_2, 6, (iDist>>1) );
          }
          if ( iRight_2 <= iSrchRngHorRight ) // check half right
          {
            xTZSearchHelp( pcPatternKey, rcStruct, iRight_2, iBottom_2, 8, (iDist>>1) );
          }
        } // check half bottom
        if ( iBottom <= iSrchRngVerBottom ) // check bottom
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iBottom, 7, iDist );
        }
      } // check border
    }
    else // iDist > 8
    {
      if ( iTop >= iSrchRngVerTop && iLeft >= iSrchRngHorLeft &&
          iRight <= iSrchRngHorRight && iBottom <= iSrchRngVerBottom ) // check border
      {
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iTop,    0, iDist );
        xTZSearchHelp( pcPatternKey, rcStruct, iLeft,   iStartY, 0, iDist );
        xTZSearchHelp( pcPatternKey, rcStruct, iRight,  iStartY, 0, iDist );
        xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iBottom, 0, iDist );
        for ( Int index = 1; index < 4; index++ )
        {
          const Int iPosYT = iTop    + ((iDist>>2) * index);
          const Int iPosYB = iBottom - ((iDist>>2) * index);
          const Int iPosXL = iStartX - ((iDist>>2) * index);
          const Int iPosXR = iStartX + ((iDist>>2) * index);
          xTZSearchHelp( pcPatternKey, rcStruct, iPosXL, iPosYT, 0, iDist );
          xTZSearchHelp( pcPatternKey, rcStruct, iPosXR, iPosYT, 0, iDist );
          xTZSearchHelp( pcPatternKey, rcStruct, iPosXL, iPosYB, 0, iDist );
          xTZSearchHelp( pcPatternKey, rcStruct, iPosXR, iPosYB, 0, iDist );
        }
      }
      else // check border
      {
        if ( iTop >= iSrchRngVerTop ) // check top
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iTop, 0, iDist );
        }
        if ( iLeft >= iSrchRngHorLeft ) // check left
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iLeft, iStartY, 0, iDist );
        }
        if ( iRight <= iSrchRngHorRight ) // check right
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iRight, iStartY, 0, iDist );
        }
        if ( iBottom <= iSrchRngVerBottom ) // check bottom
        {
          xTZSearchHelp( pcPatternKey, rcStruct, iStartX, iBottom, 0, iDist );
        }
        for ( Int index = 1; index < 4; index++ )
        {
          const Int iPosYT = iTop    + ((iDist>>2) * index);
          const Int iPosYB = iBottom - ((iDist>>2) * index);
          const Int iPosXL = iStartX - ((iDist>>2) * index);
          const Int iPosXR = iStartX + ((iDist>>2) * index);

          if ( iPosYT >= iSrchRngVerTop ) // check top
          {
            if ( iPosXL >= iSrchRngHorLeft ) // check left
            {
              xTZSearchHelp( pcPatternKey, rcStruct, iPosXL, iPosYT, 0, iDist );
            }
            if ( iPosXR <= iSrchRngHorRight ) // check right
            {
              xTZSearchHelp( pcPatternKey, rcStruct, iPosXR, iPosYT, 0, iDist );
            }
          } // check top
          if ( iPosYB <= iSrchRngVerBottom ) // check bottom
          {
            if ( iPosXL >= iSrchRngHorLeft ) // check left
            {
              xTZSearchHelp( pcPatternKey, rcStruct, iPosXL, iPosYB, 0, iDist );
            }
            if ( iPosXR <= iSrchRngHorRight ) // check right
            {
              xTZSearchHelp( pcPatternKey, rcStruct, iPosXR, iPosYB, 0, iDist );
            }
          } // check bottom
        } // for ...
      } // check border
    } // iDist <= 8
  } // iDist == 1
}

Distortion TEncSearch::xPatternRefinement( TComPattern* pcPatternKey,
                                           TComMv baseRefMv,
                                           Int iFrac, TComMv& rcMvFrac,
                                           Bool bAllowUseOfHadamard
                                         )
{
  Distortion  uiDist;
  Distortion  uiDistBest  = std::numeric_limits<Distortion>::max();
  UInt        uiDirecBest = 0;

  Pel*  piRefPos;
  Int iRefStride = m_filteredBlock[0][0].getStride(COMPONENT_Y);

  m_pcRdCost->setDistParam( pcPatternKey, m_filteredBlock[0][0].getAddr(COMPONENT_Y), iRefStride, 1, m_cDistParam, m_pcEncCfg->getUseHADME() && bAllowUseOfHadamard );

  const TComMv* pcMvRefine = (iFrac == 2 ? s_acMvRefineH : s_acMvRefineQ);

  for (UInt i = 0; i < 9; i++)
  {
    TComMv cMvTest = pcMvRefine[i];
    cMvTest += baseRefMv;

    Int horVal = cMvTest.getHor() * iFrac;
    Int verVal = cMvTest.getVer() * iFrac;
    piRefPos = m_filteredBlock[ verVal & 3 ][ horVal & 3 ].getAddr(COMPONENT_Y);
    if ( horVal == 2 && ( verVal & 1 ) == 0 )
    {
      piRefPos += 1;
    }
    if ( ( horVal & 1 ) == 0 && verVal == 2 )
    {
      piRefPos += iRefStride;
    }
    cMvTest = pcMvRefine[i];
    cMvTest += rcMvFrac;

    setDistParamComp(COMPONENT_Y);

    m_cDistParam.pCur = piRefPos;
    m_cDistParam.bitDepth = pcPatternKey->getBitDepthY();
    uiDist = m_cDistParam.DistFunc( &m_cDistParam );
    uiDist += m_pcRdCost->getCostOfVectorWithPredictor( cMvTest.getHor(), cMvTest.getVer() );

    if ( uiDist < uiDistBest )
    {
      uiDistBest  = uiDist;
      uiDirecBest = i;
      m_cDistParam.m_maximumDistortionForEarlyExit = uiDist;
    }
  }

  rcMvFrac = pcMvRefine[uiDirecBest];

  return uiDistBest;
}



Void
TEncSearch::xEncSubdivCbfQT(TComTU      &rTu,
                            Bool         bLuma,
                            Bool         bChroma )
{
  TComDataCU* pcCU=rTu.getCU();
  const UInt uiAbsPartIdx         = rTu.GetAbsPartIdxTU();
  const UInt uiTrDepth            = rTu.GetTransformDepthRel();
  const UInt uiTrMode             = pcCU->getTransformIdx( uiAbsPartIdx );
  const UInt uiSubdiv             = ( uiTrMode > uiTrDepth ? 1 : 0 );
  const UInt uiLog2LumaTrafoSize  = rTu.GetLog2LumaTrSize();

  if( pcCU->isIntra(0) && pcCU->getPartitionSize(0) == SIZE_NxN && uiTrDepth == 0 )
  {
    assert( uiSubdiv );
  }
  else if( uiLog2LumaTrafoSize > pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() )
  {
    assert( uiSubdiv );
  }
  else if( uiLog2LumaTrafoSize == pcCU->getSlice()->getSPS()->getQuadtreeTULog2MinSize() )
  {
    assert( !uiSubdiv );
  }
  else if( uiLog2LumaTrafoSize == pcCU->getQuadtreeTULog2MinSizeInCU(uiAbsPartIdx) )
  {
    assert( !uiSubdiv );
  }
  else
  {
    assert( uiLog2LumaTrafoSize > pcCU->getQuadtreeTULog2MinSizeInCU(uiAbsPartIdx) );
    if( bLuma )
    {
      m_pcEntropyCoder->encodeTransformSubdivFlag( uiSubdiv, 5 - uiLog2LumaTrafoSize );
    }
  }

  if ( bChroma )
  {
    const UInt numberValidComponents = getNumberValidComponents(rTu.GetChromaFormat());
    for (UInt ch=COMPONENT_Cb; ch<numberValidComponents; ch++)
    {
      const ComponentID compID=ComponentID(ch);
      if( rTu.ProcessingAllQuadrants(compID) && (uiTrDepth==0 || pcCU->getCbf( uiAbsPartIdx, compID, uiTrDepth-1 ) ))
      {
        m_pcEntropyCoder->encodeQtCbf(rTu, compID, (uiSubdiv == 0));
      }
    }
  }

  if( uiSubdiv )
  {
    TComTURecurse tuRecurse(rTu, false);
    do
    {
      xEncSubdivCbfQT( tuRecurse, bLuma, bChroma );
    } while (tuRecurse.nextSection(rTu));
  }
  else
  {
    //===== Cbfs =====
    if( bLuma )
    {
      m_pcEntropyCoder->encodeQtCbf( rTu, COMPONENT_Y, true );
    }
  }
}




Void
TEncSearch::xEncCoeffQT(TComTU &rTu,
                        const ComponentID  component,
                        Bool         bRealCoeff )
{
  TComDataCU* pcCU=rTu.getCU();
  const UInt uiAbsPartIdx = rTu.GetAbsPartIdxTU();
  const UInt uiTrDepth=rTu.GetTransformDepthRel();

  const UInt  uiTrMode        = pcCU->getTransformIdx( uiAbsPartIdx );
  const UInt  uiSubdiv        = ( uiTrMode > uiTrDepth ? 1 : 0 );

  if( uiSubdiv )
  {
    TComTURecurse tuRecurseChild(rTu, false);
    do
    {
      xEncCoeffQT( tuRecurseChild, component, bRealCoeff );
    } while (tuRecurseChild.nextSection(rTu) );
  }
  else if (rTu.ProcessComponentSection(component))
  {
    //===== coefficients =====
    const UInt  uiLog2TrafoSize = rTu.GetLog2LumaTrSize();
    UInt    uiCoeffOffset   = rTu.getCoefficientOffset(component);
    UInt    uiQTLayer       = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrafoSize;
    TCoeff* pcCoeff         = bRealCoeff ? pcCU->getCoeff(component) : m_ppcQTTempCoeff[component][uiQTLayer];

    if (isChroma(component) && (pcCU->getCbf( rTu.GetAbsPartIdxTU(), COMPONENT_Y, uiTrMode ) != 0) && pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag() )
    {
      m_pcEntropyCoder->encodeCrossComponentPrediction( rTu, component );
    }

    m_pcEntropyCoder->encodeCoeffNxN( rTu, pcCoeff+uiCoeffOffset, component );
  }
}




Void
TEncSearch::xEncIntraHeader( TComDataCU*  pcCU,
                            UInt         uiTrDepth,
                            UInt         uiAbsPartIdx,
                            Bool         bLuma,
                            Bool         bChroma )
{
  if( bLuma )
  {
    // CU header
    if( uiAbsPartIdx == 0 )
    {
      if( !pcCU->getSlice()->isIntra() )
      {
        if (pcCU->getSlice()->getPPS()->getTransquantBypassEnableFlag())
        {
          m_pcEntropyCoder->encodeCUTransquantBypassFlag( pcCU, 0, true );
        }
        m_pcEntropyCoder->encodeSkipFlag( pcCU, 0, true );
        m_pcEntropyCoder->encodePredMode( pcCU, 0, true );
      }
      m_pcEntropyCoder  ->encodePartSize( pcCU, 0, pcCU->getDepth(0), true );

      if (pcCU->isIntra(0) && pcCU->getPartitionSize(0) == SIZE_2Nx2N )
      {
        m_pcEntropyCoder->encodeIPCMInfo( pcCU, 0, true );

        if ( pcCU->getIPCMFlag (0))
        {
          return;
        }
      }
    }
    // luma prediction mode
    if( pcCU->getPartitionSize(0) == SIZE_2Nx2N )
    {
      if (uiAbsPartIdx==0)
      {
        m_pcEntropyCoder->encodeIntraDirModeLuma ( pcCU, 0 );
      }
    }
    else
    {
      UInt uiQNumParts = pcCU->getTotalNumPart() >> 2;
      if (uiTrDepth>0 && (uiAbsPartIdx%uiQNumParts)==0)
      {
        m_pcEntropyCoder->encodeIntraDirModeLuma ( pcCU, uiAbsPartIdx );
      }
    }
  }

  if( bChroma )
  {
    if( pcCU->getPartitionSize(0) == SIZE_2Nx2N || !enable4ChromaPUsInIntraNxNCU(pcCU->getPic()->getChromaFormat()))
    {
      if(uiAbsPartIdx==0)
      {
         m_pcEntropyCoder->encodeIntraDirModeChroma ( pcCU, uiAbsPartIdx );
      }
    }
    else
    {
      UInt uiQNumParts = pcCU->getTotalNumPart() >> 2;
      assert(uiTrDepth>0);
      if ((uiAbsPartIdx%uiQNumParts)==0)
      {
        m_pcEntropyCoder->encodeIntraDirModeChroma ( pcCU, uiAbsPartIdx );
      }
    }
  }
}




UInt
TEncSearch::xGetIntraBitsQT(TComTU &rTu,
                            Bool         bLuma,
                            Bool         bChroma,
                            Bool         bRealCoeff /* just for test */ )
{
  TComDataCU* pcCU=rTu.getCU();
  const UInt uiAbsPartIdx = rTu.GetAbsPartIdxTU();
  const UInt uiTrDepth=rTu.GetTransformDepthRel();
  m_pcEntropyCoder->resetBits();
  xEncIntraHeader ( pcCU, uiTrDepth, uiAbsPartIdx, bLuma, bChroma );
  xEncSubdivCbfQT ( rTu, bLuma, bChroma );

  if( bLuma )
  {
    xEncCoeffQT   ( rTu, COMPONENT_Y,      bRealCoeff );
  }
  if( bChroma )
  {
    xEncCoeffQT   ( rTu, COMPONENT_Cb,  bRealCoeff );
    xEncCoeffQT   ( rTu, COMPONENT_Cr,  bRealCoeff );
  }
  UInt   uiBits = m_pcEntropyCoder->getNumberOfWrittenBits();

  return uiBits;
}

UInt TEncSearch::xGetIntraBitsQTChroma(TComTU &rTu,
                                       ComponentID compID,
                                       Bool         bRealCoeff /* just for test */ )
{
  m_pcEntropyCoder->resetBits();
  xEncCoeffQT   ( rTu, compID,  bRealCoeff );
  UInt   uiBits = m_pcEntropyCoder->getNumberOfWrittenBits();
  return uiBits;
}

Void TEncSearch::xIntraCodingTUBlock(       TComYuv*    pcOrgYuv,
                                            TComYuv*    pcPredYuv,
                                            TComYuv*    pcResiYuv,
                                            Pel         resiLuma[NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE],
                                      const Bool        checkCrossCPrediction,
                                            Distortion& ruiDist,
                                      const ComponentID compID,
                                            TComTU&     rTu
                                      DEBUG_STRING_FN_DECLARE(sDebug)
                                           ,Int         default0Save1Load2
                                     )
{
  if (!rTu.ProcessComponentSection(compID))
  {
    return;
  }
  const Bool           bIsLuma          = isLuma(compID);
  const TComRectangle &rect             = rTu.getRect(compID);
        TComDataCU    *pcCU             = rTu.getCU();
  const UInt           uiAbsPartIdx     = rTu.GetAbsPartIdxTU();
  const TComSPS       &sps              = *(pcCU->getSlice()->getSPS());

  const UInt           uiTrDepth        = rTu.GetTransformDepthRelAdj(compID);
  const UInt           uiFullDepth      = rTu.GetTransformDepthTotal();
  const UInt           uiLog2TrSize     = rTu.GetLog2LumaTrSize();
  const ChromaFormat   chFmt            = pcOrgYuv->getChromaFormat();
  const ChannelType    chType           = toChannelType(compID);
  const Int            bitDepth         = sps.getBitDepth(chType);

  const UInt           uiWidth          = rect.width;
  const UInt           uiHeight         = rect.height;
  const UInt           uiStride         = pcOrgYuv ->getStride (compID);
        Pel           *piOrg            = pcOrgYuv ->getAddr( compID, uiAbsPartIdx );
        Pel           *piPred           = pcPredYuv->getAddr( compID, uiAbsPartIdx );
        Pel           *piResi           = pcResiYuv->getAddr( compID, uiAbsPartIdx );
        Pel           *piReco           = pcPredYuv->getAddr( compID, uiAbsPartIdx );
  const UInt           uiQTLayer        = sps.getQuadtreeTULog2MaxSize() - uiLog2TrSize;
        Pel           *piRecQt          = m_pcQTTempTComYuv[ uiQTLayer ].getAddr( compID, uiAbsPartIdx );
  const UInt           uiRecQtStride    = m_pcQTTempTComYuv[ uiQTLayer ].getStride(compID);
  const UInt           uiZOrder         = pcCU->getZorderIdxInCtu() + uiAbsPartIdx;
        Pel           *piRecIPred       = pcCU->getPic()->getPicYuvRec()->getAddr( compID, pcCU->getCtuRsAddr(), uiZOrder );
        UInt           uiRecIPredStride = pcCU->getPic()->getPicYuvRec()->getStride  ( compID );
        TCoeff        *pcCoeff          = m_ppcQTTempCoeff[compID][uiQTLayer] + rTu.getCoefficientOffset(compID);
        Bool           useTransformSkip = pcCU->getTransformSkip(uiAbsPartIdx, compID);

#if ADAPTIVE_QP_SELECTION
        TCoeff        *pcArlCoeff       = m_ppcQTTempArlCoeff[compID][ uiQTLayer ] + rTu.getCoefficientOffset(compID);
#endif

  const UInt           uiChPredMode     = pcCU->getIntraDir( chType, uiAbsPartIdx );
  const UInt           partsPerMinCU    = 1<<(2*(sps.getMaxTotalCUDepth() - sps.getLog2DiffMaxMinCodingBlockSize()));
  const UInt           uiChCodedMode    = (uiChPredMode==DM_CHROMA_IDX && !bIsLuma) ? pcCU->getIntraDir(CHANNEL_TYPE_LUMA, getChromasCorrespondingPULumaIdx(uiAbsPartIdx, chFmt, partsPerMinCU)) : uiChPredMode;
  const UInt           uiChFinalMode    = ((chFmt == CHROMA_422)       && !bIsLuma) ? g_chroma422IntraAngleMappingTable[uiChCodedMode] : uiChCodedMode;

  const Int            blkX                                 = g_auiRasterToPelX[ g_auiZscanToRaster[ uiAbsPartIdx ] ];
  const Int            blkY                                 = g_auiRasterToPelY[ g_auiZscanToRaster[ uiAbsPartIdx ] ];
  const Int            bufferOffset                         = blkX + (blkY * MAX_CU_SIZE);
        Pel  *const    encoderLumaResidual                  = resiLuma[RESIDUAL_ENCODER_SIDE ] + bufferOffset;
        Pel  *const    reconstructedLumaResidual            = resiLuma[RESIDUAL_RECONSTRUCTED] + bufferOffset;
  const Bool           bUseCrossCPrediction                 = isChroma(compID) && (uiChPredMode == DM_CHROMA_IDX) && checkCrossCPrediction;
  const Bool           bUseReconstructedResidualForEstimate = m_pcEncCfg->getUseReconBasedCrossCPredictionEstimate();
        Pel *const     lumaResidualForEstimate              = bUseReconstructedResidualForEstimate ? reconstructedLumaResidual : encoderLumaResidual;

#if DEBUG_STRING
  const Int debugPredModeMask=DebugStringGetPredModeMask(MODE_INTRA);
#endif

  //===== init availability pattern =====
  DEBUG_STRING_NEW(sTemp)

#if !DEBUG_STRING
  if( default0Save1Load2 != 2 )
#endif
  {
    const Bool bUseFilteredPredictions=TComPrediction::filteringIntraReferenceSamples(compID, uiChFinalMode, uiWidth, uiHeight, chFmt, sps.getSpsRangeExtension().getIntraSmoothingDisabledFlag());

    initIntraPatternChType( rTu, compID, bUseFilteredPredictions DEBUG_STRING_PASS_INTO(sDebug) );

    //===== get prediction signal =====
    predIntraAng( compID, uiChFinalMode, piOrg, uiStride, piPred, uiStride, rTu, bUseFilteredPredictions );

    // save prediction
    if( default0Save1Load2 == 1 )
    {
      Pel*  pPred   = piPred;
      Pel*  pPredBuf = m_pSharedPredTransformSkip[compID];
      Int k = 0;
      for( UInt uiY = 0; uiY < uiHeight; uiY++ )
      {
        for( UInt uiX = 0; uiX < uiWidth; uiX++ )
        {
          pPredBuf[ k ++ ] = pPred[ uiX ];
        }
        pPred += uiStride;
      }
    }
  }
#if !DEBUG_STRING
  else
  {
    // load prediction
    Pel*  pPred   = piPred;
    Pel*  pPredBuf = m_pSharedPredTransformSkip[compID];
    Int k = 0;
    for( UInt uiY = 0; uiY < uiHeight; uiY++ )
    {
      for( UInt uiX = 0; uiX < uiWidth; uiX++ )
      {
        pPred[ uiX ] = pPredBuf[ k ++ ];
      }
      pPred += uiStride;
    }
  }
#endif

  //===== get residual signal =====
  {
    // get residual
    Pel*  pOrg    = piOrg;
    Pel*  pPred   = piPred;
    Pel*  pResi   = piResi;

    for( UInt uiY = 0; uiY < uiHeight; uiY++ )
    {
      for( UInt uiX = 0; uiX < uiWidth; uiX++ )
      {
        pResi[ uiX ] = pOrg[ uiX ] - pPred[ uiX ];
      }

      pOrg  += uiStride;
      pResi += uiStride;
      pPred += uiStride;
    }
  }

  if (pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag())
  {
    if (bUseCrossCPrediction)
    {
      if (xCalcCrossComponentPredictionAlpha( rTu, compID, lumaResidualForEstimate, piResi, uiWidth, uiHeight, MAX_CU_SIZE, uiStride ) == 0)
      {
        return;
      }
      TComTrQuant::crossComponentPrediction ( rTu, compID, reconstructedLumaResidual, piResi, piResi, uiWidth, uiHeight, MAX_CU_SIZE, uiStride, uiStride, false );
    }
    else if (isLuma(compID) && !bUseReconstructedResidualForEstimate)
    {
      xStoreCrossComponentPredictionResult( encoderLumaResidual, piResi, rTu, 0, 0, MAX_CU_SIZE, uiStride );
    }
  }

  //===== transform and quantization =====
  //--- init rate estimation arrays for RDOQ ---
  if( useTransformSkip ? m_pcEncCfg->getUseRDOQTS() : m_pcEncCfg->getUseRDOQ() )
  {
    m_pcEntropyCoder->estimateBit( m_pcTrQuant->m_pcEstBitsSbac, uiWidth, uiHeight, chType );
  }

  //--- transform and quantization ---
  TCoeff uiAbsSum = 0;
  if (bIsLuma)
  {
    pcCU       ->setTrIdxSubParts ( uiTrDepth, uiAbsPartIdx, uiFullDepth );
  }

  const QpParam cQP(*pcCU, compID);

#if RDOQ_CHROMA_LAMBDA
  m_pcTrQuant->selectLambda     (compID);
#endif

  m_pcTrQuant->transformNxN     ( rTu, compID, piResi, uiStride, pcCoeff,
#if ADAPTIVE_QP_SELECTION
    pcArlCoeff,
#endif
    uiAbsSum, cQP
    );

  //--- inverse transform ---

#if DEBUG_STRING
  if ( (uiAbsSum > 0) || (DebugOptionList::DebugString_InvTran.getInt()&debugPredModeMask) )
#else
  if ( uiAbsSum > 0 )
#endif
  {
    m_pcTrQuant->invTransformNxN ( rTu, compID, piResi, uiStride, pcCoeff, cQP DEBUG_STRING_PASS_INTO_OPTIONAL(&sDebug, (DebugOptionList::DebugString_InvTran.getInt()&debugPredModeMask)) );
  }
  else
  {
    Pel* pResi = piResi;
    memset( pcCoeff, 0, sizeof( TCoeff ) * uiWidth * uiHeight );
    for( UInt uiY = 0; uiY < uiHeight; uiY++ )
    {
      memset( pResi, 0, sizeof( Pel ) * uiWidth );
      pResi += uiStride;
    }
  }


  //===== reconstruction =====
  {
    Pel* pPred      = piPred;
    Pel* pResi      = piResi;
    Pel* pReco      = piReco;
    Pel* pRecQt     = piRecQt;
    Pel* pRecIPred  = piRecIPred;

    if (pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag())
    {
      if (bUseCrossCPrediction)
      {
        TComTrQuant::crossComponentPrediction( rTu, compID, reconstructedLumaResidual, piResi, piResi, uiWidth, uiHeight, MAX_CU_SIZE, uiStride, uiStride, true );
      }
      else if (isLuma(compID))
      {
        xStoreCrossComponentPredictionResult( reconstructedLumaResidual, piResi, rTu, 0, 0, MAX_CU_SIZE, uiStride );
      }
    }

 #if DEBUG_STRING
    std::stringstream ss(stringstream::out);
    const Bool bDebugPred=((DebugOptionList::DebugString_Pred.getInt()&debugPredModeMask) && DEBUG_STRING_CHANNEL_CONDITION(compID));
    const Bool bDebugResi=((DebugOptionList::DebugString_Resi.getInt()&debugPredModeMask) && DEBUG_STRING_CHANNEL_CONDITION(compID));
    const Bool bDebugReco=((DebugOptionList::DebugString_Reco.getInt()&debugPredModeMask) && DEBUG_STRING_CHANNEL_CONDITION(compID));

    if (bDebugPred || bDebugResi || bDebugReco)
    {
      ss << "###: " << "CompID: " << compID << " pred mode (ch/fin): " << uiChPredMode << "/" << uiChFinalMode << " absPartIdx: " << rTu.GetAbsPartIdxTU() << "\n";
      for( UInt uiY = 0; uiY < uiHeight; uiY++ )
      {
        ss << "###: ";
        if (bDebugPred)
        {
          ss << " - pred: ";
          for( UInt uiX = 0; uiX < uiWidth; uiX++ )
          {
            ss << pPred[ uiX ] << ", ";
          }
        }
        if (bDebugResi)
        {
          ss << " - resi: ";
        }
        for( UInt uiX = 0; uiX < uiWidth; uiX++ )
        {
          if (bDebugResi)
          {
            ss << pResi[ uiX ] << ", ";
          }
          pReco    [ uiX ] = Pel(ClipBD<Int>( Int(pPred[uiX]) + Int(pResi[uiX]), bitDepth ));
          pRecQt   [ uiX ] = pReco[ uiX ];
          pRecIPred[ uiX ] = pReco[ uiX ];
        }
        if (bDebugReco)
        {
          ss << " - reco: ";
          for( UInt uiX = 0; uiX < uiWidth; uiX++ )
          {
            ss << pReco[ uiX ] << ", ";
          }
        }
        pPred     += uiStride;
        pResi     += uiStride;
        pReco     += uiStride;
        pRecQt    += uiRecQtStride;
        pRecIPred += uiRecIPredStride;
        ss << "\n";
      }
      DEBUG_STRING_APPEND(sDebug, ss.str())
    }
    else
#endif
    {

      for( UInt uiY = 0; uiY < uiHeight; uiY++ )
      {
        for( UInt uiX = 0; uiX < uiWidth; uiX++ )
        {
          pReco    [ uiX ] = Pel(ClipBD<Int>( Int(pPred[uiX]) + Int(pResi[uiX]), bitDepth ));
          pRecQt   [ uiX ] = pReco[ uiX ];
          pRecIPred[ uiX ] = pReco[ uiX ];
        }
        pPred     += uiStride;
        pResi     += uiStride;
        pReco     += uiStride;
        pRecQt    += uiRecQtStride;
        pRecIPred += uiRecIPredStride;
      }
    }
  }

  //===== update distortion =====
  ruiDist += m_pcRdCost->getDistPart( bitDepth, piReco, uiStride, piOrg, uiStride, uiWidth, uiHeight, compID );
}




Void
TEncSearch::xRecurIntraCodingLumaQT(TComYuv*    pcOrgYuv,
                                    TComYuv*    pcPredYuv,
                                    TComYuv*    pcResiYuv,
                                    Pel         resiLuma[NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE],
                                    Distortion& ruiDistY,
#if HHI_RQT_INTRA_SPEEDUP
                                    Bool        bCheckFirst,
#endif
                                    Double&     dRDCost,
                                    TComTU&     rTu
                                    DEBUG_STRING_FN_DECLARE(sDebug))
{
  TComDataCU   *pcCU          = rTu.getCU();
  const UInt    uiAbsPartIdx  = rTu.GetAbsPartIdxTU();
  const UInt    uiFullDepth   = rTu.GetTransformDepthTotal();
  const UInt    uiTrDepth     = rTu.GetTransformDepthRel();
  const UInt    uiLog2TrSize  = rTu.GetLog2LumaTrSize();
        Bool    bCheckFull    = ( uiLog2TrSize  <= pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() );
        Bool    bCheckSplit   = ( uiLog2TrSize  >  pcCU->getQuadtreeTULog2MinSizeInCU(uiAbsPartIdx) );

        Pel     resiLumaSplit [NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE];
        Pel     resiLumaSingle[NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE];

        Bool    bMaintainResidual[NUMBER_OF_STORED_RESIDUAL_TYPES];
        for (UInt residualTypeIndex = 0; residualTypeIndex < NUMBER_OF_STORED_RESIDUAL_TYPES; residualTypeIndex++)
        {
          bMaintainResidual[residualTypeIndex] = true; //assume true unless specified otherwise
        }

        bMaintainResidual[RESIDUAL_ENCODER_SIDE] = !(m_pcEncCfg->getUseReconBasedCrossCPredictionEstimate());

#if HHI_RQT_INTRA_SPEEDUP
  Int maxTuSize = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize();
  Int isIntraSlice = (pcCU->getSlice()->getSliceType() == I_SLICE);
  // don't check split if TU size is less or equal to max TU size
  Bool noSplitIntraMaxTuSize = bCheckFull;
  if(m_pcEncCfg->getRDpenalty() && ! isIntraSlice)
  {
    // in addition don't check split if TU size is less or equal to 16x16 TU size for non-intra slice
    noSplitIntraMaxTuSize = ( uiLog2TrSize  <= min(maxTuSize,4) );

    // if maximum RD-penalty don't check TU size 32x32
    if(m_pcEncCfg->getRDpenalty()==2)
    {
      bCheckFull    = ( uiLog2TrSize  <= min(maxTuSize,4));
    }
  }
  if( bCheckFirst && noSplitIntraMaxTuSize )

  {
    bCheckSplit = false;
  }
#else
  Int maxTuSize = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize();
  Int isIntraSlice = (pcCU->getSlice()->getSliceType() == I_SLICE);
  // if maximum RD-penalty don't check TU size 32x32
  if((m_pcEncCfg->getRDpenalty()==2)  && !isIntraSlice)
  {
    bCheckFull    = ( uiLog2TrSize  <= min(maxTuSize,4));
  }
#endif
  Double     dSingleCost                        = MAX_DOUBLE;
  Distortion uiSingleDistLuma                   = 0;
  UInt       uiSingleCbfLuma                    = 0;
  Bool       checkTransformSkip  = pcCU->getSlice()->getPPS()->getUseTransformSkip();
  Int        bestModeId[MAX_NUM_COMPONENT] = { 0, 0, 0};
  checkTransformSkip           &= TUCompRectHasAssociatedTransformSkipFlag(rTu.getRect(COMPONENT_Y), pcCU->getSlice()->getPPS()->getPpsRangeExtension().getLog2MaxTransformSkipBlockSize());
  checkTransformSkip           &= (!pcCU->getCUTransquantBypass(0));

  assert (rTu.ProcessComponentSection(COMPONENT_Y));
  const UInt totalAdjustedDepthChan   = rTu.GetTransformDepthTotalAdj(COMPONENT_Y);

  if ( m_pcEncCfg->getUseTransformSkipFast() )
  {
    checkTransformSkip       &= (pcCU->getPartitionSize(uiAbsPartIdx)==SIZE_NxN);
  }

  if( bCheckFull )
  {
    if(checkTransformSkip == true)
    {
      //----- store original entropy coding status -----
      m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_ROOT ] );

      Distortion singleDistTmpLuma                    = 0;
      UInt       singleCbfTmpLuma                     = 0;
      Double     singleCostTmp                        = 0;
      Int        firstCheckId                         = 0;

      for(Int modeId = firstCheckId; modeId < 2; modeId ++)
      {
        DEBUG_STRING_NEW(sModeString)
        Int  default0Save1Load2 = 0;
        singleDistTmpLuma=0;
        if(modeId == firstCheckId)
        {
          default0Save1Load2 = 1;
        }
        else
        {
          default0Save1Load2 = 2;
        }


        pcCU->setTransformSkipSubParts ( modeId, COMPONENT_Y, uiAbsPartIdx, totalAdjustedDepthChan );
        xIntraCodingTUBlock( pcOrgYuv, pcPredYuv, pcResiYuv, resiLumaSingle, false, singleDistTmpLuma, COMPONENT_Y, rTu DEBUG_STRING_PASS_INTO(sModeString), default0Save1Load2 );

        singleCbfTmpLuma = pcCU->getCbf( uiAbsPartIdx, COMPONENT_Y, uiTrDepth );

        //----- determine rate and r-d cost -----
        if(modeId == 1 && singleCbfTmpLuma == 0)
        {
          //In order not to code TS flag when cbf is zero, the case for TS with cbf being zero is forbidden.
          singleCostTmp = MAX_DOUBLE;
        }
        else
        {
          UInt uiSingleBits = xGetIntraBitsQT( rTu, true, false, false );
          singleCostTmp     = m_pcRdCost->calcRdCost( uiSingleBits, singleDistTmpLuma );
        }
        if(singleCostTmp < dSingleCost)
        {
          DEBUG_STRING_SWAP(sDebug, sModeString)
          dSingleCost   = singleCostTmp;
          uiSingleDistLuma = singleDistTmpLuma;
          uiSingleCbfLuma = singleCbfTmpLuma;

          bestModeId[COMPONENT_Y] = modeId;
          if(bestModeId[COMPONENT_Y] == firstCheckId)
          {
            xStoreIntraResultQT(COMPONENT_Y, rTu );
            m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiFullDepth ][ CI_TEMP_BEST ] );
          }

          if (pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag())
          {
            const Int xOffset = rTu.getRect( COMPONENT_Y ).x0;
            const Int yOffset = rTu.getRect( COMPONENT_Y ).y0;
            for (UInt storedResidualIndex = 0; storedResidualIndex < NUMBER_OF_STORED_RESIDUAL_TYPES; storedResidualIndex++)
            {
              if (bMaintainResidual[storedResidualIndex])
              {
                xStoreCrossComponentPredictionResult(resiLuma[storedResidualIndex], resiLumaSingle[storedResidualIndex], rTu, xOffset, yOffset, MAX_CU_SIZE, MAX_CU_SIZE);
              }
            }
          }
        }
        if (modeId == firstCheckId)
        {
          m_pcRDGoOnSbacCoder->load ( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_ROOT ] );
        }
      }

      pcCU ->setTransformSkipSubParts ( bestModeId[COMPONENT_Y], COMPONENT_Y, uiAbsPartIdx, totalAdjustedDepthChan );

      if(bestModeId[COMPONENT_Y] == firstCheckId)
      {
        xLoadIntraResultQT(COMPONENT_Y, rTu );
        pcCU->setCbfSubParts  ( uiSingleCbfLuma << uiTrDepth, COMPONENT_Y, uiAbsPartIdx, rTu.GetTransformDepthTotalAdj(COMPONENT_Y) );

        m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ uiFullDepth ][ CI_TEMP_BEST ] );
      }
    }
    else
    {
      //----- store original entropy coding status -----
      if( bCheckSplit )
      {
        m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_ROOT ] );
      }
      //----- code luma/chroma block with given intra prediction mode and store Cbf-----
      dSingleCost   = 0.0;

      pcCU ->setTransformSkipSubParts ( 0, COMPONENT_Y, uiAbsPartIdx, totalAdjustedDepthChan );
      xIntraCodingTUBlock( pcOrgYuv, pcPredYuv, pcResiYuv, resiLumaSingle, false, uiSingleDistLuma, COMPONENT_Y, rTu DEBUG_STRING_PASS_INTO(sDebug));

      if( bCheckSplit )
      {
        uiSingleCbfLuma = pcCU->getCbf( uiAbsPartIdx, COMPONENT_Y, uiTrDepth );
      }
      //----- determine rate and r-d cost -----
      UInt uiSingleBits = xGetIntraBitsQT( rTu, true, false, false );

      if(m_pcEncCfg->getRDpenalty() && (uiLog2TrSize==5) && !isIntraSlice)
      {
        uiSingleBits=uiSingleBits*4;
      }

      dSingleCost       = m_pcRdCost->calcRdCost( uiSingleBits, uiSingleDistLuma );

      if (pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag())
      {
        const Int xOffset = rTu.getRect( COMPONENT_Y ).x0;
        const Int yOffset = rTu.getRect( COMPONENT_Y ).y0;
        for (UInt storedResidualIndex = 0; storedResidualIndex < NUMBER_OF_STORED_RESIDUAL_TYPES; storedResidualIndex++)
        {
          if (bMaintainResidual[storedResidualIndex])
          {
            xStoreCrossComponentPredictionResult(resiLuma[storedResidualIndex], resiLumaSingle[storedResidualIndex], rTu, xOffset, yOffset, MAX_CU_SIZE, MAX_CU_SIZE);
          }
        }
      }
    }
  }

  if( bCheckSplit )
  {
    //----- store full entropy coding status, load original entropy coding status -----
    if( bCheckFull )
    {
      m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_TEST ] );
      m_pcRDGoOnSbacCoder->load ( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_ROOT ] );
    }
    else
    {
      m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_ROOT ] );
    }
    //----- code splitted block -----
    Double     dSplitCost      = 0.0;
    Distortion uiSplitDistLuma = 0;
    UInt       uiSplitCbfLuma  = 0;

    TComTURecurse tuRecurseChild(rTu, false);
    DEBUG_STRING_NEW(sSplit)
    do
    {
      DEBUG_STRING_NEW(sChild)
#if HHI_RQT_INTRA_SPEEDUP
      xRecurIntraCodingLumaQT( pcOrgYuv, pcPredYuv, pcResiYuv, resiLumaSplit, uiSplitDistLuma, bCheckFirst, dSplitCost, tuRecurseChild DEBUG_STRING_PASS_INTO(sChild) );
#else
      xRecurIntraCodingLumaQT( pcOrgYuv, pcPredYuv, pcResiYuv, resiLumaSplit, uiSplitDistLuma, dSplitCost, tuRecurseChild DEBUG_STRING_PASS_INTO(sChild) );
#endif
      DEBUG_STRING_APPEND(sSplit, sChild)
      uiSplitCbfLuma |= pcCU->getCbf( tuRecurseChild.GetAbsPartIdxTU(), COMPONENT_Y, tuRecurseChild.GetTransformDepthRel() );
    } while (tuRecurseChild.nextSection(rTu) );

    UInt    uiPartsDiv     = rTu.GetAbsPartIdxNumParts();
    {
      if (uiSplitCbfLuma)
      {
        const UInt flag=1<<uiTrDepth;
        UChar *pBase=pcCU->getCbf( COMPONENT_Y );
        for( UInt uiOffs = 0; uiOffs < uiPartsDiv; uiOffs++ )
        {
          pBase[ uiAbsPartIdx + uiOffs ] |= flag;
        }
      }
    }
    //----- restore context states -----
    m_pcRDGoOnSbacCoder->load ( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_ROOT ] );
    
    //----- determine rate and r-d cost -----
    UInt uiSplitBits = xGetIntraBitsQT( rTu, true, false, false );
    dSplitCost       = m_pcRdCost->calcRdCost( uiSplitBits, uiSplitDistLuma );

    //===== compare and set best =====
    if( dSplitCost < dSingleCost )
    {
      //--- update cost ---
      DEBUG_STRING_SWAP(sSplit, sDebug)
      ruiDistY += uiSplitDistLuma;
      dRDCost  += dSplitCost;

      if (pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag())
      {
        const Int xOffset = rTu.getRect( COMPONENT_Y ).x0;
        const Int yOffset = rTu.getRect( COMPONENT_Y ).y0;
        for (UInt storedResidualIndex = 0; storedResidualIndex < NUMBER_OF_STORED_RESIDUAL_TYPES; storedResidualIndex++)
        {
          if (bMaintainResidual[storedResidualIndex])
          {
            xStoreCrossComponentPredictionResult(resiLuma[storedResidualIndex], resiLumaSplit[storedResidualIndex], rTu, xOffset, yOffset, MAX_CU_SIZE, MAX_CU_SIZE);
          }
        }
      }

      return;
    }

    //----- set entropy coding status -----
    m_pcRDGoOnSbacCoder->load ( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_TEST ] );

    //--- set transform index and Cbf values ---
    pcCU->setTrIdxSubParts( uiTrDepth, uiAbsPartIdx, uiFullDepth );
    const TComRectangle &tuRect=rTu.getRect(COMPONENT_Y);
    pcCU->setCbfSubParts  ( uiSingleCbfLuma << uiTrDepth, COMPONENT_Y, uiAbsPartIdx, totalAdjustedDepthChan );
    pcCU ->setTransformSkipSubParts  ( bestModeId[COMPONENT_Y], COMPONENT_Y, uiAbsPartIdx, totalAdjustedDepthChan );

    //--- set reconstruction for next intra prediction blocks ---
    const UInt  uiQTLayer   = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrSize;
    const UInt  uiZOrder    = pcCU->getZorderIdxInCtu() + uiAbsPartIdx;
    const UInt  uiWidth     = tuRect.width;
    const UInt  uiHeight    = tuRect.height;
    Pel*  piSrc       = m_pcQTTempTComYuv[ uiQTLayer ].getAddr( COMPONENT_Y, uiAbsPartIdx );
    UInt  uiSrcStride = m_pcQTTempTComYuv[ uiQTLayer ].getStride  ( COMPONENT_Y );
    Pel*  piDes       = pcCU->getPic()->getPicYuvRec()->getAddr( COMPONENT_Y, pcCU->getCtuRsAddr(), uiZOrder );
    UInt  uiDesStride = pcCU->getPic()->getPicYuvRec()->getStride  ( COMPONENT_Y );

    for( UInt uiY = 0; uiY < uiHeight; uiY++, piSrc += uiSrcStride, piDes += uiDesStride )
    {
      for( UInt uiX = 0; uiX < uiWidth; uiX++ )
      {
        piDes[ uiX ] = piSrc[ uiX ];
      }
    }
  }
  ruiDistY += uiSingleDistLuma;
  dRDCost  += dSingleCost;
}


Void
TEncSearch::xSetIntraResultLumaQT(TComYuv* pcRecoYuv, TComTU &rTu)
{
  TComDataCU *pcCU        = rTu.getCU();
  const UInt uiTrDepth    = rTu.GetTransformDepthRel();
  const UInt uiAbsPartIdx = rTu.GetAbsPartIdxTU();
  UInt uiTrMode     = pcCU->getTransformIdx( uiAbsPartIdx );
  if(  uiTrMode == uiTrDepth )
  {
    UInt uiLog2TrSize = rTu.GetLog2LumaTrSize();
    UInt uiQTLayer    = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrSize;

    //===== copy transform coefficients =====

    const TComRectangle &tuRect=rTu.getRect(COMPONENT_Y);
    const UInt coeffOffset = rTu.getCoefficientOffset(COMPONENT_Y);
    const UInt numCoeffInBlock = tuRect.width * tuRect.height;

    if (numCoeffInBlock!=0)
    {
      const TCoeff* srcCoeff = m_ppcQTTempCoeff[COMPONENT_Y][uiQTLayer] + coeffOffset;
      TCoeff* destCoeff      = pcCU->getCoeff(COMPONENT_Y) + coeffOffset;
      ::memcpy( destCoeff, srcCoeff, sizeof(TCoeff)*numCoeffInBlock );
#if ADAPTIVE_QP_SELECTION
      const TCoeff* srcArlCoeff = m_ppcQTTempArlCoeff[COMPONENT_Y][ uiQTLayer ] + coeffOffset;
      TCoeff* destArlCoeff      = pcCU->getArlCoeff (COMPONENT_Y)               + coeffOffset;
      ::memcpy( destArlCoeff, srcArlCoeff, sizeof( TCoeff ) * numCoeffInBlock );
#endif
      m_pcQTTempTComYuv[ uiQTLayer ].copyPartToPartComponent( COMPONENT_Y, pcRecoYuv, uiAbsPartIdx, tuRect.width, tuRect.height );
    }

  }
  else
  {
    TComTURecurse tuRecurseChild(rTu, false);
    do
    {
      xSetIntraResultLumaQT( pcRecoYuv, tuRecurseChild );
    } while (tuRecurseChild.nextSection(rTu));
  }
}


Void
TEncSearch::xStoreIntraResultQT(const ComponentID compID, TComTU &rTu )
{
  TComDataCU *pcCU=rTu.getCU();
  const UInt uiTrDepth = rTu.GetTransformDepthRel();
  const UInt uiAbsPartIdx = rTu.GetAbsPartIdxTU();
  const UInt uiTrMode     = pcCU->getTransformIdx( uiAbsPartIdx );
  if ( compID==COMPONENT_Y || uiTrMode == uiTrDepth )
  {
    assert(uiTrMode == uiTrDepth);
    const UInt uiLog2TrSize = rTu.GetLog2LumaTrSize();
    const UInt uiQTLayer    = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrSize;

    if (rTu.ProcessComponentSection(compID))
    {
      const TComRectangle &tuRect=rTu.getRect(compID);

      //===== copy transform coefficients =====
      const UInt uiNumCoeff    = tuRect.width * tuRect.height;
      TCoeff* pcCoeffSrc = m_ppcQTTempCoeff[compID] [ uiQTLayer ] + rTu.getCoefficientOffset(compID);
      TCoeff* pcCoeffDst = m_pcQTTempTUCoeff[compID];

      ::memcpy( pcCoeffDst, pcCoeffSrc, sizeof( TCoeff ) * uiNumCoeff );
#if ADAPTIVE_QP_SELECTION
      TCoeff* pcArlCoeffSrc = m_ppcQTTempArlCoeff[compID] [ uiQTLayer ] + rTu.getCoefficientOffset(compID);
      TCoeff* pcArlCoeffDst = m_ppcQTTempTUArlCoeff[compID];
      ::memcpy( pcArlCoeffDst, pcArlCoeffSrc, sizeof( TCoeff ) * uiNumCoeff );
#endif
      //===== copy reconstruction =====
      m_pcQTTempTComYuv[ uiQTLayer ].copyPartToPartComponent( compID, &m_pcQTTempTransformSkipTComYuv, uiAbsPartIdx, tuRect.width, tuRect.height );
    }
  }
}


Void
TEncSearch::xLoadIntraResultQT(const ComponentID compID, TComTU &rTu)
{
  TComDataCU *pcCU=rTu.getCU();
  const UInt uiTrDepth = rTu.GetTransformDepthRel();
  const UInt uiAbsPartIdx = rTu.GetAbsPartIdxTU();
  const UInt uiTrMode     = pcCU->getTransformIdx( uiAbsPartIdx );
  if ( compID==COMPONENT_Y || uiTrMode == uiTrDepth )
  {
    assert(uiTrMode == uiTrDepth);
    const UInt uiLog2TrSize = rTu.GetLog2LumaTrSize();
    const UInt uiQTLayer    = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrSize;
    const UInt uiZOrder     = pcCU->getZorderIdxInCtu() + uiAbsPartIdx;

    if (rTu.ProcessComponentSection(compID))
    {
      const TComRectangle &tuRect=rTu.getRect(compID);

      //===== copy transform coefficients =====
      const UInt uiNumCoeff = tuRect.width * tuRect.height;
      TCoeff* pcCoeffDst = m_ppcQTTempCoeff[compID] [ uiQTLayer ] + rTu.getCoefficientOffset(compID);
      TCoeff* pcCoeffSrc = m_pcQTTempTUCoeff[compID];

      ::memcpy( pcCoeffDst, pcCoeffSrc, sizeof( TCoeff ) * uiNumCoeff );
#if ADAPTIVE_QP_SELECTION
      TCoeff* pcArlCoeffDst = m_ppcQTTempArlCoeff[compID] [ uiQTLayer ] + rTu.getCoefficientOffset(compID);
      TCoeff* pcArlCoeffSrc = m_ppcQTTempTUArlCoeff[compID];
      ::memcpy( pcArlCoeffDst, pcArlCoeffSrc, sizeof( TCoeff ) * uiNumCoeff );
#endif
      //===== copy reconstruction =====
      m_pcQTTempTransformSkipTComYuv.copyPartToPartComponent( compID, &m_pcQTTempTComYuv[ uiQTLayer ], uiAbsPartIdx, tuRect.width, tuRect.height );

      Pel*    piRecIPred        = pcCU->getPic()->getPicYuvRec()->getAddr( compID, pcCU->getCtuRsAddr(), uiZOrder );
      UInt    uiRecIPredStride  = pcCU->getPic()->getPicYuvRec()->getStride (compID);
      Pel*    piRecQt           = m_pcQTTempTComYuv[ uiQTLayer ].getAddr( compID, uiAbsPartIdx );
      UInt    uiRecQtStride     = m_pcQTTempTComYuv[ uiQTLayer ].getStride  (compID);
      UInt    uiWidth           = tuRect.width;
      UInt    uiHeight          = tuRect.height;
      Pel* pRecQt               = piRecQt;
      Pel* pRecIPred            = piRecIPred;
      for( UInt uiY = 0; uiY < uiHeight; uiY++ )
      {
        for( UInt uiX = 0; uiX < uiWidth; uiX++ )
        {
          pRecIPred[ uiX ] = pRecQt   [ uiX ];
        }
        pRecQt    += uiRecQtStride;
        pRecIPred += uiRecIPredStride;
      }
    }
  }
}

Void
TEncSearch::xStoreCrossComponentPredictionResult(       Pel    *pResiDst,
                                                  const Pel    *pResiSrc,
                                                        TComTU &rTu,
                                                  const Int     xOffset,
                                                  const Int     yOffset,
                                                  const Int     strideDst,
                                                  const Int     strideSrc )
{
  const Pel *pSrc = pResiSrc + yOffset * strideSrc + xOffset;
        Pel *pDst = pResiDst + yOffset * strideDst + xOffset;

  for( Int y = 0; y < rTu.getRect( COMPONENT_Y ).height; y++ )
  {
    ::memcpy( pDst, pSrc, sizeof(Pel) * rTu.getRect( COMPONENT_Y ).width );
    pDst += strideDst;
    pSrc += strideSrc;
  }
}

SChar
TEncSearch::xCalcCrossComponentPredictionAlpha(       TComTU &rTu,
                                                const ComponentID compID,
                                                const Pel*        piResiL,
                                                const Pel*        piResiC,
                                                const Int         width,
                                                const Int         height,
                                                const Int         strideL,
                                                const Int         strideC )
{
  const Pel *pResiL = piResiL;
  const Pel *pResiC = piResiC;

        TComDataCU *pCU = rTu.getCU();
  const Int  absPartIdx = rTu.GetAbsPartIdxTU( compID );
  const Int diffBitDepth = pCU->getSlice()->getSPS()->getDifferentialLumaChromaBitDepth();

  SChar alpha = 0;
  Int SSxy  = 0;
  Int SSxx  = 0;

  for( UInt uiY = 0; uiY < height; uiY++ )
  {
    for( UInt uiX = 0; uiX < width; uiX++ )
    {
      const Pel scaledResiL = rightShift( pResiL[ uiX ], diffBitDepth );
      SSxy += ( scaledResiL * pResiC[ uiX ] );
      SSxx += ( scaledResiL * scaledResiL   );
    }

    pResiL += strideL;
    pResiC += strideC;
  }

  if( SSxx != 0 )
  {
    Double dAlpha = SSxy / Double( SSxx );
    alpha = SChar(Clip3<Int>(-16, 16, (Int)(dAlpha * 16)));

    static const SChar alphaQuant[17] = {0, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8};

    alpha = (alpha < 0) ? -alphaQuant[Int(-alpha)] : alphaQuant[Int(alpha)];
  }
  pCU->setCrossComponentPredictionAlphaPartRange( alpha, compID, absPartIdx, rTu.GetAbsPartIdxNumParts( compID ) );

  return alpha;
}

Void
TEncSearch::xRecurIntraChromaCodingQT(TComYuv*    pcOrgYuv,
                                      TComYuv*    pcPredYuv,
                                      TComYuv*    pcResiYuv,
                                      Pel         resiLuma[NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE],
                                      Distortion& ruiDist,
                                      TComTU&     rTu
                                      DEBUG_STRING_FN_DECLARE(sDebug))
{
  TComDataCU         *pcCU                  = rTu.getCU();
  const UInt          uiTrDepth             = rTu.GetTransformDepthRel();
  const UInt          uiAbsPartIdx          = rTu.GetAbsPartIdxTU();
  const ChromaFormat  format                = rTu.GetChromaFormat();
  UInt                uiTrMode              = pcCU->getTransformIdx( uiAbsPartIdx );
  const UInt          numberValidComponents = getNumberValidComponents(format);

  if(  uiTrMode == uiTrDepth )
  {
    if (!rTu.ProcessChannelSection(CHANNEL_TYPE_CHROMA))
    {
      return;
    }

    const UInt uiFullDepth = rTu.GetTransformDepthTotal();

    Bool checkTransformSkip = pcCU->getSlice()->getPPS()->getUseTransformSkip();
    checkTransformSkip &= TUCompRectHasAssociatedTransformSkipFlag(rTu.getRect(COMPONENT_Cb), pcCU->getSlice()->getPPS()->getPpsRangeExtension().getLog2MaxTransformSkipBlockSize());

    if ( m_pcEncCfg->getUseTransformSkipFast() )
    {
      checkTransformSkip &= TUCompRectHasAssociatedTransformSkipFlag(rTu.getRect(COMPONENT_Y), pcCU->getSlice()->getPPS()->getPpsRangeExtension().getLog2MaxTransformSkipBlockSize());

      if (checkTransformSkip)
      {
        Int nbLumaSkip = 0;
        const UInt maxAbsPartIdxSub=uiAbsPartIdx + (rTu.ProcessingAllQuadrants(COMPONENT_Cb)?1:4);
        for(UInt absPartIdxSub = uiAbsPartIdx; absPartIdxSub < maxAbsPartIdxSub; absPartIdxSub ++)
        {
          nbLumaSkip += pcCU->getTransformSkip(absPartIdxSub, COMPONENT_Y);
        }
        checkTransformSkip &= (nbLumaSkip > 0);
      }
    }


    for (UInt ch=COMPONENT_Cb; ch<numberValidComponents; ch++)
    {
      const ComponentID compID = ComponentID(ch);
      DEBUG_STRING_NEW(sDebugBestMode)

      //use RDO to decide whether Cr/Cb takes TS
      m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[uiFullDepth][CI_QT_TRAFO_ROOT] );

      const Bool splitIntoSubTUs = rTu.getRect(compID).width != rTu.getRect(compID).height;

      TComTURecurse TUIterator(rTu, false, (splitIntoSubTUs ? TComTU::VERTICAL_SPLIT : TComTU::DONT_SPLIT), true, compID);

      const UInt partIdxesPerSubTU = TUIterator.GetAbsPartIdxNumParts(compID);

      do
      {
        const UInt subTUAbsPartIdx   = TUIterator.GetAbsPartIdxTU(compID);

        Double     dSingleCost               = MAX_DOUBLE;
        Int        bestModeId                = 0;
        Distortion singleDistC               = 0;
        UInt       singleCbfC                = 0;
        Distortion singleDistCTmp            = 0;
        Double     singleCostTmp             = 0;
        UInt       singleCbfCTmp             = 0;
        SChar      bestCrossCPredictionAlpha = 0;
        Int        bestTransformSkipMode     = 0;

        const Bool checkCrossComponentPrediction =    (pcCU->getIntraDir(CHANNEL_TYPE_CHROMA, subTUAbsPartIdx) == DM_CHROMA_IDX)
                                                   &&  pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag()
                                                   && (pcCU->getCbf(subTUAbsPartIdx,  COMPONENT_Y, uiTrDepth) != 0);

        const Int  crossCPredictionModesToTest = checkCrossComponentPrediction ? 2 : 1;
        const Int  transformSkipModesToTest    = checkTransformSkip            ? 2 : 1;
        const Int  totalModesToTest            = crossCPredictionModesToTest * transformSkipModesToTest;
              Int  currModeId                  = 0;
              Int  default0Save1Load2          = 0;

        for(Int transformSkipModeId = 0; transformSkipModeId < transformSkipModesToTest; transformSkipModeId++)
        {
          for(Int crossCPredictionModeId = 0; crossCPredictionModeId < crossCPredictionModesToTest; crossCPredictionModeId++)
          {
            pcCU->setCrossComponentPredictionAlphaPartRange(0, compID, subTUAbsPartIdx, partIdxesPerSubTU);
            DEBUG_STRING_NEW(sDebugMode)
            pcCU->setTransformSkipPartRange( transformSkipModeId, compID, subTUAbsPartIdx, partIdxesPerSubTU );
            currModeId++;

            const Bool isOneMode  = (totalModesToTest == 1);
            const Bool isLastMode = (currModeId == totalModesToTest); // currModeId is indexed from 1

            if (isOneMode)
            {
              default0Save1Load2 = 0;
            }
            else if (!isOneMode && (transformSkipModeId == 0) && (crossCPredictionModeId == 0))
            {
              default0Save1Load2 = 1; //save prediction on first mode
            }
            else
            {
              default0Save1Load2 = 2; //load it on subsequent modes
            }

            singleDistCTmp = 0;

            xIntraCodingTUBlock( pcOrgYuv, pcPredYuv, pcResiYuv, resiLuma, (crossCPredictionModeId != 0), singleDistCTmp, compID, TUIterator DEBUG_STRING_PASS_INTO(sDebugMode), default0Save1Load2);
            singleCbfCTmp = pcCU->getCbf( subTUAbsPartIdx, compID, uiTrDepth);

            if (  ((crossCPredictionModeId == 1) && (pcCU->getCrossComponentPredictionAlpha(subTUAbsPartIdx, compID) == 0))
               || ((transformSkipModeId    == 1) && (singleCbfCTmp == 0))) //In order not to code TS flag when cbf is zero, the case for TS with cbf being zero is forbidden.
            {
              singleCostTmp = MAX_DOUBLE;
            }
            else if (!isOneMode)
            {
              UInt bitsTmp = xGetIntraBitsQTChroma( TUIterator, compID, false );
              singleCostTmp  = m_pcRdCost->calcRdCost( bitsTmp, singleDistCTmp);
            }

            if(singleCostTmp < dSingleCost)
            {
              DEBUG_STRING_SWAP(sDebugBestMode, sDebugMode)
              dSingleCost               = singleCostTmp;
              singleDistC               = singleDistCTmp;
              bestCrossCPredictionAlpha = (crossCPredictionModeId != 0) ? pcCU->getCrossComponentPredictionAlpha(subTUAbsPartIdx, compID) : 0;
              bestTransformSkipMode     = transformSkipModeId;
              bestModeId                = currModeId;
              singleCbfC                = singleCbfCTmp;

              if (!isOneMode && !isLastMode)
              {
                xStoreIntraResultQT(compID, TUIterator);
                m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiFullDepth ][ CI_TEMP_BEST ] );
              }
            }

            if (!isOneMode && !isLastMode)
            {
              m_pcRDGoOnSbacCoder->load ( m_pppcRDSbacCoder[ uiFullDepth ][ CI_QT_TRAFO_ROOT ] );
            }
          }
        }

        if(bestModeId < totalModesToTest)
        {
          xLoadIntraResultQT(compID, TUIterator);
          pcCU->setCbfPartRange( singleCbfC << uiTrDepth, compID, subTUAbsPartIdx, partIdxesPerSubTU );

          m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ uiFullDepth ][ CI_TEMP_BEST ] );
        }

        DEBUG_STRING_APPEND(sDebug, sDebugBestMode)
        pcCU ->setTransformSkipPartRange                ( bestTransformSkipMode,     compID, subTUAbsPartIdx, partIdxesPerSubTU );
        pcCU ->setCrossComponentPredictionAlphaPartRange( bestCrossCPredictionAlpha, compID, subTUAbsPartIdx, partIdxesPerSubTU );
        ruiDist += singleDistC;
      } while (TUIterator.nextSection(rTu));

      if (splitIntoSubTUs)
      {
        offsetSubTUCBFs(rTu, compID);
      }
    }
  }
  else
  {
    UInt    uiSplitCbf[MAX_NUM_COMPONENT] = {0,0,0};

    TComTURecurse tuRecurseChild(rTu, false);
    const UInt uiTrDepthChild   = tuRecurseChild.GetTransformDepthRel();
    do
    {
      DEBUG_STRING_NEW(sChild)

      xRecurIntraChromaCodingQT( pcOrgYuv, pcPredYuv, pcResiYuv, resiLuma, ruiDist, tuRecurseChild DEBUG_STRING_PASS_INTO(sChild) );

      DEBUG_STRING_APPEND(sDebug, sChild)
      const UInt uiAbsPartIdxSub=tuRecurseChild.GetAbsPartIdxTU();

      for(UInt ch=COMPONENT_Cb; ch<numberValidComponents; ch++)
      {
        uiSplitCbf[ch] |= pcCU->getCbf( uiAbsPartIdxSub, ComponentID(ch), uiTrDepthChild );
      }
    } while ( tuRecurseChild.nextSection(rTu) );


    UInt uiPartsDiv = rTu.GetAbsPartIdxNumParts();
    for(UInt ch=COMPONENT_Cb; ch<numberValidComponents; ch++)
    {
      if (uiSplitCbf[ch])
      {
        const UInt flag=1<<uiTrDepth;
        ComponentID compID=ComponentID(ch);
        UChar *pBase=pcCU->getCbf( compID );
        for( UInt uiOffs = 0; uiOffs < uiPartsDiv; uiOffs++ )
        {
          pBase[ uiAbsPartIdx + uiOffs ] |= flag;
        }
      }
    }
  }
}




Void
TEncSearch::xSetIntraResultChromaQT(TComYuv*    pcRecoYuv, TComTU &rTu)
{
  if (!rTu.ProcessChannelSection(CHANNEL_TYPE_CHROMA))
  {
    return;
  }
  TComDataCU *pcCU=rTu.getCU();
  const UInt uiAbsPartIdx = rTu.GetAbsPartIdxTU();
  const UInt uiTrDepth   = rTu.GetTransformDepthRel();
  UInt uiTrMode     = pcCU->getTransformIdx( uiAbsPartIdx );
  if(  uiTrMode == uiTrDepth )
  {
    UInt uiLog2TrSize = rTu.GetLog2LumaTrSize();
    UInt uiQTLayer    = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrSize;

    //===== copy transform coefficients =====
    const TComRectangle &tuRectCb=rTu.getRect(COMPONENT_Cb);
    UInt uiNumCoeffC    = tuRectCb.width*tuRectCb.height;//( pcCU->getSlice()->getSPS()->getMaxCUWidth() * pcCU->getSlice()->getSPS()->getMaxCUHeight() ) >> ( uiFullDepth << 1 );
    const UInt offset = rTu.getCoefficientOffset(COMPONENT_Cb);

    const UInt numberValidComponents = getNumberValidComponents(rTu.GetChromaFormat());
    for (UInt ch=COMPONENT_Cb; ch<numberValidComponents; ch++)
    {
      const ComponentID component = ComponentID(ch);
      const TCoeff* src           = m_ppcQTTempCoeff[component][uiQTLayer] + offset;//(uiNumCoeffIncC*uiAbsPartIdx);
      TCoeff* dest                = pcCU->getCoeff(component) + offset;//(uiNumCoeffIncC*uiAbsPartIdx);
      ::memcpy( dest, src, sizeof(TCoeff)*uiNumCoeffC );
#if ADAPTIVE_QP_SELECTION
      TCoeff* pcArlCoeffSrc = m_ppcQTTempArlCoeff[component][ uiQTLayer ] + offset;//( uiNumCoeffIncC * uiAbsPartIdx );
      TCoeff* pcArlCoeffDst = pcCU->getArlCoeff(component)                + offset;//( uiNumCoeffIncC * uiAbsPartIdx );
      ::memcpy( pcArlCoeffDst, pcArlCoeffSrc, sizeof( TCoeff ) * uiNumCoeffC );
#endif
    }

    //===== copy reconstruction =====

    m_pcQTTempTComYuv[ uiQTLayer ].copyPartToPartComponent( COMPONENT_Cb, pcRecoYuv, uiAbsPartIdx, tuRectCb.width, tuRectCb.height );
    m_pcQTTempTComYuv[ uiQTLayer ].copyPartToPartComponent( COMPONENT_Cr, pcRecoYuv, uiAbsPartIdx, tuRectCb.width, tuRectCb.height );
  }
  else
  {
    TComTURecurse tuRecurseChild(rTu, false);
    do
    {
      xSetIntraResultChromaQT( pcRecoYuv, tuRecurseChild );
    } while (tuRecurseChild.nextSection(rTu));
  }
}



Void
TEncSearch::estIntraPredLumaQT(TComDataCU* pcCU,
                               TComYuv*    pcOrgYuv,
                               TComYuv*    pcPredYuv,
                               TComYuv*    pcResiYuv,
                               TComYuv*    pcRecoYuv,
                               Pel         resiLuma[NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE]
                               DEBUG_STRING_FN_DECLARE(sDebug))
{
  const UInt         uiDepth               = pcCU->getDepth(0);
  const UInt         uiInitTrDepth         = pcCU->getPartitionSize(0) == SIZE_2Nx2N ? 0 : 1;
  const UInt         uiNumPU               = 1<<(2*uiInitTrDepth);
  const UInt         uiQNumParts           = pcCU->getTotalNumPart() >> 2;
  const UInt         uiWidthBit            = pcCU->getIntraSizeIdx(0);
  const ChromaFormat chFmt                 = pcCU->getPic()->getChromaFormat();
  const UInt         numberValidComponents = getNumberValidComponents(chFmt);
  const TComSPS     &sps                   = *(pcCU->getSlice()->getSPS());
  const TComPPS     &pps                   = *(pcCU->getSlice()->getPPS());
        Distortion   uiOverallDistY        = 0;
        UInt         CandNum;
        Double       CandCostList[ FAST_UDI_MAX_RDMODE_NUM ];
        Pel          resiLumaPU[NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE];

        Bool    bMaintainResidual[NUMBER_OF_STORED_RESIDUAL_TYPES];
        for (UInt residualTypeIndex = 0; residualTypeIndex < NUMBER_OF_STORED_RESIDUAL_TYPES; residualTypeIndex++)
        {
          bMaintainResidual[residualTypeIndex] = true; //assume true unless specified otherwise
        }

        bMaintainResidual[RESIDUAL_ENCODER_SIDE] = !(m_pcEncCfg->getUseReconBasedCrossCPredictionEstimate());

  // Lambda calculation at equivalent Qp of 4 is recommended because at that Qp, the quantisation divisor is 1.
#if FULL_NBIT
  const Double sqrtLambdaForFirstPass= (m_pcEncCfg->getCostMode()==COST_MIXED_LOSSLESS_LOSSY_CODING && pcCU->getCUTransquantBypass(0)) ?
                sqrt(0.57 * pow(2.0, ((LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP_PRIME - 12) / 3.0)))
              : m_pcRdCost->getSqrtLambda();
#else
  const Double sqrtLambdaForFirstPass= (m_pcEncCfg->getCostMode()==COST_MIXED_LOSSLESS_LOSSY_CODING && pcCU->getCUTransquantBypass(0)) ?
                sqrt(0.57 * pow(2.0, ((LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP_PRIME - 12 - 6 * (sps.getBitDepth(CHANNEL_TYPE_LUMA) - 8)) / 3.0)))
              : m_pcRdCost->getSqrtLambda();
#endif

  //===== set QP and clear Cbf =====
  if ( pps.getUseDQP() == true)
  {
    pcCU->setQPSubParts( pcCU->getQP(0), 0, uiDepth );
  }
  else
  {
    pcCU->setQPSubParts( pcCU->getSlice()->getSliceQp(), 0, uiDepth );
  }

  //===== loop over partitions =====
  TComTURecurse tuRecurseCU(pcCU, 0);
  TComTURecurse tuRecurseWithPU(tuRecurseCU, false, (uiInitTrDepth==0)?TComTU::DONT_SPLIT : TComTU::QUAD_SPLIT);

  do
  {
    const UInt uiPartOffset=tuRecurseWithPU.GetAbsPartIdxTU();
//  for( UInt uiPU = 0, uiPartOffset=0; uiPU < uiNumPU; uiPU++, uiPartOffset += uiQNumParts )
  //{
    //===== init pattern for luma prediction =====
    DEBUG_STRING_NEW(sTemp2)

    //===== determine set of modes to be tested (using prediction signal only) =====
    Int numModesAvailable     = 35; //total number of Intra modes
    UInt uiRdModeList[FAST_UDI_MAX_RDMODE_NUM];
    Int numModesForFullRD = m_pcEncCfg->getFastUDIUseMPMEnabled()?g_aucIntraModeNumFast_UseMPM[ uiWidthBit ] : g_aucIntraModeNumFast_NotUseMPM[ uiWidthBit ];

    // this should always be true
    assert (tuRecurseWithPU.ProcessComponentSection(COMPONENT_Y));
    initIntraPatternChType( tuRecurseWithPU, COMPONENT_Y, true DEBUG_STRING_PASS_INTO(sTemp2) );

    Bool doFastSearch = (numModesForFullRD != numModesAvailable);
    if (doFastSearch)
    {
      assert(numModesForFullRD < numModesAvailable);

      for( Int i=0; i < numModesForFullRD; i++ )
      {
        CandCostList[ i ] = MAX_DOUBLE;
      }
      CandNum = 0;

      const TComRectangle &puRect=tuRecurseWithPU.getRect(COMPONENT_Y);
      const UInt uiAbsPartIdx=tuRecurseWithPU.GetAbsPartIdxTU();

      Pel* piOrg         = pcOrgYuv ->getAddr( COMPONENT_Y, uiAbsPartIdx );
      Pel* piPred        = pcPredYuv->getAddr( COMPONENT_Y, uiAbsPartIdx );
      UInt uiStride      = pcPredYuv->getStride( COMPONENT_Y );
      DistParam distParam;
      const Bool bUseHadamard=pcCU->getCUTransquantBypass(0) == 0;
      m_pcRdCost->setDistParam(distParam, sps.getBitDepth(CHANNEL_TYPE_LUMA), piOrg, uiStride, piPred, uiStride, puRect.width, puRect.height, bUseHadamard);
      distParam.bApplyWeight = false;
      for( Int modeIdx = 0; modeIdx < numModesAvailable; modeIdx++ )
      {
        UInt       uiMode = modeIdx;
        Distortion uiSad  = 0;

        const Bool bUseFilter=TComPrediction::filteringIntraReferenceSamples(COMPONENT_Y, uiMode, puRect.width, puRect.height, chFmt, sps.getSpsRangeExtension().getIntraSmoothingDisabledFlag());

        predIntraAng( COMPONENT_Y, uiMode, piOrg, uiStride, piPred, uiStride, tuRecurseWithPU, bUseFilter, TComPrediction::UseDPCMForFirstPassIntraEstimation(tuRecurseWithPU, uiMode) );

        // use hadamard transform here
        uiSad+=distParam.DistFunc(&distParam);

        UInt   iModeBits = 0;

        // NB xModeBitsIntra will not affect the mode for chroma that may have already been pre-estimated.
        iModeBits+=xModeBitsIntra( pcCU, uiMode, uiPartOffset, uiDepth, CHANNEL_TYPE_LUMA );

        Double cost      = (Double)uiSad + (Double)iModeBits * sqrtLambdaForFirstPass;

#if DEBUG_INTRA_SEARCH_COSTS
        std::cout << "1st pass mode " << uiMode << " SAD = " << uiSad << ", mode bits = " << iModeBits << ", cost = " << cost << "\n";
#endif

        CandNum += xUpdateCandList( uiMode, cost, numModesForFullRD, uiRdModeList, CandCostList );
      }

      if (m_pcEncCfg->getFastUDIUseMPMEnabled())
      {
        Int uiPreds[NUM_MOST_PROBABLE_MODES] = {-1, -1, -1};

        Int iMode = -1;
        pcCU->getIntraDirPredictor( uiPartOffset, uiPreds, COMPONENT_Y, &iMode );

        const Int numCand = ( iMode >= 0 ) ? iMode : Int(NUM_MOST_PROBABLE_MODES);

        for( Int j=0; j < numCand; j++)
        {
          Bool mostProbableModeIncluded = false;
          Int mostProbableMode = uiPreds[j];

          for( Int i=0; i < numModesForFullRD; i++)
          {
            mostProbableModeIncluded |= (mostProbableMode == uiRdModeList[i]);
          }
          if (!mostProbableModeIncluded)
          {
            uiRdModeList[numModesForFullRD++] = mostProbableMode;
          }
        }
      }
    }
    else
    {
      for( Int i=0; i < numModesForFullRD; i++)
      {
        uiRdModeList[i] = i;
      }
    }

    //===== check modes (using r-d costs) =====
#if HHI_RQT_INTRA_SPEEDUP_MOD
    UInt   uiSecondBestMode  = MAX_UINT;
    Double dSecondBestPUCost = MAX_DOUBLE;
#endif
    DEBUG_STRING_NEW(sPU)
    UInt       uiBestPUMode  = 0;
    Distortion uiBestPUDistY = 0;
    Double     dBestPUCost   = MAX_DOUBLE;

#if ENVIRONMENT_VARIABLE_DEBUG_AND_TEST
    UInt max=numModesForFullRD;

    if (DebugOptionList::ForceLumaMode.isSet())
    {
      max=0;  // we are forcing a direction, so don't bother with mode check
    }
    for ( UInt uiMode = 0; uiMode < max; uiMode++)
#else
    for( UInt uiMode = 0; uiMode < numModesForFullRD; uiMode++ )
#endif
    {
      // set luma prediction mode
      UInt uiOrgMode = uiRdModeList[uiMode];

      pcCU->setIntraDirSubParts ( CHANNEL_TYPE_LUMA, uiOrgMode, uiPartOffset, uiDepth + uiInitTrDepth );

      DEBUG_STRING_NEW(sMode)
      // set context models
      m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[uiDepth][CI_CURR_BEST] );

      // determine residual for partition
      Distortion uiPUDistY = 0;
      Double     dPUCost   = 0.0;
#if HHI_RQT_INTRA_SPEEDUP
      xRecurIntraCodingLumaQT( pcOrgYuv, pcPredYuv, pcResiYuv, resiLumaPU, uiPUDistY, true, dPUCost, tuRecurseWithPU DEBUG_STRING_PASS_INTO(sMode) );
#else
      xRecurIntraCodingLumaQT( pcOrgYuv, pcPredYuv, pcResiYuv, resiLumaPU, uiPUDistY, dPUCost, tuRecurseWithPU DEBUG_STRING_PASS_INTO(sMode) );
#endif

#if DEBUG_INTRA_SEARCH_COSTS
      std::cout << "2nd pass [luma,chroma] mode [" << Int(pcCU->getIntraDir(CHANNEL_TYPE_LUMA, uiPartOffset)) << "," << Int(pcCU->getIntraDir(CHANNEL_TYPE_CHROMA, uiPartOffset)) << "] cost = " << dPUCost << "\n";
#endif

      // check r-d cost
      if( dPUCost < dBestPUCost )
      {
        DEBUG_STRING_SWAP(sPU, sMode)
#if HHI_RQT_INTRA_SPEEDUP_MOD
        uiSecondBestMode  = uiBestPUMode;
        dSecondBestPUCost = dBestPUCost;
#endif
        uiBestPUMode  = uiOrgMode;
        uiBestPUDistY = uiPUDistY;
        dBestPUCost   = dPUCost;

        xSetIntraResultLumaQT( pcRecoYuv, tuRecurseWithPU );

        if (pps.getPpsRangeExtension().getCrossComponentPredictionEnabledFlag())
        {
          const Int xOffset = tuRecurseWithPU.getRect( COMPONENT_Y ).x0;
          const Int yOffset = tuRecurseWithPU.getRect( COMPONENT_Y ).y0;
          for (UInt storedResidualIndex = 0; storedResidualIndex < NUMBER_OF_STORED_RESIDUAL_TYPES; storedResidualIndex++)
          {
            if (bMaintainResidual[storedResidualIndex])
            {
              xStoreCrossComponentPredictionResult(resiLuma[storedResidualIndex], resiLumaPU[storedResidualIndex], tuRecurseWithPU, xOffset, yOffset, MAX_CU_SIZE, MAX_CU_SIZE );
            }
          }
        }

        UInt uiQPartNum = tuRecurseWithPU.GetAbsPartIdxNumParts();

        ::memcpy( m_puhQTTempTrIdx,  pcCU->getTransformIdx()       + uiPartOffset, uiQPartNum * sizeof( UChar ) );
        for (UInt component = 0; component < numberValidComponents; component++)
        {
          const ComponentID compID = ComponentID(component);
          ::memcpy( m_puhQTTempCbf[compID], pcCU->getCbf( compID  ) + uiPartOffset, uiQPartNum * sizeof( UChar ) );
          ::memcpy( m_puhQTTempTransformSkipFlag[compID],  pcCU->getTransformSkip(compID)  + uiPartOffset, uiQPartNum * sizeof( UChar ) );
        }
      }
#if HHI_RQT_INTRA_SPEEDUP_MOD
      else if( dPUCost < dSecondBestPUCost )
      {
        uiSecondBestMode  = uiOrgMode;
        dSecondBestPUCost = dPUCost;
      }
#endif
    } // Mode loop

#if HHI_RQT_INTRA_SPEEDUP
#if HHI_RQT_INTRA_SPEEDUP_MOD
    for( UInt ui =0; ui < 2; ++ui )
#endif
    {
#if HHI_RQT_INTRA_SPEEDUP_MOD
      UInt uiOrgMode   = ui ? uiSecondBestMode  : uiBestPUMode;
      if( uiOrgMode == MAX_UINT )
      {
        break;
      }
#else
      UInt uiOrgMode = uiBestPUMode;
#endif

#if ENVIRONMENT_VARIABLE_DEBUG_AND_TEST
      if (DebugOptionList::ForceLumaMode.isSet())
      {
        uiOrgMode = DebugOptionList::ForceLumaMode.getInt();
      }
#endif

      pcCU->setIntraDirSubParts ( CHANNEL_TYPE_LUMA, uiOrgMode, uiPartOffset, uiDepth + uiInitTrDepth );
      DEBUG_STRING_NEW(sModeTree)

      // set context models
      m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[uiDepth][CI_CURR_BEST] );

      // determine residual for partition
      Distortion uiPUDistY = 0;
      Double     dPUCost   = 0.0;

      xRecurIntraCodingLumaQT( pcOrgYuv, pcPredYuv, pcResiYuv, resiLumaPU, uiPUDistY, false, dPUCost, tuRecurseWithPU DEBUG_STRING_PASS_INTO(sModeTree));

      // check r-d cost
      if( dPUCost < dBestPUCost )
      {
        DEBUG_STRING_SWAP(sPU, sModeTree)
        uiBestPUMode  = uiOrgMode;
        uiBestPUDistY = uiPUDistY;
        dBestPUCost   = dPUCost;

        xSetIntraResultLumaQT( pcRecoYuv, tuRecurseWithPU );

        if (pps.getPpsRangeExtension().getCrossComponentPredictionEnabledFlag())
        {
          const Int xOffset = tuRecurseWithPU.getRect( COMPONENT_Y ).x0;
          const Int yOffset = tuRecurseWithPU.getRect( COMPONENT_Y ).y0;
          for (UInt storedResidualIndex = 0; storedResidualIndex < NUMBER_OF_STORED_RESIDUAL_TYPES; storedResidualIndex++)
          {
            if (bMaintainResidual[storedResidualIndex])
            {
              xStoreCrossComponentPredictionResult(resiLuma[storedResidualIndex], resiLumaPU[storedResidualIndex], tuRecurseWithPU, xOffset, yOffset, MAX_CU_SIZE, MAX_CU_SIZE );
            }
          }
        }

        const UInt uiQPartNum = tuRecurseWithPU.GetAbsPartIdxNumParts();
        ::memcpy( m_puhQTTempTrIdx,  pcCU->getTransformIdx()       + uiPartOffset, uiQPartNum * sizeof( UChar ) );

        for (UInt component = 0; component < numberValidComponents; component++)
        {
          const ComponentID compID = ComponentID(component);
          ::memcpy( m_puhQTTempCbf[compID], pcCU->getCbf( compID  ) + uiPartOffset, uiQPartNum * sizeof( UChar ) );
          ::memcpy( m_puhQTTempTransformSkipFlag[compID],  pcCU->getTransformSkip(compID)  + uiPartOffset, uiQPartNum * sizeof( UChar ) );
        }
      }
    } // Mode loop
#endif

    DEBUG_STRING_APPEND(sDebug, sPU)

    //--- update overall distortion ---
    uiOverallDistY += uiBestPUDistY;

    //--- update transform index and cbf ---
    const UInt uiQPartNum = tuRecurseWithPU.GetAbsPartIdxNumParts();
    ::memcpy( pcCU->getTransformIdx()       + uiPartOffset, m_puhQTTempTrIdx,  uiQPartNum * sizeof( UChar ) );
    for (UInt component = 0; component < numberValidComponents; component++)
    {
      const ComponentID compID = ComponentID(component);
      ::memcpy( pcCU->getCbf( compID  ) + uiPartOffset, m_puhQTTempCbf[compID], uiQPartNum * sizeof( UChar ) );
      ::memcpy( pcCU->getTransformSkip( compID  ) + uiPartOffset, m_puhQTTempTransformSkipFlag[compID ], uiQPartNum * sizeof( UChar ) );
    }

    //--- set reconstruction for next intra prediction blocks ---
    if( !tuRecurseWithPU.IsLastSection() )
    {
      const TComRectangle &puRect=tuRecurseWithPU.getRect(COMPONENT_Y);
      const UInt  uiCompWidth   = puRect.width;
      const UInt  uiCompHeight  = puRect.height;

      const UInt  uiZOrder      = pcCU->getZorderIdxInCtu() + uiPartOffset;
            Pel*  piDes         = pcCU->getPic()->getPicYuvRec()->getAddr( COMPONENT_Y, pcCU->getCtuRsAddr(), uiZOrder );
      const UInt  uiDesStride   = pcCU->getPic()->getPicYuvRec()->getStride( COMPONENT_Y);
      const Pel*  piSrc         = pcRecoYuv->getAddr( COMPONENT_Y, uiPartOffset );
      const UInt  uiSrcStride   = pcRecoYuv->getStride( COMPONENT_Y);

      for( UInt uiY = 0; uiY < uiCompHeight; uiY++, piSrc += uiSrcStride, piDes += uiDesStride )
      {
        for( UInt uiX = 0; uiX < uiCompWidth; uiX++ )
        {
          piDes[ uiX ] = piSrc[ uiX ];
        }
      }
    }

    //=== update PU data ====
    pcCU->setIntraDirSubParts     ( CHANNEL_TYPE_LUMA, uiBestPUMode, uiPartOffset, uiDepth + uiInitTrDepth );
	
  } while (tuRecurseWithPU.nextSection(tuRecurseCU));


  if( uiNumPU > 1 )
  { // set Cbf for all blocks
    UInt uiCombCbfY = 0;
    UInt uiCombCbfU = 0;
    UInt uiCombCbfV = 0;
    UInt uiPartIdx  = 0;
    for( UInt uiPart = 0; uiPart < 4; uiPart++, uiPartIdx += uiQNumParts )
    {
      uiCombCbfY |= pcCU->getCbf( uiPartIdx, COMPONENT_Y,  1 );
      uiCombCbfU |= pcCU->getCbf( uiPartIdx, COMPONENT_Cb, 1 );
      uiCombCbfV |= pcCU->getCbf( uiPartIdx, COMPONENT_Cr, 1 );
    }
    for( UInt uiOffs = 0; uiOffs < 4 * uiQNumParts; uiOffs++ )
    {
      pcCU->getCbf( COMPONENT_Y  )[ uiOffs ] |= uiCombCbfY;
      pcCU->getCbf( COMPONENT_Cb )[ uiOffs ] |= uiCombCbfU;
      pcCU->getCbf( COMPONENT_Cr )[ uiOffs ] |= uiCombCbfV;
    }
  }

  //===== reset context models =====
  m_pcRDGoOnSbacCoder->load(m_pppcRDSbacCoder[uiDepth][CI_CURR_BEST]);

  //===== set distortion (rate and r-d costs are determined later) =====
  pcCU->getTotalDistortion() = uiOverallDistY;
}




Void
TEncSearch::estIntraPredChromaQT(TComDataCU* pcCU,
                                 TComYuv*    pcOrgYuv,
                                 TComYuv*    pcPredYuv,
                                 TComYuv*    pcResiYuv,
                                 TComYuv*    pcRecoYuv,
                                 Pel         resiLuma[NUMBER_OF_STORED_RESIDUAL_TYPES][MAX_CU_SIZE * MAX_CU_SIZE]
                                 DEBUG_STRING_FN_DECLARE(sDebug))
{
  const UInt    uiInitTrDepth  = pcCU->getPartitionSize(0) != SIZE_2Nx2N && enable4ChromaPUsInIntraNxNCU(pcOrgYuv->getChromaFormat()) ? 1 : 0;

  TComTURecurse tuRecurseCU(pcCU, 0);
  TComTURecurse tuRecurseWithPU(tuRecurseCU, false, (uiInitTrDepth==0)?TComTU::DONT_SPLIT : TComTU::QUAD_SPLIT);
  const UInt    uiQNumParts    = tuRecurseWithPU.GetAbsPartIdxNumParts();
  const UInt    uiDepthCU=tuRecurseWithPU.getCUDepth();
  const UInt    numberValidComponents = pcCU->getPic()->getNumberValidComponents();

  do
  {
    UInt       uiBestMode  = 0;
    Distortion uiBestDist  = 0;
    Double     dBestCost   = MAX_DOUBLE;

    //----- init mode list -----
    if (tuRecurseWithPU.ProcessChannelSection(CHANNEL_TYPE_CHROMA))
    {
      UInt uiModeList[FAST_UDI_MAX_RDMODE_NUM];
      const UInt  uiQPartNum     = uiQNumParts;
      const UInt  uiPartOffset   = tuRecurseWithPU.GetAbsPartIdxTU();
      {
        UInt  uiMinMode = 0;
        UInt  uiMaxMode = NUM_CHROMA_MODE;

        //----- check chroma modes -----
        pcCU->getAllowedChromaDir( uiPartOffset, uiModeList );

#if ENVIRONMENT_VARIABLE_DEBUG_AND_TEST
        if (DebugOptionList::ForceChromaMode.isSet())
        {
          uiMinMode=DebugOptionList::ForceChromaMode.getInt();
          if (uiModeList[uiMinMode]==34)
          {
            uiMinMode=4; // if the fixed mode has been renumbered because DM_CHROMA covers it, use DM_CHROMA.
          }
          uiMaxMode=uiMinMode+1;
        }
#endif

        DEBUG_STRING_NEW(sPU)

        for( UInt uiMode = uiMinMode; uiMode < uiMaxMode; uiMode++ )
        {
          //----- restore context models -----
          m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[uiDepthCU][CI_CURR_BEST] );
          
          DEBUG_STRING_NEW(sMode)
          //----- chroma coding -----
          Distortion uiDist = 0;
          pcCU->setIntraDirSubParts  ( CHANNEL_TYPE_CHROMA, uiModeList[uiMode], uiPartOffset, uiDepthCU+uiInitTrDepth );
          xRecurIntraChromaCodingQT       ( pcOrgYuv, pcPredYuv, pcResiYuv, resiLuma, uiDist, tuRecurseWithPU DEBUG_STRING_PASS_INTO(sMode) );

          if( pcCU->getSlice()->getPPS()->getUseTransformSkip() )
          {
            m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[uiDepthCU][CI_CURR_BEST] );
          }

          UInt    uiBits = xGetIntraBitsQT( tuRecurseWithPU, false, true, false );
          Double  dCost  = m_pcRdCost->calcRdCost( uiBits, uiDist );

          //----- compare -----
          if( dCost < dBestCost )
          {
            DEBUG_STRING_SWAP(sPU, sMode);
            dBestCost   = dCost;
            uiBestDist  = uiDist;
            uiBestMode  = uiModeList[uiMode];

            xSetIntraResultChromaQT( pcRecoYuv, tuRecurseWithPU );
            for (UInt componentIndex = COMPONENT_Cb; componentIndex < numberValidComponents; componentIndex++)
            {
              const ComponentID compID = ComponentID(componentIndex);
              ::memcpy( m_puhQTTempCbf[compID], pcCU->getCbf( compID )+uiPartOffset, uiQPartNum * sizeof( UChar ) );
              ::memcpy( m_puhQTTempTransformSkipFlag[compID], pcCU->getTransformSkip( compID )+uiPartOffset, uiQPartNum * sizeof( UChar ) );
              ::memcpy( m_phQTTempCrossComponentPredictionAlpha[compID], pcCU->getCrossComponentPredictionAlpha(compID)+uiPartOffset, uiQPartNum * sizeof( SChar ) );
            }
          }
        }

        DEBUG_STRING_APPEND(sDebug, sPU)

        //----- set data -----
        for (UInt componentIndex = COMPONENT_Cb; componentIndex < numberValidComponents; componentIndex++)
        {
          const ComponentID compID = ComponentID(componentIndex);
          ::memcpy( pcCU->getCbf( compID )+uiPartOffset, m_puhQTTempCbf[compID], uiQPartNum * sizeof( UChar ) );
          ::memcpy( pcCU->getTransformSkip( compID )+uiPartOffset, m_puhQTTempTransformSkipFlag[compID], uiQPartNum * sizeof( UChar ) );
          ::memcpy( pcCU->getCrossComponentPredictionAlpha(compID)+uiPartOffset, m_phQTTempCrossComponentPredictionAlpha[compID], uiQPartNum * sizeof( SChar ) );
        }
      }

      if( ! tuRecurseWithPU.IsLastSection() )
      {
        for (UInt ch=COMPONENT_Cb; ch<numberValidComponents; ch++)
        {
          const ComponentID compID    = ComponentID(ch);
          const TComRectangle &tuRect = tuRecurseWithPU.getRect(compID);
          const UInt  uiCompWidth     = tuRect.width;
          const UInt  uiCompHeight    = tuRect.height;
          const UInt  uiZOrder        = pcCU->getZorderIdxInCtu() + tuRecurseWithPU.GetAbsPartIdxTU();
                Pel*  piDes           = pcCU->getPic()->getPicYuvRec()->getAddr( compID, pcCU->getCtuRsAddr(), uiZOrder );
          const UInt  uiDesStride     = pcCU->getPic()->getPicYuvRec()->getStride( compID);
          const Pel*  piSrc           = pcRecoYuv->getAddr( compID, uiPartOffset );
          const UInt  uiSrcStride     = pcRecoYuv->getStride( compID);

          for( UInt uiY = 0; uiY < uiCompHeight; uiY++, piSrc += uiSrcStride, piDes += uiDesStride )
          {
            for( UInt uiX = 0; uiX < uiCompWidth; uiX++ )
            {
              piDes[ uiX ] = piSrc[ uiX ];
            }
          }
        }
      }

      pcCU->setIntraDirSubParts( CHANNEL_TYPE_CHROMA, uiBestMode, uiPartOffset, uiDepthCU+uiInitTrDepth );
      pcCU->getTotalDistortion      () += uiBestDist;
    }

  } while (tuRecurseWithPU.nextSection(tuRecurseCU));

  //----- restore context models -----

  if( uiInitTrDepth != 0 )
  { // set Cbf for all blocks
    UInt uiCombCbfU = 0;
    UInt uiCombCbfV = 0;
    UInt uiPartIdx  = 0;
    for( UInt uiPart = 0; uiPart < 4; uiPart++, uiPartIdx += uiQNumParts )
    {
      uiCombCbfU |= pcCU->getCbf( uiPartIdx, COMPONENT_Cb, 1 );
      uiCombCbfV |= pcCU->getCbf( uiPartIdx, COMPONENT_Cr, 1 );
    }
    for( UInt uiOffs = 0; uiOffs < 4 * uiQNumParts; uiOffs++ )
    {
      pcCU->getCbf( COMPONENT_Cb )[ uiOffs ] |= uiCombCbfU;
      pcCU->getCbf( COMPONENT_Cr )[ uiOffs ] |= uiCombCbfV;
    }
  }

  m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[uiDepthCU][CI_CURR_BEST] );
}




/** Function for encoding and reconstructing luma/chroma samples of a PCM mode CU.
 * \param pcCU pointer to current CU
 * \param uiAbsPartIdx part index
 * \param pOrg pointer to original sample arrays
 * \param pPCM pointer to PCM code arrays
 * \param pPred pointer to prediction signal arrays
 * \param pResi pointer to residual signal arrays
 * \param pReco pointer to reconstructed sample arrays
 * \param uiStride stride of the original/prediction/residual sample arrays
 * \param uiWidth block width
 * \param uiHeight block height
 * \param compID texture component type
 */
Void TEncSearch::xEncPCM (TComDataCU* pcCU, UInt uiAbsPartIdx, Pel* pOrg, Pel* pPCM, Pel* pPred, Pel* pResi, Pel* pReco, UInt uiStride, UInt uiWidth, UInt uiHeight, const ComponentID compID )
{
  const UInt uiReconStride   = pcCU->getPic()->getPicYuvRec()->getStride(compID);
  const UInt uiPCMBitDepth   = pcCU->getSlice()->getSPS()->getPCMBitDepth(toChannelType(compID));
  const Int  channelBitDepth = pcCU->getSlice()->getSPS()->getBitDepth(toChannelType(compID));
  Pel* pRecoPic = pcCU->getPic()->getPicYuvRec()->getAddr(compID, pcCU->getCtuRsAddr(), pcCU->getZorderIdxInCtu()+uiAbsPartIdx);

  const Int pcmShiftRight=(channelBitDepth - Int(uiPCMBitDepth));

  assert(pcmShiftRight >= 0);

  for( UInt uiY = 0; uiY < uiHeight; uiY++ )
  {
    for( UInt uiX = 0; uiX < uiWidth; uiX++ )
    {
      // Reset pred and residual
      pPred[uiX] = 0;
      pResi[uiX] = 0;
      // Encode
      pPCM[uiX] = (pOrg[uiX]>>pcmShiftRight);
      // Reconstruction
      pReco   [uiX] = (pPCM[uiX]<<(pcmShiftRight));
      pRecoPic[uiX] = pReco[uiX];
    }
    pPred += uiStride;
    pResi += uiStride;
    pPCM += uiWidth;
    pOrg += uiStride;
    pReco += uiStride;
    pRecoPic += uiReconStride;
  }
}


//!  Function for PCM mode estimation.
Void TEncSearch::IPCMSearch( TComDataCU* pcCU, TComYuv* pcOrgYuv, TComYuv* pcPredYuv, TComYuv* pcResiYuv, TComYuv* pcRecoYuv )
{
  UInt              uiDepth      = pcCU->getDepth(0);
  const Distortion  uiDistortion = 0;
  UInt              uiBits;

  Double dCost;

  for (UInt ch=0; ch < pcCU->getPic()->getNumberValidComponents(); ch++)
  {
    const ComponentID compID  = ComponentID(ch);
    const UInt width  = pcCU->getWidth(0)  >> pcCU->getPic()->getComponentScaleX(compID);
    const UInt height = pcCU->getHeight(0) >> pcCU->getPic()->getComponentScaleY(compID);
    const UInt stride = pcPredYuv->getStride(compID);

    Pel * pOrig    = pcOrgYuv->getAddr  (compID, 0, width);
    Pel * pResi    = pcResiYuv->getAddr(compID, 0, width);
    Pel * pPred    = pcPredYuv->getAddr(compID, 0, width);
    Pel * pReco    = pcRecoYuv->getAddr(compID, 0, width);
    Pel * pPCM     = pcCU->getPCMSample (compID);

    xEncPCM ( pcCU, 0, pOrig, pPCM, pPred, pResi, pReco, stride, width, height, compID );

  }

  m_pcEntropyCoder->resetBits();
  xEncIntraHeader ( pcCU, uiDepth, 0, true, false);
  uiBits = m_pcEntropyCoder->getNumberOfWrittenBits();

  dCost = m_pcRdCost->calcRdCost( uiBits, uiDistortion );

  m_pcRDGoOnSbacCoder->load(m_pppcRDSbacCoder[uiDepth][CI_CURR_BEST]);

  pcCU->getTotalBits()       = uiBits;
  pcCU->getTotalCost()       = dCost;
  pcCU->getTotalDistortion() = uiDistortion;

  pcCU->copyToPic(uiDepth);
}




Void TEncSearch::xGetInterPredictionError( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPartIdx, Distortion& ruiErr, Bool /*bHadamard*/ )
{
  motionCompensation( pcCU, &m_tmpYuvPred, REF_PIC_LIST_X, iPartIdx );

  UInt uiAbsPartIdx = 0;
  Int iWidth = 0;
  Int iHeight = 0;
  pcCU->getPartIndexAndSize( iPartIdx, uiAbsPartIdx, iWidth, iHeight );

  DistParam cDistParam;

  cDistParam.bApplyWeight = false;


  m_pcRdCost->setDistParam( cDistParam, pcCU->getSlice()->getSPS()->getBitDepth(CHANNEL_TYPE_LUMA),
                            pcYuvOrg->getAddr( COMPONENT_Y, uiAbsPartIdx ), pcYuvOrg->getStride(COMPONENT_Y),
                            m_tmpYuvPred .getAddr( COMPONENT_Y, uiAbsPartIdx ), m_tmpYuvPred.getStride(COMPONENT_Y),
                            iWidth, iHeight, m_pcEncCfg->getUseHADME() && (pcCU->getCUTransquantBypass(iPartIdx) == 0) );

  ruiErr = cDistParam.DistFunc( &cDistParam );
}

//! estimation of best merge coding
Void TEncSearch::xMergeEstimation( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPUIdx, UInt& uiInterDir, TComMvField* pacMvField, UInt& uiMergeIndex, Distortion& ruiCost, TComMvField* cMvFieldNeighbours, UChar* uhInterDirNeighbours, Int& numValidMergeCand )
{

  UInt uiAbsPartIdx = 0;
  Int iWidth = 0;
  Int iHeight = 0;

 
  pcCU->getPartIndexAndSize( iPUIdx, uiAbsPartIdx, iWidth, iHeight );
  UInt uiDepth = pcCU->getDepth( uiAbsPartIdx );

  PartSize partSize = pcCU->getPartitionSize( 0 );
  if ( pcCU->getSlice()->getPPS()->getLog2ParallelMergeLevelMinus2() && partSize != SIZE_2Nx2N && pcCU->getWidth( 0 ) <= 8 )
  {
    if ( iPUIdx == 0 )
    {
      pcCU->setPartSizeSubParts( SIZE_2Nx2N, 0, uiDepth ); // temporarily set
      pcCU->getInterMergeCandidates( 0, 0, cMvFieldNeighbours,uhInterDirNeighbours, numValidMergeCand );
      pcCU->setPartSizeSubParts( partSize, 0, uiDepth ); // restore
    }
  }
  else
  {
    pcCU->getInterMergeCandidates( uiAbsPartIdx, iPUIdx, cMvFieldNeighbours, uhInterDirNeighbours, numValidMergeCand );
  }

  xRestrictBipredMergeCand( pcCU, iPUIdx, cMvFieldNeighbours, uhInterDirNeighbours, numValidMergeCand );

  ruiCost = std::numeric_limits<Distortion>::max();
  for( UInt uiMergeCand = 0; uiMergeCand < numValidMergeCand; ++uiMergeCand )
  {
    Distortion uiCostCand = std::numeric_limits<Distortion>::max();
    UInt       uiBitsCand = 0;

    PartSize ePartSize = pcCU->getPartitionSize( 0 );

    pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMvField( cMvFieldNeighbours[0 + 2*uiMergeCand], ePartSize, uiAbsPartIdx, 0, iPUIdx );
    pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMvField( cMvFieldNeighbours[1 + 2*uiMergeCand], ePartSize, uiAbsPartIdx, 0, iPUIdx );

    xGetInterPredictionError( pcCU, pcYuvOrg, iPUIdx, uiCostCand, m_pcEncCfg->getUseHADME() );
    uiBitsCand = uiMergeCand + 1;
    if (uiMergeCand == m_pcEncCfg->getMaxNumMergeCand() -1)
    {
        uiBitsCand--;
    }
    uiCostCand = uiCostCand + m_pcRdCost->getCost( uiBitsCand );
    if ( uiCostCand < ruiCost )
    {
      ruiCost = uiCostCand;
      pacMvField[0] = cMvFieldNeighbours[0 + 2*uiMergeCand];
      pacMvField[1] = cMvFieldNeighbours[1 + 2*uiMergeCand];
      uiInterDir = uhInterDirNeighbours[uiMergeCand];
      uiMergeIndex = uiMergeCand;
    }
  }
 
}

/** convert bi-pred merge candidates to uni-pred
 * \param pcCU
 * \param puIdx
 * \param mvFieldNeighbours
 * \param interDirNeighbours
 * \param numValidMergeCand
 * \returns Void
 */
Void TEncSearch::xRestrictBipredMergeCand( TComDataCU* pcCU, UInt puIdx, TComMvField* mvFieldNeighbours, UChar* interDirNeighbours, Int numValidMergeCand )
{
	
  if ( pcCU->isBipredRestriction(puIdx) )
  {
    for( UInt mergeCand = 0; mergeCand < numValidMergeCand; ++mergeCand )
    {
      if ( interDirNeighbours[mergeCand] == 3 )
      {
        interDirNeighbours[mergeCand] = 1;
        mvFieldNeighbours[(mergeCand << 1) + 1].setMvField(TComMv(0,0), -1);
      }
    }
  }
}

//! search of the best candidate for inter prediction
#if AMP_MRG
Void TEncSearch::predInterSearch( TComDataCU* pcCU, TComYuv* pcOrgYuv, TComYuv* pcPredYuv, TComYuv* pcResiYuv, TComYuv* pcRecoYuv DEBUG_STRING_FN_DECLARE(sDebug), Bool bUseRes, Bool bUseMRG )
#else
Void TEncSearch::predInterSearch( TComDataCU* pcCU, TComYuv* pcOrgYuv, TComYuv* pcPredYuv, TComYuv* pcResiYuv, TComYuv* pcRecoYuv, Bool bUseRes )
#endif
{
  for(UInt i=0; i<NUM_REF_PIC_LIST_01; i++)
  {
    m_acYuvPred[i].clear();
  }
  m_cYuvPredTemp.clear();
  pcPredYuv->clear();

  if ( !bUseRes )
  {
    pcResiYuv->clear();
  }

  pcRecoYuv->clear();
  
  TComMv       cMvSrchRngLT;
  TComMv       cMvSrchRngRB;

  TComMv       cMvZero;
  TComMv       TempMv; //kolya

  TComMv       cMv[2];
  TComMv       cMvBi[2];
  TComMv       cMvTemp[2][33];

  Int          iNumPart    = pcCU->getNumPartitions();
  Int          iNumPredDir = pcCU->getSlice()->isInterP() ? 1 : 2;

  TComMv       cMvPred[2][33];

  TComMv       cMvPredBi[2][33];
  Int          aaiMvpIdxBi[2][33];

  Int          aaiMvpIdx[2][33];
  Int          aaiMvpNum[2][33];

  AMVPInfo     aacAMVPInfo[2][33];

  Int          iRefIdx[2]={0,0}; //If un-initialized, may cause SEGV in bi-directional prediction iterative stage.
  Int          iRefIdxBi[2];

  UInt         uiPartAddr;
  Int          iRoiWidth, iRoiHeight;

  UInt         uiMbBits[3] = {1, 1, 0};

  UInt         uiLastMode = 0;
  Int          iRefStart, iRefEnd;

  PartSize     ePartSize = pcCU->getPartitionSize( 0 );

  Int          bestBiPRefIdxL1 = 0;
  Int          bestBiPMvpL1 = 0;
  Distortion   biPDistTemp = std::numeric_limits<Distortion>::max();

  TComMvField cMvFieldNeighbours[MRG_MAX_NUM_CANDS << 1]; // double length for mv of both lists
  UChar uhInterDirNeighbours[MRG_MAX_NUM_CANDS];
  Int numValidMergeCand = 0 ;

  for ( Int iPartIdx = 0; iPartIdx < iNumPart; iPartIdx++ )
  {
    Distortion   uiCost[2] = { std::numeric_limits<Distortion>::max(), std::numeric_limits<Distortion>::max() };
    Distortion   uiCostBi  =   std::numeric_limits<Distortion>::max();
    Distortion   uiCostTemp;

    UInt         uiBits[3];
    UInt         uiBitsTemp;
    Distortion   bestBiPDist = std::numeric_limits<Distortion>::max();

    Distortion   uiCostTempL0[MAX_NUM_REF];
    for (Int iNumRef=0; iNumRef < MAX_NUM_REF; iNumRef++)
    {
      uiCostTempL0[iNumRef] = std::numeric_limits<Distortion>::max();
    }
    UInt         uiBitsTempL0[MAX_NUM_REF];

    TComMv       mvValidList1;
    Int          refIdxValidList1 = 0;
    UInt         bitsValidList1 = MAX_UINT;
    Distortion   costValidList1 = std::numeric_limits<Distortion>::max();

    xGetBlkBits( ePartSize, pcCU->getSlice()->isInterP(), iPartIdx, uiLastMode, uiMbBits);

    pcCU->getPartIndexAndSize( iPartIdx, uiPartAddr, iRoiWidth, iRoiHeight );
	
	
#if AMP_MRG
    Bool bTestNormalMC = true;

    if ( bUseMRG && pcCU->getWidth( 0 ) > 8 && iNumPart == 2 )
    {
      bTestNormalMC = false;
    }

    if (bTestNormalMC)
    {
#endif

    //  Uni-directional prediction
    for ( Int iRefList = 0; iRefList < iNumPredDir; iRefList++ )
    {
      RefPicList  eRefPicList = ( iRefList ? REF_PIC_LIST_1 : REF_PIC_LIST_0 );

      for ( Int iRefIdxTemp = 0; iRefIdxTemp < pcCU->getSlice()->getNumRefIdx(eRefPicList); iRefIdxTemp++ )
      {
        uiBitsTemp = uiMbBits[iRefList];
        if ( pcCU->getSlice()->getNumRefIdx(eRefPicList) > 1 )
        {
          uiBitsTemp += iRefIdxTemp+1;
          if ( iRefIdxTemp == pcCU->getSlice()->getNumRefIdx(eRefPicList)-1 )
          {
            uiBitsTemp--;
          }
        }
        xEstimateMvPredAMVP( pcCU, pcOrgYuv, iPartIdx, eRefPicList, iRefIdxTemp, cMvPred[iRefList][iRefIdxTemp], false, &biPDistTemp);
        aaiMvpIdx[iRefList][iRefIdxTemp] = pcCU->getMVPIdx(eRefPicList, uiPartAddr);
        aaiMvpNum[iRefList][iRefIdxTemp] = pcCU->getMVPNum(eRefPicList, uiPartAddr);

        if(pcCU->getSlice()->getMvdL1ZeroFlag() && iRefList==1 && biPDistTemp < bestBiPDist)
        {
          bestBiPDist = biPDistTemp;
          bestBiPMvpL1 = aaiMvpIdx[iRefList][iRefIdxTemp];
          bestBiPRefIdxL1 = iRefIdxTemp;
        }

        uiBitsTemp += m_auiMVPIdxCost[aaiMvpIdx[iRefList][iRefIdxTemp]][AMVP_MAX_NUM_CANDS];

        if ( m_pcEncCfg->getFastMEForGenBLowDelayEnabled() && iRefList == 1 )    // list 1
        {
          if ( pcCU->getSlice()->getList1IdxToList0Idx( iRefIdxTemp ) >= 0 )
          {
            cMvTemp[1][iRefIdxTemp] = cMvTemp[0][pcCU->getSlice()->getList1IdxToList0Idx( iRefIdxTemp )];
            uiCostTemp = uiCostTempL0[pcCU->getSlice()->getList1IdxToList0Idx( iRefIdxTemp )];
            /*first subtract the bit-rate part of the cost of the other list*/
            uiCostTemp -= m_pcRdCost->getCost( uiBitsTempL0[pcCU->getSlice()->getList1IdxToList0Idx( iRefIdxTemp )] );
            /*correct the bit-rate part of the current ref*/
            m_pcRdCost->setPredictor  ( cMvPred[iRefList][iRefIdxTemp] );
            uiBitsTemp += m_pcRdCost->getBitsOfVectorWithPredictor( cMvTemp[1][iRefIdxTemp].getHor(), cMvTemp[1][iRefIdxTemp].getVer() );
            /*calculate the correct cost*/
            uiCostTemp += m_pcRdCost->getCost( uiBitsTemp );
          }
          else
          {
            xMotionEstimation ( pcCU, pcOrgYuv, iPartIdx, eRefPicList, &cMvPred[iRefList][iRefIdxTemp], iRefIdxTemp, cMvTemp[iRefList][iRefIdxTemp], uiBitsTemp, uiCostTemp );
          }
        }
        else
        {
          xMotionEstimation ( pcCU, pcOrgYuv, iPartIdx, eRefPicList, &cMvPred[iRefList][iRefIdxTemp], iRefIdxTemp, cMvTemp[iRefList][iRefIdxTemp], uiBitsTemp, uiCostTemp );
        }
        xCopyAMVPInfo(pcCU->getCUMvField(eRefPicList)->getAMVPInfo(), &aacAMVPInfo[iRefList][iRefIdxTemp]); // must always be done ( also when AMVP_MODE = AM_NONE )
        xCheckBestMVP(pcCU, eRefPicList, cMvTemp[iRefList][iRefIdxTemp], cMvPred[iRefList][iRefIdxTemp], aaiMvpIdx[iRefList][iRefIdxTemp], uiBitsTemp, uiCostTemp);

        if ( iRefList == 0 )
        {
          uiCostTempL0[iRefIdxTemp] = uiCostTemp;
          uiBitsTempL0[iRefIdxTemp] = uiBitsTemp;
        }
        if ( uiCostTemp < uiCost[iRefList] )
        {
          uiCost[iRefList] = uiCostTemp;
          uiBits[iRefList] = uiBitsTemp; // storing for bi-prediction

          // set motion
          cMv[iRefList]     = cMvTemp[iRefList][iRefIdxTemp];
          iRefIdx[iRefList] = iRefIdxTemp;
        }

        if ( iRefList == 1 && uiCostTemp < costValidList1 && pcCU->getSlice()->getList1IdxToList0Idx( iRefIdxTemp ) < 0 )
        {
          costValidList1 = uiCostTemp;
          bitsValidList1 = uiBitsTemp;

          // set motion
          mvValidList1     = cMvTemp[iRefList][iRefIdxTemp];
          refIdxValidList1 = iRefIdxTemp;
        }
      }
    }

    //  Bi-predictive Motion estimation
    if ( (pcCU->getSlice()->isInterB()) && (pcCU->isBipredRestriction(iPartIdx) == false) )
    {

      cMvBi[0] = cMv[0];            cMvBi[1] = cMv[1];
      iRefIdxBi[0] = iRefIdx[0];    iRefIdxBi[1] = iRefIdx[1];

      ::memcpy(cMvPredBi, cMvPred, sizeof(cMvPred));
      ::memcpy(aaiMvpIdxBi, aaiMvpIdx, sizeof(aaiMvpIdx));

      UInt uiMotBits[2];

      if(pcCU->getSlice()->getMvdL1ZeroFlag())
      {
        xCopyAMVPInfo(&aacAMVPInfo[1][bestBiPRefIdxL1], pcCU->getCUMvField(REF_PIC_LIST_1)->getAMVPInfo());
        pcCU->setMVPIdxSubParts( bestBiPMvpL1, REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
        aaiMvpIdxBi[1][bestBiPRefIdxL1] = bestBiPMvpL1;
        cMvPredBi[1][bestBiPRefIdxL1]   = pcCU->getCUMvField(REF_PIC_LIST_1)->getAMVPInfo()->m_acMvCand[bestBiPMvpL1];

        cMvBi[1] = cMvPredBi[1][bestBiPRefIdxL1];
        iRefIdxBi[1] = bestBiPRefIdxL1;
        pcCU->getCUMvField( REF_PIC_LIST_1 )->setAllMv( cMvBi[1], ePartSize, uiPartAddr, 0, iPartIdx );
        pcCU->getCUMvField( REF_PIC_LIST_1 )->setAllRefIdx( iRefIdxBi[1], ePartSize, uiPartAddr, 0, iPartIdx );
        TComYuv* pcYuvPred = &m_acYuvPred[REF_PIC_LIST_1];
        motionCompensation( pcCU, pcYuvPred, REF_PIC_LIST_1, iPartIdx );

        uiMotBits[0] = uiBits[0] - uiMbBits[0];
        uiMotBits[1] = uiMbBits[1];

        if ( pcCU->getSlice()->getNumRefIdx(REF_PIC_LIST_1) > 1 )
        {
          uiMotBits[1] += bestBiPRefIdxL1+1;
          if ( bestBiPRefIdxL1 == pcCU->getSlice()->getNumRefIdx(REF_PIC_LIST_1)-1 )
          {
            uiMotBits[1]--;
          }
        }

        uiMotBits[1] += m_auiMVPIdxCost[aaiMvpIdxBi[1][bestBiPRefIdxL1]][AMVP_MAX_NUM_CANDS];

        uiBits[2] = uiMbBits[2] + uiMotBits[0] + uiMotBits[1];

        cMvTemp[1][bestBiPRefIdxL1] = cMvBi[1];
      }
      else
      {
        uiMotBits[0] = uiBits[0] - uiMbBits[0];
        uiMotBits[1] = uiBits[1] - uiMbBits[1];
        uiBits[2] = uiMbBits[2] + uiMotBits[0] + uiMotBits[1];
      }

      // 4-times iteration (default)
      Int iNumIter = 4;

      // fast encoder setting: only one iteration
      if ( m_pcEncCfg->getFastInterSearchMode()==FASTINTERSEARCH_MODE1 || m_pcEncCfg->getFastInterSearchMode()==FASTINTERSEARCH_MODE2 || pcCU->getSlice()->getMvdL1ZeroFlag() )
      {
        iNumIter = 1;
      }

      for ( Int iIter = 0; iIter < iNumIter; iIter++ )
      {
        Int         iRefList    = iIter % 2;

        if ( m_pcEncCfg->getFastInterSearchMode()==FASTINTERSEARCH_MODE1 || m_pcEncCfg->getFastInterSearchMode()==FASTINTERSEARCH_MODE2 )
        {
          if( uiCost[0] <= uiCost[1] )
          {
            iRefList = 1;
          }
          else
          {
            iRefList = 0;
          }
        }
        else if ( iIter == 0 )
        {
          iRefList = 0;
        }
        if ( iIter == 0 && !pcCU->getSlice()->getMvdL1ZeroFlag())
        {
          pcCU->getCUMvField(RefPicList(1-iRefList))->setAllMv( cMv[1-iRefList], ePartSize, uiPartAddr, 0, iPartIdx );
          pcCU->getCUMvField(RefPicList(1-iRefList))->setAllRefIdx( iRefIdx[1-iRefList], ePartSize, uiPartAddr, 0, iPartIdx );
          TComYuv*  pcYuvPred = &m_acYuvPred[1-iRefList];
          motionCompensation ( pcCU, pcYuvPred, RefPicList(1-iRefList), iPartIdx );
        }

        RefPicList  eRefPicList = ( iRefList ? REF_PIC_LIST_1 : REF_PIC_LIST_0 );

        if(pcCU->getSlice()->getMvdL1ZeroFlag())
        {
          iRefList = 0;
          eRefPicList = REF_PIC_LIST_0;
        }

        Bool bChanged = false;

        iRefStart = 0;
        iRefEnd   = pcCU->getSlice()->getNumRefIdx(eRefPicList)-1;

        for ( Int iRefIdxTemp = iRefStart; iRefIdxTemp <= iRefEnd; iRefIdxTemp++ )
        {
          uiBitsTemp = uiMbBits[2] + uiMotBits[1-iRefList];
          if ( pcCU->getSlice()->getNumRefIdx(eRefPicList) > 1 )
          {
            uiBitsTemp += iRefIdxTemp+1;
            if ( iRefIdxTemp == pcCU->getSlice()->getNumRefIdx(eRefPicList)-1 )
            {
              uiBitsTemp--;
            }
          }
          uiBitsTemp += m_auiMVPIdxCost[aaiMvpIdxBi[iRefList][iRefIdxTemp]][AMVP_MAX_NUM_CANDS];
          // call ME
          xMotionEstimation ( pcCU, pcOrgYuv, iPartIdx, eRefPicList, &cMvPredBi[iRefList][iRefIdxTemp], iRefIdxTemp, cMvTemp[iRefList][iRefIdxTemp], uiBitsTemp, uiCostTemp, true );

          xCopyAMVPInfo(&aacAMVPInfo[iRefList][iRefIdxTemp], pcCU->getCUMvField(eRefPicList)->getAMVPInfo());
          xCheckBestMVP(pcCU, eRefPicList, cMvTemp[iRefList][iRefIdxTemp], cMvPredBi[iRefList][iRefIdxTemp], aaiMvpIdxBi[iRefList][iRefIdxTemp], uiBitsTemp, uiCostTemp);

          if ( uiCostTemp < uiCostBi )
          {
            bChanged = true;

            cMvBi[iRefList]     = cMvTemp[iRefList][iRefIdxTemp];
            iRefIdxBi[iRefList] = iRefIdxTemp;

            uiCostBi            = uiCostTemp;
            uiMotBits[iRefList] = uiBitsTemp - uiMbBits[2] - uiMotBits[1-iRefList];
            uiBits[2]           = uiBitsTemp;

            if(iNumIter!=1)
            {
              //  Set motion
              pcCU->getCUMvField( eRefPicList )->setAllMv( cMvBi[iRefList], ePartSize, uiPartAddr, 0, iPartIdx );
              pcCU->getCUMvField( eRefPicList )->setAllRefIdx( iRefIdxBi[iRefList], ePartSize, uiPartAddr, 0, iPartIdx );

              TComYuv* pcYuvPred = &m_acYuvPred[iRefList];
              motionCompensation( pcCU, pcYuvPred, eRefPicList, iPartIdx );
            }
          }
        } // for loop-iRefIdxTemp

        if ( !bChanged )
        {
          if ( uiCostBi <= uiCost[0] && uiCostBi <= uiCost[1] )
          {
            xCopyAMVPInfo(&aacAMVPInfo[0][iRefIdxBi[0]], pcCU->getCUMvField(REF_PIC_LIST_0)->getAMVPInfo());
            xCheckBestMVP(pcCU, REF_PIC_LIST_0, cMvBi[0], cMvPredBi[0][iRefIdxBi[0]], aaiMvpIdxBi[0][iRefIdxBi[0]], uiBits[2], uiCostBi);
            if(!pcCU->getSlice()->getMvdL1ZeroFlag())
            {
              xCopyAMVPInfo(&aacAMVPInfo[1][iRefIdxBi[1]], pcCU->getCUMvField(REF_PIC_LIST_1)->getAMVPInfo());
              xCheckBestMVP(pcCU, REF_PIC_LIST_1, cMvBi[1], cMvPredBi[1][iRefIdxBi[1]], aaiMvpIdxBi[1][iRefIdxBi[1]], uiBits[2], uiCostBi);
            }
          }
          break;
        }
      } // for loop-iter
    } // if (B_SLICE)

#if AMP_MRG
    } //end if bTestNormalMC
#endif
    //  Clear Motion Field
    pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMvField( TComMvField(), ePartSize, uiPartAddr, 0, iPartIdx );
    pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMvField( TComMvField(), ePartSize, uiPartAddr, 0, iPartIdx );
    pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMvd    ( cMvZero,       ePartSize, uiPartAddr, 0, iPartIdx );
    pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMvd    ( cMvZero,       ePartSize, uiPartAddr, 0, iPartIdx );

    pcCU->setMVPIdxSubParts( -1, REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
    pcCU->setMVPNumSubParts( -1, REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
    pcCU->setMVPIdxSubParts( -1, REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
    pcCU->setMVPNumSubParts( -1, REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));

    UInt uiMEBits = 0;
    // Set Motion Field_
    cMv[1] = mvValidList1;
	
    iRefIdx[1] = refIdxValidList1;
    uiBits[1] = bitsValidList1;
    uiCost[1] = costValidList1;

#if AMP_MRG
    if (bTestNormalMC)
    {
#endif
    if ( uiCostBi <= uiCost[0] && uiCostBi <= uiCost[1])
    {
      uiLastMode = 2;
      pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMv( cMvBi[0], ePartSize, uiPartAddr, 0, iPartIdx );
      pcCU->getCUMvField(REF_PIC_LIST_0)->setAllRefIdx( iRefIdxBi[0], ePartSize, uiPartAddr, 0, iPartIdx );
      pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMv( cMvBi[1], ePartSize, uiPartAddr, 0, iPartIdx );
      pcCU->getCUMvField(REF_PIC_LIST_1)->setAllRefIdx( iRefIdxBi[1], ePartSize, uiPartAddr, 0, iPartIdx );

      TempMv = cMvBi[0] - cMvPredBi[0][iRefIdxBi[0]];
      pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMvd    ( TempMv,                 ePartSize, uiPartAddr, 0, iPartIdx );

      TempMv = cMvBi[1] - cMvPredBi[1][iRefIdxBi[1]];
      pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMvd    ( TempMv,                 ePartSize, uiPartAddr, 0, iPartIdx );

      pcCU->setInterDirSubParts( 3, uiPartAddr, iPartIdx, pcCU->getDepth(0) );

      pcCU->setMVPIdxSubParts( aaiMvpIdxBi[0][iRefIdxBi[0]], REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
      pcCU->setMVPNumSubParts( aaiMvpNum[0][iRefIdxBi[0]], REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
      pcCU->setMVPIdxSubParts( aaiMvpIdxBi[1][iRefIdxBi[1]], REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
      pcCU->setMVPNumSubParts( aaiMvpNum[1][iRefIdxBi[1]], REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));

      uiMEBits = uiBits[2];
    }
    else if ( uiCost[0] <= uiCost[1] )
    {
      uiLastMode = 0;
      pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMv( cMv[0], ePartSize, uiPartAddr, 0, iPartIdx );
      pcCU->getCUMvField(REF_PIC_LIST_0)->setAllRefIdx( iRefIdx[0], ePartSize, uiPartAddr, 0, iPartIdx );

      TempMv = cMv[0] - cMvPred[0][iRefIdx[0]];
      pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMvd    ( TempMv,                 ePartSize, uiPartAddr, 0, iPartIdx );

      pcCU->setInterDirSubParts( 1, uiPartAddr, iPartIdx, pcCU->getDepth(0) );

      pcCU->setMVPIdxSubParts( aaiMvpIdx[0][iRefIdx[0]], REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
      pcCU->setMVPNumSubParts( aaiMvpNum[0][iRefIdx[0]], REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));

      uiMEBits = uiBits[0];
    }
    else
    {
      uiLastMode = 1;
      pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMv( cMv[1], ePartSize, uiPartAddr, 0, iPartIdx );
      pcCU->getCUMvField(REF_PIC_LIST_1)->setAllRefIdx( iRefIdx[1], ePartSize, uiPartAddr, 0, iPartIdx );

      TempMv = cMv[1] - cMvPred[1][iRefIdx[1]];
      pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMvd    ( TempMv,                 ePartSize, uiPartAddr, 0, iPartIdx );

      pcCU->setInterDirSubParts( 2, uiPartAddr, iPartIdx, pcCU->getDepth(0) );

      pcCU->setMVPIdxSubParts( aaiMvpIdx[1][iRefIdx[1]], REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
      pcCU->setMVPNumSubParts( aaiMvpNum[1][iRefIdx[1]], REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));

      uiMEBits = uiBits[1];
    }
#if AMP_MRG
    } // end if bTestNormalMC
#endif

    if ( pcCU->getPartitionSize( uiPartAddr ) != SIZE_2Nx2N )
    {
      UInt uiMRGInterDir = 0;
      TComMvField cMRGMvField[2];
      UInt uiMRGIndex = 0;

      UInt uiMEInterDir = 0;
      TComMvField cMEMvField[2];

      m_pcRdCost->selectMotionLambda( true, 0, pcCU->getCUTransquantBypass(uiPartAddr) );

#if AMP_MRG
      // calculate ME cost
      Distortion uiMEError = std::numeric_limits<Distortion>::max();
      Distortion uiMECost  = std::numeric_limits<Distortion>::max();

      if (bTestNormalMC)
      {
        xGetInterPredictionError( pcCU, pcOrgYuv, iPartIdx, uiMEError, m_pcEncCfg->getUseHADME() );
        uiMECost = uiMEError + m_pcRdCost->getCost( uiMEBits );
      }
#else
      // calculate ME cost
      Distortion uiMEError = std::numeric_limits<Distortion>::max();
      xGetInterPredictionError( pcCU, pcOrgYuv, iPartIdx, uiMEError, m_pcEncCfg->getUseHADME() );
      Distortion uiMECost = uiMEError + m_pcRdCost->getCost( uiMEBits );
#endif
      // save ME result.
      uiMEInterDir = pcCU->getInterDir( uiPartAddr );
      TComDataCU::getMvField( pcCU, uiPartAddr, REF_PIC_LIST_0, cMEMvField[0] );
      TComDataCU::getMvField( pcCU, uiPartAddr, REF_PIC_LIST_1, cMEMvField[1] );

      // find Merge result
      Distortion uiMRGCost = std::numeric_limits<Distortion>::max();

      xMergeEstimation( pcCU, pcOrgYuv, iPartIdx, uiMRGInterDir, cMRGMvField, uiMRGIndex, uiMRGCost, cMvFieldNeighbours, uhInterDirNeighbours, numValidMergeCand);

      if ( uiMRGCost < uiMECost )
      {
        // set Merge result
        pcCU->setMergeFlagSubParts ( true,          uiPartAddr, iPartIdx, pcCU->getDepth( uiPartAddr ) );
        pcCU->setMergeIndexSubParts( uiMRGIndex,    uiPartAddr, iPartIdx, pcCU->getDepth( uiPartAddr ) );
        pcCU->setInterDirSubParts  ( uiMRGInterDir, uiPartAddr, iPartIdx, pcCU->getDepth( uiPartAddr ) );
        pcCU->getCUMvField( REF_PIC_LIST_0 )->setAllMvField( cMRGMvField[0], ePartSize, uiPartAddr, 0, iPartIdx );
        pcCU->getCUMvField( REF_PIC_LIST_1 )->setAllMvField( cMRGMvField[1], ePartSize, uiPartAddr, 0, iPartIdx );

        pcCU->getCUMvField(REF_PIC_LIST_0)->setAllMvd    ( cMvZero,            ePartSize, uiPartAddr, 0, iPartIdx );
        pcCU->getCUMvField(REF_PIC_LIST_1)->setAllMvd    ( cMvZero,            ePartSize, uiPartAddr, 0, iPartIdx );

        pcCU->setMVPIdxSubParts( -1, REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
        pcCU->setMVPNumSubParts( -1, REF_PIC_LIST_0, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
        pcCU->setMVPIdxSubParts( -1, REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
        pcCU->setMVPNumSubParts( -1, REF_PIC_LIST_1, uiPartAddr, iPartIdx, pcCU->getDepth(uiPartAddr));
      }
      else
      {
        // set ME result
        pcCU->setMergeFlagSubParts( false,        uiPartAddr, iPartIdx, pcCU->getDepth( uiPartAddr ) );
        pcCU->setInterDirSubParts ( uiMEInterDir, uiPartAddr, iPartIdx, pcCU->getDepth( uiPartAddr ) );
        pcCU->getCUMvField( REF_PIC_LIST_0 )->setAllMvField( cMEMvField[0], ePartSize, uiPartAddr, 0, iPartIdx );
        pcCU->getCUMvField( REF_PIC_LIST_1 )->setAllMvField( cMEMvField[1], ePartSize, uiPartAddr, 0, iPartIdx );
      }
    }

    //  MC
    motionCompensation ( pcCU, pcPredYuv, REF_PIC_LIST_X, iPartIdx );

  } //  end of for ( Int iPartIdx = 0; iPartIdx < iNumPart; iPartIdx++ )

  setWpScalingDistParam( pcCU, -1, REF_PIC_LIST_X );
 // CTUW = iRoiWidth;
 // CTUH = iRoiHeight;
 // myfile << CTUH << ',' << CTUW << endl;
  return;
}


// AMVP
Void TEncSearch::xEstimateMvPredAMVP( TComDataCU* pcCU, TComYuv* pcOrgYuv, UInt uiPartIdx, RefPicList eRefPicList, Int iRefIdx, TComMv& rcMvPred, Bool bFilled, Distortion* puiDistBiP )
{

  AMVPInfo*  pcAMVPInfo = pcCU->getCUMvField(eRefPicList)->getAMVPInfo();

  TComMv     cBestMv;
  Int        iBestIdx   = 0;
  TComMv     cZeroMv;
  TComMv     cMvPred;
  Distortion uiBestCost = std::numeric_limits<Distortion>::max();
  UInt       uiPartAddr = 0;
  Int        iRoiWidth, iRoiHeight;
  Int        i;
 
  pcCU->getPartIndexAndSize( uiPartIdx, uiPartAddr, iRoiWidth, iRoiHeight );
 

  // Fill the MV Candidates
  if (!bFilled)
  {
    pcCU->fillMvpCand( uiPartIdx, uiPartAddr, eRefPicList, iRefIdx, pcAMVPInfo );
  }

  // initialize Mvp index & Mvp
  iBestIdx = 0;
  cBestMv  = pcAMVPInfo->m_acMvCand[0];
  if (pcAMVPInfo->iN <= 1)
  {
    rcMvPred = cBestMv;

    pcCU->setMVPIdxSubParts( iBestIdx, eRefPicList, uiPartAddr, uiPartIdx, pcCU->getDepth(uiPartAddr));
    pcCU->setMVPNumSubParts( pcAMVPInfo->iN, eRefPicList, uiPartAddr, uiPartIdx, pcCU->getDepth(uiPartAddr));

    if(pcCU->getSlice()->getMvdL1ZeroFlag() && eRefPicList==REF_PIC_LIST_1)
    {
      (*puiDistBiP) = xGetTemplateCost( pcCU, uiPartAddr, pcOrgYuv, &m_cYuvPredTemp, rcMvPred, 0, AMVP_MAX_NUM_CANDS, eRefPicList, iRefIdx, iRoiWidth, iRoiHeight);
    }
    return;
  }

  if (bFilled)
  {
    assert(pcCU->getMVPIdx(eRefPicList,uiPartAddr) >= 0);
    rcMvPred = pcAMVPInfo->m_acMvCand[pcCU->getMVPIdx(eRefPicList,uiPartAddr)];
    return;
  }

  m_cYuvPredTemp.clear();
  //-- Check Minimum Cost.
  for ( i = 0 ; i < pcAMVPInfo->iN; i++)
  {
    Distortion uiTmpCost;
    uiTmpCost = xGetTemplateCost( pcCU, uiPartAddr, pcOrgYuv, &m_cYuvPredTemp, pcAMVPInfo->m_acMvCand[i], i, AMVP_MAX_NUM_CANDS, eRefPicList, iRefIdx, iRoiWidth, iRoiHeight);
    if ( uiBestCost > uiTmpCost )
    {
      uiBestCost = uiTmpCost;
      cBestMv   = pcAMVPInfo->m_acMvCand[i];
      iBestIdx  = i;
      (*puiDistBiP) = uiTmpCost;
    }
  }

  m_cYuvPredTemp.clear();

  // Setting Best MVP
  rcMvPred = cBestMv;
  pcCU->setMVPIdxSubParts( iBestIdx, eRefPicList, uiPartAddr, uiPartIdx, pcCU->getDepth(uiPartAddr));
  pcCU->setMVPNumSubParts( pcAMVPInfo->iN, eRefPicList, uiPartAddr, uiPartIdx, pcCU->getDepth(uiPartAddr));
  return;
  
}

UInt TEncSearch::xGetMvpIdxBits(Int iIdx, Int iNum)
{
  assert(iIdx >= 0 && iNum >= 0 && iIdx < iNum);

  if (iNum == 1)
  {
    return 0;
  }

  UInt uiLength = 1;
  Int iTemp = iIdx;
  if ( iTemp == 0 )
  {
    return uiLength;
  }

  Bool bCodeLast = ( iNum-1 > iTemp );

  uiLength += (iTemp-1);

  if( bCodeLast )
  {
    uiLength++;
  }

  return uiLength;
}

Void TEncSearch::xGetBlkBits( PartSize eCUMode, Bool bPSlice, Int iPartIdx, UInt uiLastMode, UInt uiBlkBit[3])
{
  if ( eCUMode == SIZE_2Nx2N )
  {
    uiBlkBit[0] = (! bPSlice) ? 3 : 1;
    uiBlkBit[1] = 3;
    uiBlkBit[2] = 5;
  }
  else if ( (eCUMode == SIZE_2NxN || eCUMode == SIZE_2NxnU) || eCUMode == SIZE_2NxnD )
  {
    UInt aauiMbBits[2][3][3] = { { {0,0,3}, {0,0,0}, {0,0,0} } , { {5,7,7}, {7,5,7}, {9-3,9-3,9-3} } };
    if ( bPSlice )
    {
      uiBlkBit[0] = 3;
      uiBlkBit[1] = 0;
      uiBlkBit[2] = 0;
    }
    else
    {
      ::memcpy( uiBlkBit, aauiMbBits[iPartIdx][uiLastMode], 3*sizeof(UInt) );
    }
  }
  else if ( (eCUMode == SIZE_Nx2N || eCUMode == SIZE_nLx2N) || eCUMode == SIZE_nRx2N )
  {
    UInt aauiMbBits[2][3][3] = { { {0,2,3}, {0,0,0}, {0,0,0} } , { {5,7,7}, {7-2,7-2,9-2}, {9-3,9-3,9-3} } };
    if ( bPSlice )
    {
      uiBlkBit[0] = 3;
      uiBlkBit[1] = 0;
      uiBlkBit[2] = 0;
    }
    else
    {
      ::memcpy( uiBlkBit, aauiMbBits[iPartIdx][uiLastMode], 3*sizeof(UInt) );
    }
  }
  else if ( eCUMode == SIZE_NxN )
  {
    uiBlkBit[0] = (! bPSlice) ? 3 : 1;
    uiBlkBit[1] = 3;
    uiBlkBit[2] = 5;
  }
  else
  {
    printf("Wrong!\n");
    assert( 0 );
  }
}

Void TEncSearch::xCopyAMVPInfo (AMVPInfo* pSrc, AMVPInfo* pDst)
{
  pDst->iN = pSrc->iN;
  for (Int i = 0; i < pSrc->iN; i++)
  {
    pDst->m_acMvCand[i] = pSrc->m_acMvCand[i];
  }
}

Void TEncSearch::xCheckBestMVP ( TComDataCU* pcCU, RefPicList eRefPicList, TComMv cMv, TComMv& rcMvPred, Int& riMVPIdx, UInt& ruiBits, Distortion& ruiCost )
{
  AMVPInfo* pcAMVPInfo = pcCU->getCUMvField(eRefPicList)->getAMVPInfo();
  
  assert(pcAMVPInfo->m_acMvCand[riMVPIdx] == rcMvPred);

  if (pcAMVPInfo->iN < 2)
  {
    return;
  }

  m_pcRdCost->selectMotionLambda( true, 0, pcCU->getCUTransquantBypass(0) );
  m_pcRdCost->setCostScale ( 0    );

  Int iBestMVPIdx = riMVPIdx;

  m_pcRdCost->setPredictor( rcMvPred );
  Int iOrgMvBits  = m_pcRdCost->getBitsOfVectorWithPredictor(cMv.getHor(), cMv.getVer());
  iOrgMvBits += m_auiMVPIdxCost[riMVPIdx][AMVP_MAX_NUM_CANDS];
  Int iBestMvBits = iOrgMvBits;

  for (Int iMVPIdx = 0; iMVPIdx < pcAMVPInfo->iN; iMVPIdx++)
  {
    if (iMVPIdx == riMVPIdx)
    {
      continue;
    }

    m_pcRdCost->setPredictor( pcAMVPInfo->m_acMvCand[iMVPIdx] );

    Int iMvBits = m_pcRdCost->getBitsOfVectorWithPredictor(cMv.getHor(), cMv.getVer());
    iMvBits += m_auiMVPIdxCost[iMVPIdx][AMVP_MAX_NUM_CANDS];

    if (iMvBits < iBestMvBits)
    {
      iBestMvBits = iMvBits;
      iBestMVPIdx = iMVPIdx;
    }
  }

  if (iBestMVPIdx != riMVPIdx)  //if changed
  {
    rcMvPred = pcAMVPInfo->m_acMvCand[iBestMVPIdx];

    riMVPIdx = iBestMVPIdx;
    UInt uiOrgBits = ruiBits;
    ruiBits = uiOrgBits - iOrgMvBits + iBestMvBits;
    ruiCost = (ruiCost - m_pcRdCost->getCost( uiOrgBits ))  + m_pcRdCost->getCost( ruiBits );
  }
  
}


Distortion TEncSearch::xGetTemplateCost( TComDataCU* pcCU,
                                         UInt        uiPartAddr,
                                         TComYuv*    pcOrgYuv,
                                         TComYuv*    pcTemplateCand,
                                         TComMv      cMvCand,
                                         Int         iMVPIdx,
                                         Int         iMVPNum,
                                         RefPicList  eRefPicList,
                                         Int         iRefIdx,
                                         Int         iSizeX,
                                         Int         iSizeY
                                         )
{
  Distortion uiCost = std::numeric_limits<Distortion>::max();

  TComPicYuv* pcPicYuvRef = pcCU->getSlice()->getRefPic( eRefPicList, iRefIdx )->getPicYuvRec();

  pcCU->clipMv( cMvCand );

  // prediction pattern
  if ( pcCU->getSlice()->testWeightPred() && pcCU->getSlice()->getSliceType()==P_SLICE )
  {
    xPredInterBlk( COMPONENT_Y, pcCU, pcPicYuvRef, uiPartAddr, &cMvCand, iSizeX, iSizeY, pcTemplateCand, true, pcCU->getSlice()->getSPS()->getBitDepth(CHANNEL_TYPE_LUMA) );
  }
  else
  {
    xPredInterBlk( COMPONENT_Y, pcCU, pcPicYuvRef, uiPartAddr, &cMvCand, iSizeX, iSizeY, pcTemplateCand, false, pcCU->getSlice()->getSPS()->getBitDepth(CHANNEL_TYPE_LUMA) );
  }

  if ( pcCU->getSlice()->testWeightPred() && pcCU->getSlice()->getSliceType()==P_SLICE )
  {
    xWeightedPredictionUni( pcCU, pcTemplateCand, uiPartAddr, iSizeX, iSizeY, eRefPicList, pcTemplateCand, iRefIdx );
  }

  // calc distortion

  uiCost = m_pcRdCost->getDistPart( pcCU->getSlice()->getSPS()->getBitDepth(CHANNEL_TYPE_LUMA), pcTemplateCand->getAddr(COMPONENT_Y, uiPartAddr), pcTemplateCand->getStride(COMPONENT_Y), pcOrgYuv->getAddr(COMPONENT_Y, uiPartAddr), pcOrgYuv->getStride(COMPONENT_Y), iSizeX, iSizeY, COMPONENT_Y, DF_SAD );
  uiCost = (UInt) m_pcRdCost->calcRdCost( m_auiMVPIdxCost[iMVPIdx][iMVPNum], uiCost, DF_SAD );
  return uiCost;
}


Void TEncSearch::xMotionEstimation( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPartIdx, RefPicList eRefPicList, TComMv* pcMvPred, Int iRefIdxPred, TComMv& rcMv, UInt& ruiBits, Distortion& ruiCost, Bool bBi  )
{
  UInt          uiPartAddr;
  Int           iRoiWidth;
  Int           iRoiHeight;

  TComMv        cMvHalf, cMvQter;
  TComMv        cMvSrchRngLT;
  TComMv        cMvSrchRngRB;
  // Distortion   INTCOST=0;
  TComYuv*      pcYuv = pcYuvOrg;
   
  assert(eRefPicList < MAX_NUM_REF_LIST_ADAPT_SR && iRefIdxPred<Int(MAX_IDX_ADAPT_SR));
  m_iSearchRange = m_aaiAdaptSR[eRefPicList][iRefIdxPred];

  Int           iSrchRng      = ( bBi ? m_bipredSearchRange : m_iSearchRange );
  TComPattern   tmpPattern;
  TComPattern*  pcPatternKey  = &tmpPattern;

  Double        fWeight       = 1.0;

  pcCU->getPartIndexAndSize( iPartIdx, uiPartAddr, iRoiWidth, iRoiHeight );

  if ( bBi ) // Bipredictive ME
  {
    TComYuv*  pcYuvOther = &m_acYuvPred[1-(Int)eRefPicList];
    pcYuv                = &m_cYuvPredTemp;

    pcYuvOrg->copyPartToPartYuv( pcYuv, uiPartAddr, iRoiWidth, iRoiHeight );

    pcYuv->removeHighFreq( pcYuvOther, uiPartAddr, iRoiWidth, iRoiHeight, pcCU->getSlice()->getSPS()->getBitDepths().recon, m_pcEncCfg->getClipForBiPredMeEnabled() );

    fWeight = 0.5;
  }
  m_cDistParam.bIsBiPred = bBi;

  //  Search key pattern initialization
  pcPatternKey->initPattern( pcYuv->getAddr  ( COMPONENT_Y, uiPartAddr ),
                             iRoiWidth,
                             iRoiHeight,
                             pcYuv->getStride(COMPONENT_Y),
                             pcCU->getSlice()->getSPS()->getBitDepth(CHANNEL_TYPE_LUMA) );

  Pel*        piRefY      = pcCU->getSlice()->getRefPic( eRefPicList, iRefIdxPred )->getPicYuvRec()->getAddr( COMPONENT_Y, pcCU->getCtuRsAddr(), pcCU->getZorderIdxInCtu() + uiPartAddr );
  Int         iRefStride  = pcCU->getSlice()->getRefPic( eRefPicList, iRefIdxPred )->getPicYuvRec()->getStride(COMPONENT_Y);

  TComMv      cMvPred = *pcMvPred;

  if ( bBi )
  {
	  
    xSetSearchRange   ( pcCU, rcMv   , iSrchRng, cMvSrchRngLT, cMvSrchRngRB );
  }
  else
  {
	  
    xSetSearchRange   ( pcCU, cMvPred, iSrchRng, cMvSrchRngLT, cMvSrchRngRB );
  }

  m_pcRdCost->selectMotionLambda(true, 0, pcCU->getCUTransquantBypass(uiPartAddr) );

  m_pcRdCost->setPredictor  ( *pcMvPred );
  m_pcRdCost->setCostScale  ( 2 );

  setWpScalingDistParam( pcCU, iRefIdxPred, eRefPicList );
  //  Do integer search
  if ( (m_motionEstimationSearchMethod==MESEARCH_FULL) || bBi )
  {
    xPatternSearch      ( pcPatternKey, piRefY, iRefStride, &cMvSrchRngLT, &cMvSrchRngRB, rcMv, ruiCost );
  }
  else
  {
    rcMv = *pcMvPred;
    const TComMv *pIntegerMv2Nx2NPred=0;
    if (pcCU->getPartitionSize(0) != SIZE_2Nx2N || pcCU->getDepth(0) != 0)
    {
      pIntegerMv2Nx2NPred = &(m_integerMv2Nx2N[eRefPicList][iRefIdxPred]);
    }
    
    // EMI: Save Block width and height in global variables, to use in our NN
    // TODO: Code Cleaning
    PUHeight = iRoiHeight;
    PUWidth = iRoiWidth;
    PIdx = iPartIdx;
    PAddr = uiPartAddr;
    pcCU->getPartPosition(PIdx, xP, yP, nPSW, nPSH);


    xPatternSearchFast  ( pcCU, pcPatternKey, piRefY, iRefStride, &cMvSrchRngLT, &cMvSrchRngRB, rcMv, ruiCost, pIntegerMv2Nx2NPred );
    if (pcCU->getPartitionSize(0) == SIZE_2Nx2N)
    {
      m_integerMv2Nx2N[eRefPicList][iRefIdxPred] = rcMv;
    }
  }

  m_pcRdCost->selectMotionLambda( true, 0, pcCU->getCUTransquantBypass(uiPartAddr) );

  m_pcRdCost->setCostScale ( 1 );
    
  const Bool bIsLosslessCoded = pcCU->getCUTransquantBypass(uiPartAddr) != 0;
  xPatternSearchFracDIF( bIsLosslessCoded, pcPatternKey, piRefY, iRefStride, &rcMv, cMvHalf, cMvQter, ruiCost );

  m_pcRdCost->setCostScale( 0 );

  // EMI: Modification
  
  /* 
  Fractional Motion Estimation values computed by standard are stored in TComMv variables cMvHalf & cMvQter
  We create other TComMv variables, and replace the standard values with our NN predicted values
  Our NN modifies global variables MVX_HALF & MVX_QRTER, which in return are set used to set our new Mv
  */
  TComMv MV_HALF, MV_QRTER;
  MV_HALF.setHor(MVX_HALF);
  MV_HALF.setVer(MVY_HALF);
  MV_QRTER.setHor(MVX_QRTER);
  MV_QRTER.setVer(MVY_QRTER);

  // For finding Integer Motion Estimation, Set Horizontal and Vertical values to zero:

  // MV_HALF.setHor(0);
  // MV_HALF.setVer(0);
  // MV_QRTER.setHor(0);
  // MV_QRTER.setVer(0);

  /* 
  EMI: To Write the errors and output MV in a CSV file:
  Real values for errors: U,V,H           - NN values for errors: IN[]
  Real values for MV: cMvHalf, cMvQter    - NN values for MV: MV_HALF, MV_QRTER
  Block Width and Height: iRoiWidth, iRoiHeight
  */
  
  // ofstream mv_nn;
  // ofstream errors;
  // errors.open("/home/emi/git-repos/data/HM16.9/extract_data/SSE_errors.csv", ios::app);
  // mv_nn.open("/home/emi/git-repos/data/HM16.9/extract_data/mv_nn.csv", ios::app);
  // errors << U1 << ',' << V1 << ',' << U2 << ',' << H1 << ',' << C << ',' << H2 << ',' << U3 << ',' << V2 << ',' << U4 << ',' << iRoiHeight << ',' << iRoiWidth;
  // errors << ',' << xP << ',' << yP << ',' << PIdx  << ',' << PAddr << endl;
  // errors << ',' << uiPartAddr << ',' << iPartIdx << endl;
  
  /*
  Write the values of the output class directly instead of coordinates:
  Half * 0.5 + Quarter * 0.25:  results in range from -0.75->0.75
  Add both X & Y + 0.75:        range is now 0->1.5
  Multiply X by 4:              X values are now [0, 1, 2, 3, 4, 5, 6]
  Multiply Y by 4*7=28:         Y values are now [0, 7, 14, 21, 28, 35, 42]
  Adding X+Y results in the desired output class, given that the mapping starts from 
  0 for top left corner, 24 center, and 48 for bottom right corner
  */
  
  // int MV_X = (((cMvHalf.getHor() * 0.5) + (cMvQter.getHor() * 0.25)) + 0.75) * 4;
  // int MV_Y = (((cMvHalf.getVer() * 0.5) + (cMvQter.getVer() * 0.25)) + 0.75) * 28;
  // int OUT_CLASS = MV_Y + MV_X;
  // mv_nn << OUT_CLASS << endl;

  // Replace Motion Vector with values computed by our NN

  rcMv <<= 2;
  // rcMv += (cMvHalf <<= 1);
  // rcMv += cMvQter;
  rcMv += (MV_HALF <<= 1);
  rcMv += MV_QRTER;
  
  // End of modification

  UInt uiMvBits = m_pcRdCost->getBitsOfVectorWithPredictor( rcMv.getHor(), rcMv.getVer() );

  ruiBits      += uiMvBits;
  ruiCost       = (Distortion)( floor( fWeight * ( (Double)ruiCost - (Double)m_pcRdCost->getCost( uiMvBits ) ) ) + (Double)m_pcRdCost->getCost( ruiBits ) );
}


Void TEncSearch::xSetSearchRange ( const TComDataCU* const pcCU, const TComMv& cMvPred, const Int iSrchRng,
                                   TComMv& rcMvSrchRngLT, TComMv& rcMvSrchRngRB )
{
  Int  iMvShift = 2;
  TComMv cTmpMvPred = cMvPred;
  pcCU->clipMv( cTmpMvPred );

  rcMvSrchRngLT.setHor( cTmpMvPred.getHor() - (iSrchRng << iMvShift) );
  rcMvSrchRngLT.setVer( cTmpMvPred.getVer() - (iSrchRng << iMvShift) );

  rcMvSrchRngRB.setHor( cTmpMvPred.getHor() + (iSrchRng << iMvShift) );
  rcMvSrchRngRB.setVer( cTmpMvPred.getVer() + (iSrchRng << iMvShift) );
  pcCU->clipMv        ( rcMvSrchRngLT );
  pcCU->clipMv        ( rcMvSrchRngRB );

#if ME_ENABLE_ROUNDING_OF_MVS
  rcMvSrchRngLT.divideByPowerOf2(iMvShift);
  rcMvSrchRngRB.divideByPowerOf2(iMvShift);
#else
  rcMvSrchRngLT >>= iMvShift;
  rcMvSrchRngRB >>= iMvShift;
#endif
}


Void TEncSearch::xPatternSearch(const TComPattern* const pcPatternKey,
	const Pel*               piRefY,
	const Int                iRefStride,
	const TComMv* const      pcMvSrchRngLT,
	const TComMv* const      pcMvSrchRngRB,
	TComMv&      rcMv,
	Distortion&  ruiSAD)
{
	Int   iSrchRngHorLeft = pcMvSrchRngLT->getHor();
	Int   iSrchRngHorRight = pcMvSrchRngRB->getHor();
	Int   iSrchRngVerTop = pcMvSrchRngLT->getVer();
	Int   iSrchRngVerBottom = pcMvSrchRngRB->getVer();

	Distortion  uiSad;
	Distortion  uiSadBest = std::numeric_limits<Distortion>::max();
	Int         iBestX = 0;
	Int         iBestY = 0;


	m_pcRdCost->setDistParam(pcPatternKey, piRefY, iRefStride, m_cDistParam);

	// fast encoder decision: use subsampled SAD for integer ME
	if (m_pcEncCfg->getFastInterSearchMode() == FASTINTERSEARCH_MODE1 || m_pcEncCfg->getFastInterSearchMode() == FASTINTERSEARCH_MODE3)
	{
		if (m_cDistParam.iRows > 8)
		{
			m_cDistParam.iSubShift = 1;
		}
	}

	piRefY += (iSrchRngVerTop * iRefStride);

	for (Int y = iSrchRngVerTop; y <= iSrchRngVerBottom; y++)
	{
		for (Int x = iSrchRngHorLeft; x <= iSrchRngHorRight; x++)
		{
			//  find min. distortion position
			m_cDistParam.pCur = piRefY + x;

			setDistParamComp(COMPONENT_Y);

			m_cDistParam.bitDepth = pcPatternKey->getBitDepthY();
			uiSad = m_cDistParam.DistFunc(&m_cDistParam);

			// motion cost
			uiSad += m_pcRdCost->getCostOfVectorWithPredictor(x, y);

			if (uiSad < uiSadBest)
			{
				uiSadBest = uiSad;
				iBestX = x;
				iBestY = y;
				m_cDistParam.m_maximumDistortionForEarlyExit = uiSad;
			}
		}
		piRefY += iRefStride;
	}




		rcMv.set(iBestX, iBestY);


		ruiSAD = uiSadBest - m_pcRdCost->getCostOfVectorWithPredictor(iBestX, iBestY);

		//getchar();
		return;
	}


Void TEncSearch::xPatternSearchFast( const TComDataCU* const  pcCU,
                                     const TComPattern* const pcPatternKey,
                                     const Pel* const         piRefY,
                                     const Int                iRefStride,
                                     const TComMv* const      pcMvSrchRngLT,
                                     const TComMv* const      pcMvSrchRngRB,
                                     TComMv&                  rcMv,
                                     Distortion&              ruiSAD,
                                     const TComMv* const      pIntegerMv2Nx2NPred )
{
  assert (MD_LEFT < NUM_MV_PREDICTORS);
  pcCU->getMvPredLeft       ( m_acMvPredictors[MD_LEFT] );
  assert (MD_ABOVE < NUM_MV_PREDICTORS);
  pcCU->getMvPredAbove      ( m_acMvPredictors[MD_ABOVE] );
  assert (MD_ABOVE_RIGHT < NUM_MV_PREDICTORS);
  pcCU->getMvPredAboveRight ( m_acMvPredictors[MD_ABOVE_RIGHT] );

  switch ( m_motionEstimationSearchMethod )
  {
    case MESEARCH_DIAMOND:
      xTZSearch( pcCU, pcPatternKey, piRefY, iRefStride, pcMvSrchRngLT, pcMvSrchRngRB, rcMv, ruiSAD, pIntegerMv2Nx2NPred, false );
	  
      C = array_e[0];
      for (int i = 1; i <=index_ref - 1; i++)
      {
        if (array_e[i] < C)
          C = array_e[i];

      }
	 
      // index_ref = index_ref + 1;
      U1 = array_e[index_ref];
      V1 = array_e[index_ref + 1];
      U2 = array_e[index_ref + 2];
      H1 = array_e[index_ref + 3];	  
      H2 = array_e[index_ref + 4];
      U3 = array_e[index_ref + 5];
      V2 = array_e[index_ref + 6];
      U4 = array_e[index_ref + 7];
      	  
      // EMI: neural network implementation
      
      // Reset all values of arrays

      memset(IN, 0, sizeof(IN));
      memset(X1, 0, sizeof(X1));
      memset(X2, 0, sizeof(X2));
      memset(OUT, 0, sizeof(OUT));
      memset(array_e, 0, sizeof(array_e));
      N = 0; NN_out = 0; counter_i = 0; index_ref = 0;


      // Normalize input values using the computed mean and standard deviations

      IN[117] = (U1 - mean[0]) / stdev[0];
      IN[118] = (V1 - mean[1]) / stdev[1];
      IN[119] = (U2 - mean[2]) / stdev[2];
      IN[120] = (H1 - mean[3]) / stdev[3];
      IN[121] = (C - mean[4]) / stdev[4];
      IN[122] = (H2 - mean[5]) / stdev[5];
      IN[123] = (U3 - mean[6]) / stdev[6];
      IN[124] = (V2 - mean[7]) / stdev[7];
      IN[125] = (U4 - mean[8]) / stdev[8];

      // Input layer also consists of categorical variables, in which we will use embedding matrices depending on block Height and Width

      switch (PUHeight) {
        case 4:   IN[0] = embs0[1][0];  IN[1] = embs0[1][1];   IN[2] = embs0[1][2];   IN[3] = embs0[1][3];		break;
        case 8:   IN[0] = embs0[2][0];  IN[1] = embs0[2][1];   IN[2] = embs0[2][2];   IN[3] = embs0[2][3];		break;
        case 12:  IN[0] = embs0[3][0];  IN[1] = embs0[3][1];   IN[2] = embs0[3][2];   IN[3] = embs0[3][3];	  break;
        case 16:  IN[0] = embs0[4][0];  IN[1] = embs0[4][1];   IN[2] = embs0[4][2];   IN[3] = embs0[4][3];		break;
        case 24:  IN[0] = embs0[5][0];  IN[1] = embs0[5][1];   IN[2] = embs0[5][2];   IN[3] = embs0[5][3];	  break;
        case 32:  IN[0] = embs0[6][0];  IN[1] = embs0[6][1];   IN[2] = embs0[6][2];   IN[3] = embs0[6][3];		break;
        case 64:  IN[0] = embs0[7][0];  IN[1] = embs0[7][1];   IN[2] = embs0[7][2];   IN[3] = embs0[7][3];		break;
        default:  IN[0] = embs0[0][0];  IN[1] = embs0[0][1];   IN[2] = embs0[0][2];   IN[3] = embs0[0][3];		break;
      }

      switch (PUWidth) {
        case 4:   IN[4] = embs1[1][0];  IN[5] = embs1[1][1];   IN[6] = embs1[1][2];   IN[7] = embs1[1][3];		break;
        case 8:   IN[4] = embs1[2][0];  IN[5] = embs1[2][1];   IN[6] = embs1[2][2];   IN[7] = embs1[2][3];		break;
        case 12:  IN[4] = embs1[3][0];  IN[5] = embs1[3][1];   IN[6] = embs1[3][2];   IN[7] = embs1[3][3];	  break;
        case 16:  IN[4] = embs1[4][0];  IN[5] = embs1[4][1];   IN[6] = embs1[4][2];   IN[7] = embs1[4][3];		break;
        case 24:  IN[4] = embs1[5][0];  IN[5] = embs1[5][1];   IN[6] = embs1[5][2];   IN[7] = embs1[5][3];	  break;
        case 32:  IN[4] = embs1[6][0];  IN[5] = embs1[6][1];   IN[6] = embs1[6][2];   IN[7] = embs1[6][3];		break;
        case 64:  IN[4] = embs1[7][0];  IN[5] = embs1[7][1];   IN[6] = embs1[7][2];   IN[7] = embs1[7][3];		break;
        default:  IN[4] = embs1[0][0];  IN[5] = embs1[0][1];   IN[6] = embs1[0][2];   IN[7] = embs1[0][3];		break;
      }

      for(int i=0 ; i<480 ; i++){
        if(xP == xArray[i]){
          for(int j=0; j<50; j++){ IN[j+8] = embs2[i+1][j];}
          break;
        }
        else{
          for(int j=0; j<50; j++){ IN[j+8] = embs2[0][j];}
          break;
        }
      }

      for(int i=0 ; i<270 ; i++){
        if(yP == yArray[i]){
          for(int j=0; j<50; j++){ IN[j+58] = embs3[i+1][j];}
          break;
        }
        else{
          for(int j=0; j<50; j++){ IN[j+58] = embs3[0][j];}
          break;
        }
      }

      switch (PIdx) {
        case 0:   IN[108] = embs4[1][0];  IN[109] = embs4[1][1];   break;
        case 1:   IN[108] = embs4[2][0];  IN[109] = embs4[2][1];   break;
        default:  IN[108] = embs4[0][0];  IN[109] = embs4[0][1];   break;
      }

      switch (PAddr) {
        case 0:   IN[110] = embs5[1][0];   IN[111] = embs5[1][1];   IN[112] = embs5[1][2];    IN[113] = embs5[1][3];		
                  IN[114] = embs5[1][4];	 IN[115] = embs5[1][5];	  IN[116] = embs5[1][6];	  break;
        case 1:   IN[110] = embs5[2][0];   IN[111] = embs5[2][1];   IN[112] = embs5[2][2];    IN[113] = embs5[2][3];		
                  IN[114] = embs5[2][4];	 IN[115] = embs5[2][5];	  IN[116] = embs5[2][6];		break;
        case 2:   IN[110] = embs5[3][0];   IN[111] = embs5[3][1];   IN[112] = embs5[3][2];    IN[113] = embs5[3][3];
                  IN[114] = embs5[3][4];	 IN[115] = embs5[3][5];	  IN[116] = embs5[3][6];		break;
        case 4:   IN[110] = embs5[4][0];   IN[111] = embs5[4][1];   IN[112] = embs5[4][2];    IN[113] = embs5[4][3];
                  IN[114] = embs5[4][4];	 IN[115] = embs5[4][5];	  IN[116] = embs5[4][6];		break;
        case 5:   IN[110] = embs5[5][0];   IN[111] = embs5[5][1];   IN[112] = embs5[5][2];    IN[113] = embs5[5][3];
                  IN[114] = embs5[5][4];	 IN[115] = embs5[5][5];	  IN[116] = embs5[5][6];		break;
        case 8:   IN[110] = embs5[6][0];   IN[111] = embs5[6][1];   IN[112] = embs5[6][2];    IN[113] = embs5[6][3];
                  IN[114] = embs5[6][4];	 IN[115] = embs5[6][5];	  IN[116] = embs5[6][6];		break;
        case 10:  IN[110] = embs5[7][0];   IN[111] = embs5[7][1];   IN[112] = embs5[7][2];    IN[113] = embs5[7][3];
                  IN[114] = embs5[7][4];	 IN[115] = embs5[7][5];	  IN[116] = embs5[7][6];		break;
        case 16:  IN[110] = embs5[8][0];   IN[111] = embs5[8][1];   IN[112] = embs5[8][2];    IN[113] = embs5[8][3];
                  IN[114] = embs5[8][4];	 IN[115] = embs5[8][5];	  IN[116] = embs5[8][6];		break;
        case 20:  IN[110] = embs5[9][0];   IN[111] = embs5[9][1];   IN[112] = embs5[9][2];    IN[113] = embs5[9][3];
                  IN[114] = embs5[9][4];	 IN[115] = embs5[9][5];	  IN[116] = embs5[9][6];		break;
        case 32:  IN[110] = embs5[10][0];  IN[111] = embs5[10][1];  IN[112] = embs5[10][2];   IN[113] = embs5[10][3];
                  IN[114] = embs5[10][4];  IN[115] = embs5[10][5];	IN[116] = embs5[10][6];	  break;
        case 40:  IN[110] = embs5[11][0];  IN[111] = embs5[11][1];  IN[112] = embs5[11][2];   IN[113] = embs5[11][3];
                  IN[114] = embs5[11][4];	 IN[115] = embs5[11][5];	IN[116] = embs5[11][6];	  break;
        case 64:  IN[110] = embs5[12][0];  IN[111] = embs5[12][1];  IN[112] = embs5[12][2];   IN[113] = embs5[12][3];
                  IN[114] = embs5[12][4];	 IN[115] = embs5[12][5];	IN[116] = embs5[12][6];	  break;
        case 128: IN[110] = embs5[13][0];  IN[111] = embs5[13][1];  IN[112] = embs5[13][2];   IN[113] = embs5[13][3];
                  IN[114] = embs5[13][4];	 IN[115] = embs5[13][5];	IN[116] = embs5[13][6];	  break;
        default:  IN[110] = embs5[0][0];   IN[111] = embs5[0][1];   IN[112] = embs5[0][2];    IN[113] = embs5[0][3];
                  IN[114] = embs5[0][4];	 IN[115] = embs5[0][5];	  IN[116] = embs5[0][6];		break;
      }

      // Input Layer
      for(int i=0;i<9;i++){
        IN[i+117] = (IN[i+117] * BN_gamma_in[i]);	  
      }

      // First Hidden Layer
      for (int i = 0; i < 22; i++) {
        for (int j = 0; j < 126; j++) {
          X1[i] += (in_h1[i][j] * IN[j]);
        }
        X1[i] += b1[i];
        X1[i] = (relu(X1[i]) * BN_gamma_1[i]) + BN_beta_1[i];
      }

      // Second Hidden Layer
      for (int i = 0; i < 20; i++) {
        for (int j = 0; j < 22; j++) {
          X2[i] += (h1_h2[i][j] * X1[j]);
        }
        X2[i] += b2[i];
        X2[i] = (relu(X2[i]) * BN_gamma_2[i]) + BN_beta_2[i];
      }

      // OUTPUT LAYER
      for (int i = 0; i < 49; i++) {
        for (int j = 0; j < 20; j++) {
          OUT[i] += (h2_out[i][j] * X2[j]);
        }
        OUT[i] += bout[i];
      }
      
      // Decision: NN_out holds the index of the maximum element

      N = sizeof(OUT) / sizeof(float); // Size of OUT[] array, used in next step
      NN_out = std::distance(OUT, std::max_element(OUT, OUT + N));
      
      switch (NN_out) {
        case 0: MVX_HALF = -1;  MVX_QRTER = -1;		MVY_HALF = -1;  MVY_QRTER = -1;		break;
        case 1: MVX_HALF = -1;  MVX_QRTER = 0;		MVY_HALF = -1;  MVY_QRTER = -1;		break;
        case 2: MVX_HALF = 0;   MVX_QRTER = -1;		MVY_HALF = -1;  MVY_QRTER = -1;		break;
        case 3: MVX_HALF = 0;   MVX_QRTER = 0;	  MVY_HALF = -1;  MVY_QRTER = -1;	  break;
        case 4: MVX_HALF = 0;   MVX_QRTER = 1;		MVY_HALF = -1;  MVY_QRTER = -1;		break;
        case 5: MVX_HALF = 1;   MVX_QRTER = 0;		MVY_HALF = -1;  MVY_QRTER = -1;	  break;
        case 6: MVX_HALF = 1;   MVX_QRTER = 1;		MVY_HALF = -1;  MVY_QRTER = -1;		break;

        case 7: MVX_HALF = -1;  MVX_QRTER = -1;		MVY_HALF = -1;  MVY_QRTER = 0;		break;
        case 8: MVX_HALF = -1;  MVX_QRTER = 0;		MVY_HALF = -1;  MVY_QRTER = 0;		break;
        case 9: MVX_HALF = 0;   MVX_QRTER = -1;		MVY_HALF = -1;  MVY_QRTER = 0;		break;
        case 10: MVX_HALF = 0;  MVX_QRTER = 0;	  MVY_HALF = -1;  MVY_QRTER = 0;		break;
        case 11: MVX_HALF = 0;  MVX_QRTER = 1;		MVY_HALF = -1;  MVY_QRTER = 0;		break;
        case 12: MVX_HALF = 1;  MVX_QRTER = 0;		MVY_HALF = -1;  MVY_QRTER = 0;		break;
        case 13: MVX_HALF = 1;  MVX_QRTER = 1;		MVY_HALF = -1;  MVY_QRTER = 0;		break;

        case 14: MVX_HALF = -1; MVX_QRTER = -1;	  MVY_HALF = 0;   MVY_QRTER = -1;		break;
        case 15: MVX_HALF = -1; MVX_QRTER = 0;		MVY_HALF = 0;   MVY_QRTER = -1;		break;
        case 16: MVX_HALF = 0;  MVX_QRTER = -1;   MVY_HALF = 0;   MVY_QRTER = -1;		break;
        case 17: MVX_HALF = 0;  MVX_QRTER = 0;	  MVY_HALF = 0;   MVY_QRTER = -1;		break;
        case 18: MVX_HALF = 0;  MVX_QRTER = 1;		MVY_HALF = 0;   MVY_QRTER = -1;		break;
        case 19: MVX_HALF = 1;  MVX_QRTER = 0;		MVY_HALF = 0;   MVY_QRTER = -1;		break;
        case 20: MVX_HALF = 1;  MVX_QRTER = 1;		MVY_HALF = 0;   MVY_QRTER = -1;		break;

        case 21: MVX_HALF = -1; MVX_QRTER = -1;	  MVY_HALF = 0;   MVY_QRTER = 0;		break;
        case 22: MVX_HALF = -1; MVX_QRTER = 0;		MVY_HALF = 0;   MVY_QRTER = 0;		break;
        case 23: MVX_HALF = 0;  MVX_QRTER = -1;	  MVY_HALF = 0;   MVY_QRTER = 0;		break;
        case 24: MVX_HALF = 0;  MVX_QRTER = 0;	  MVY_HALF = 0;   MVY_QRTER = 0;		break;
        case 25: MVX_HALF = 0;  MVX_QRTER = 1;		MVY_HALF = 0;   MVY_QRTER = 0;		break;
        case 26: MVX_HALF = 1;  MVX_QRTER = 0;		MVY_HALF = 0;   MVY_QRTER = 0;		break;
        case 27: MVX_HALF = 1;  MVX_QRTER = 1;		MVY_HALF = 0;   MVY_QRTER = 0;		break;

        case 28: MVX_HALF = -1; MVX_QRTER = -1;	  MVY_HALF = 0;   MVY_QRTER = 1;		break;
        case 29: MVX_HALF = -1; MVX_QRTER = 0;		MVY_HALF = 0;   MVY_QRTER = 1;		break;
        case 30: MVX_HALF = 0;  MVX_QRTER = -1;	  MVY_HALF = 0;   MVY_QRTER = 1;		break;
        case 31: MVX_HALF = 0;  MVX_QRTER = 0;	  MVY_HALF = 0;   MVY_QRTER = 1;		break;
        case 32: MVX_HALF = 0;  MVX_QRTER = 1;		MVY_HALF = 0;   MVY_QRTER = 1;		break;
        case 33: MVX_HALF = 1;  MVX_QRTER = 0;		MVY_HALF = 0;   MVY_QRTER = 1;		break;
        case 34: MVX_HALF = 1;  MVX_QRTER = 1;		MVY_HALF = 0;   MVY_QRTER = 1;		break;

        case 35: MVX_HALF = -1; MVX_QRTER = -1;   MVY_HALF = 1;   MVY_QRTER = 0;	  break;
        case 36: MVX_HALF = -1; MVX_QRTER = 0;		MVY_HALF = 1;   MVY_QRTER = 0;	  break;
        case 37: MVX_HALF = 0;  MVX_QRTER = -1;	  MVY_HALF = 1;   MVY_QRTER = 0;	  break;
        case 38: MVX_HALF = 0;  MVX_QRTER = 0;	  MVY_HALF = 1;   MVY_QRTER = 0;		break;
        case 39: MVX_HALF = 0;  MVX_QRTER = 1;		MVY_HALF = 1;   MVY_QRTER = 0;	  break;
        case 40: MVX_HALF = 1;  MVX_QRTER = 0;		MVY_HALF = 1;   MVY_QRTER = 0;	  break;
        case 41: MVX_HALF = 1;  MVX_QRTER = 1;		MVY_HALF = 1;   MVY_QRTER = 0;	  break;

        case 42: MVX_HALF = -1; MVX_QRTER = -1;	  MVY_HALF = 1;   MVY_QRTER = 1;		break;
        case 43: MVX_HALF = -1; MVX_QRTER = 0;		MVY_HALF = 1;   MVY_QRTER = 1;		break;
        case 44: MVX_HALF = 0;  MVX_QRTER = -1;	  MVY_HALF = 1;   MVY_QRTER = 1;		break;
        case 45: MVX_HALF = 0;  MVX_QRTER = 0;	  MVY_HALF = 1;   MVY_QRTER = 1;	  break;
        case 46: MVX_HALF = 0;  MVX_QRTER = 1;		MVY_HALF = 1;   MVY_QRTER = 1;		break;
        case 47: MVX_HALF = 1;  MVX_QRTER = 0;		MVY_HALF = 1;   MVY_QRTER = 1;		break;
        case 48: MVX_HALF = 1;  MVX_QRTER = 1;		MVY_HALF = 1;   MVY_QRTER = 1;		break;
        default: MVX_HALF = 0;  MVX_QRTER = 0;		MVY_HALF = 0;   MVY_QRTER = 0;		break;
      }


      //end of neural network code

      break;



    case MESEARCH_SELECTIVE:
      xTZSearchSelective( pcCU, pcPatternKey, piRefY, iRefStride, pcMvSrchRngLT, pcMvSrchRngRB, rcMv, ruiSAD, pIntegerMv2Nx2NPred );
      break;

    case MESEARCH_DIAMOND_ENHANCED:
      xTZSearch( pcCU, pcPatternKey, piRefY, iRefStride, pcMvSrchRngLT, pcMvSrchRngRB, rcMv, ruiSAD, pIntegerMv2Nx2NPred, true );
      break;

    case MESEARCH_FULL: // shouldn't get here.
    default:
      break;
  }
}


Void TEncSearch::xTZSearch( const TComDataCU* const pcCU,
                            const TComPattern* const pcPatternKey,
                            const Pel* const         piRefY,
                            const Int                iRefStride,
                            const TComMv* const      pcMvSrchRngLT,
                            const TComMv* const      pcMvSrchRngRB,
                            TComMv&                  rcMv,
                            Distortion&              ruiSAD,
                            const TComMv* const      pIntegerMv2Nx2NPred,
                            const Bool               bExtendedSettings)
{
  const Bool bUseAdaptiveRaster                      = bExtendedSettings;
  const Int  iRaster                                 = 5;
  const Bool bTestOtherPredictedMV                   = bExtendedSettings;
  const Bool bTestZeroVector                         = true;
  const Bool bTestZeroVectorStart                    = bExtendedSettings;
  const Bool bTestZeroVectorStop                     = false;
  const Bool bFirstSearchDiamond                     = true;  // 1 = xTZ8PointDiamondSearch   0 = xTZ8PointSquareSearch
  const Bool bFirstCornersForDiamondDist1            = bExtendedSettings;
  const Bool bFirstSearchStop                        = m_pcEncCfg->getFastMEAssumingSmootherMVEnabled();
  const UInt uiFirstSearchRounds                     = 3;     // first search stop X rounds after best match (must be >=1)
  const Bool bEnableRasterSearch                     = true;
  const Bool bAlwaysRasterSearch                     = bExtendedSettings;  // true: BETTER but factor 2 slower
  const Bool bRasterRefinementEnable                 = false; // enable either raster refinement or star refinement
  const Bool bRasterRefinementDiamond                = false; // 1 = xTZ8PointDiamondSearch   0 = xTZ8PointSquareSearch
  const Bool bRasterRefinementCornersForDiamondDist1 = bExtendedSettings;
  const Bool bStarRefinementEnable                   = true;  // enable either star refinement or raster refinement
  const Bool bStarRefinementDiamond                  = true;  // 1 = xTZ8PointDiamondSearch   0 = xTZ8PointSquareSearch
  const Bool bStarRefinementCornersForDiamondDist1   = bExtendedSettings;
  const Bool bStarRefinementStop                     = false;
  const UInt uiStarRefinementRounds                  = 2;  // star refinement stop X rounds after best match (must be >=1)
  const Bool bNewZeroNeighbourhoodTest               = bExtendedSettings;

  UInt uiSearchRange = m_iSearchRange;
  pcCU->clipMv( rcMv );
#if ME_ENABLE_ROUNDING_OF_MVS
  rcMv.divideByPowerOf2(2);
#else
  rcMv >>= 2;
#endif
  // init TZSearchStruct
  IntTZSearchStruct cStruct;
  cStruct.iYStride    = iRefStride;
  cStruct.piRefY      = piRefY;
  cStruct.uiBestSad   = MAX_UINT;

  // set rcMv (Median predictor) as start point and as best point
  xTZSearchHelp( pcPatternKey, cStruct, rcMv.getHor(), rcMv.getVer(), 0, 0 );

  // test whether one of PRED_A, PRED_B, PRED_C MV is better start point than Median predictor
  if ( bTestOtherPredictedMV )
  {
    for ( UInt index = 0; index < NUM_MV_PREDICTORS; index++ )
    {
      TComMv cMv = m_acMvPredictors[index];
      pcCU->clipMv( cMv );
#if ME_ENABLE_ROUNDING_OF_MVS
      cMv.divideByPowerOf2(2);
#else
      cMv >>= 2;
#endif
      if (cMv != rcMv && (cMv.getHor() != cStruct.iBestX && cMv.getVer() != cStruct.iBestY))
      {
        // only test cMV if not obviously previously tested.
        xTZSearchHelp( pcPatternKey, cStruct, cMv.getHor(), cMv.getVer(), 0, 0 );
      }
    }
  }

  // test whether zero Mv is better start point than Median predictor
  if ( bTestZeroVector )
  {
    if ((rcMv.getHor() != 0 || rcMv.getVer() != 0) &&
        (0 != cStruct.iBestX || 0 != cStruct.iBestY))
    {
      // only test 0-vector if not obviously previously tested.
      xTZSearchHelp( pcPatternKey, cStruct, 0, 0, 0, 0 );
    }
  }

  Int   iSrchRngHorLeft   = pcMvSrchRngLT->getHor();
  Int   iSrchRngHorRight  = pcMvSrchRngRB->getHor();
  Int   iSrchRngVerTop    = pcMvSrchRngLT->getVer();
  Int   iSrchRngVerBottom = pcMvSrchRngRB->getVer();

  if (pIntegerMv2Nx2NPred != 0)
  {
    TComMv integerMv2Nx2NPred = *pIntegerMv2Nx2NPred;
    integerMv2Nx2NPred <<= 2;
    pcCU->clipMv( integerMv2Nx2NPred );
#if ME_ENABLE_ROUNDING_OF_MVS
    integerMv2Nx2NPred.divideByPowerOf2(2);
#else
    integerMv2Nx2NPred >>= 2;
#endif
    if ((rcMv != integerMv2Nx2NPred) &&
        (integerMv2Nx2NPred.getHor() != cStruct.iBestX || integerMv2Nx2NPred.getVer() != cStruct.iBestY))
    {
      // only test integerMv2Nx2NPred if not obviously previously tested.
      xTZSearchHelp(pcPatternKey, cStruct, integerMv2Nx2NPred.getHor(), integerMv2Nx2NPred.getVer(), 0, 0);
    }

    // reset search range
    TComMv cMvSrchRngLT;
    TComMv cMvSrchRngRB;
    Int iSrchRng = m_iSearchRange;
    TComMv currBestMv(cStruct.iBestX, cStruct.iBestY );
    currBestMv <<= 2;
    xSetSearchRange( pcCU, currBestMv, iSrchRng, cMvSrchRngLT, cMvSrchRngRB );
    iSrchRngHorLeft   = cMvSrchRngLT.getHor();
    iSrchRngHorRight  = cMvSrchRngRB.getHor();
    iSrchRngVerTop    = cMvSrchRngLT.getVer();
    iSrchRngVerBottom = cMvSrchRngRB.getVer();
  }

  // start search
  Int  iDist = 0;
  Int  iStartX = cStruct.iBestX;
  Int  iStartY = cStruct.iBestY;

  const Bool bBestCandidateZero = (cStruct.iBestX == 0) && (cStruct.iBestY == 0);

  // first search around best position up to now.
  // The following works as a "subsampled/log" window search around the best candidate
  for (iDist = 1; iDist <= (Int)uiSearchRange; iDist *= 2)
	  
  {
    if ( bFirstSearchDiamond == 1 )
    {
      xTZ8PointDiamondSearch ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist, bFirstCornersForDiamondDist1 );
    }
    else
    {
      xTZ8PointSquareSearch  ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist );
    }

    if ( bFirstSearchStop && ( cStruct.uiBestRound >= uiFirstSearchRounds ) ) // stop criterion
    {
      break;
    }
  }

  if (!bNewZeroNeighbourhoodTest)
  {
    // test whether zero Mv is a better start point than Median predictor
    if ( bTestZeroVectorStart && ((cStruct.iBestX != 0) || (cStruct.iBestY != 0)) )
    {
      xTZSearchHelp( pcPatternKey, cStruct, 0, 0, 0, 0 );
      if ( (cStruct.iBestX == 0) && (cStruct.iBestY == 0) )
      {
        // test its neighborhood
        for ( iDist = 1; iDist <= (Int)uiSearchRange; iDist*=2 )
        {
          xTZ8PointDiamondSearch( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, 0, 0, iDist, false );
          if ( bTestZeroVectorStop && (cStruct.uiBestRound > 0) ) // stop criterion
          {
            break;
          }
        }
      }
    }
  }
  else
  {
    // Test also zero neighbourhood but with half the range
    // It was reported that the original (above) search scheme using bTestZeroVectorStart did not
    // make sense since one would have already checked the zero candidate earlier
    // and thus the conditions for that test would have not been satisfied
    if (bTestZeroVectorStart == true && bBestCandidateZero != true)
    {
      for ( iDist = 1; iDist <= ((Int)uiSearchRange >> 1); iDist*=2 )
      {
        xTZ8PointDiamondSearch( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, 0, 0, iDist, false );
        if ( bTestZeroVectorStop && (cStruct.uiBestRound > 2) ) // stop criterion
        {
          break;
        }
      }
    }
  }

  // calculate only 2 missing points instead 8 points if cStruct.uiBestDistance == 1
  if ( cStruct.uiBestDistance == 1 )
  {
    cStruct.uiBestDistance = 0;
    xTZ2PointSearch( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB );
  }

  // raster search if distance is too big
  if (bUseAdaptiveRaster)
  {
    int iWindowSize = iRaster;
    Int   iSrchRngRasterLeft   = iSrchRngHorLeft;
    Int   iSrchRngRasterRight  = iSrchRngHorRight;
    Int   iSrchRngRasterTop    = iSrchRngVerTop;
    Int   iSrchRngRasterBottom = iSrchRngVerBottom;

    if (!(bEnableRasterSearch && ( ((Int)(cStruct.uiBestDistance) > iRaster))))
    {
      iWindowSize ++;
      iSrchRngRasterLeft /= 2;
      iSrchRngRasterRight /= 2;
      iSrchRngRasterTop /= 2;
      iSrchRngRasterBottom /= 2;
    }
    cStruct.uiBestDistance = iWindowSize;
    for ( iStartY = iSrchRngRasterTop; iStartY <= iSrchRngRasterBottom; iStartY += iWindowSize )
    {
      for ( iStartX = iSrchRngRasterLeft; iStartX <= iSrchRngRasterRight; iStartX += iWindowSize )
      {
        xTZSearchHelp( pcPatternKey, cStruct, iStartX, iStartY, 0, iWindowSize );
      }
    }
  }
  else
  {
    if ( bEnableRasterSearch && ( ((Int)(cStruct.uiBestDistance) > iRaster) || bAlwaysRasterSearch ) )
    {
      cStruct.uiBestDistance = iRaster;
      for ( iStartY = iSrchRngVerTop; iStartY <= iSrchRngVerBottom; iStartY += iRaster )
      {
        for ( iStartX = iSrchRngHorLeft; iStartX <= iSrchRngHorRight; iStartX += iRaster )
        {
          xTZSearchHelp( pcPatternKey, cStruct, iStartX, iStartY, 0, iRaster );
        }
      }
    }
  }

  // raster refinement

  if ( bRasterRefinementEnable && cStruct.uiBestDistance > 0 )
  {
    while ( cStruct.uiBestDistance > 0 )
    {
      iStartX = cStruct.iBestX;
      iStartY = cStruct.iBestY;
      if ( cStruct.uiBestDistance > 1 )
      {
        iDist = cStruct.uiBestDistance >>= 1;
        if ( bRasterRefinementDiamond == 1 )
        {
          xTZ8PointDiamondSearch ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist, bRasterRefinementCornersForDiamondDist1 );
        }
        else
        {
          xTZ8PointSquareSearch  ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist );
        }
      }

      // calculate only 2 missing points instead 8 points if cStruct.uiBestDistance == 1
      if ( cStruct.uiBestDistance == 1 )
      {
        cStruct.uiBestDistance = 0;
        if ( cStruct.ucPointNr != 0 )
        {
          xTZ2PointSearch( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB );
        }
      }
    }
  }

  // star refinement
  if ( bStarRefinementEnable && cStruct.uiBestDistance > 0 )
  {
    while ( cStruct.uiBestDistance > 0 )
    {
      iStartX = cStruct.iBestX;
      iStartY = cStruct.iBestY;
      cStruct.uiBestDistance = 0;
      cStruct.ucPointNr = 0;
      for ( iDist = 1; iDist < (Int)uiSearchRange + 1; iDist*=2 )
      {
        if ( bStarRefinementDiamond == 1 )
        {
          xTZ8PointDiamondSearch ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist, bStarRefinementCornersForDiamondDist1 );
        }
        else
        {
          xTZ8PointSquareSearch  ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist );
        }
        if ( bStarRefinementStop && (cStruct.uiBestRound >= uiStarRefinementRounds) ) // stop criterion
        {
          break;
        }
      }

      // calculate only 2 missing points instead 8 points if cStrukt.uiBestDistance == 1
      if ( cStruct.uiBestDistance == 1 )
      {
        cStruct.uiBestDistance = 0;
        if ( cStruct.ucPointNr != 0 )
        {
          xTZ2PointSearch( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB );
        }
      }
    }
  }


  // EMI: BIG DIFFERENCE!
  // getting the 8 SAD points
  iDist = 1;
  iStartX = cStruct.iBestX;
  iStartY = cStruct.iBestY;
  index_ref = counter_i;
  
  xTZ8PointSquareSearch(pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist);

  iDist = 2;
  xTZ8PointSquareSearch2(pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist);

  // write out best match
  rcMv.set( cStruct.iBestX, cStruct.iBestY );
  ruiSAD = cStruct.uiBestSad - m_pcRdCost->getCostOfVectorWithPredictor( cStruct.iBestX, cStruct.iBestY );
}


Void TEncSearch::xTZSearchSelective( const TComDataCU* const   pcCU,
                                     const TComPattern* const  pcPatternKey,
                                     const Pel* const          piRefY,
                                     const Int                 iRefStride,
                                     const TComMv* const       pcMvSrchRngLT,
                                     const TComMv* const       pcMvSrchRngRB,
                                     TComMv                   &rcMv,
                                     Distortion               &ruiSAD,
                                     const TComMv* const       pIntegerMv2Nx2NPred )
{
  const Bool bTestOtherPredictedMV    = true;
  const Bool bTestZeroVector          = true;
  const Bool bEnableRasterSearch      = true;
  const Bool bAlwaysRasterSearch      = false;  // 1: BETTER but factor 15x slower
  const Bool bStarRefinementEnable    = true;   // enable either star refinement or raster refinement
  const Bool bStarRefinementDiamond   = true;   // 1 = xTZ8PointDiamondSearch   0 = xTZ8PointSquareSearch
  const Bool bStarRefinementStop      = false;
  const UInt uiStarRefinementRounds   = 2;  // star refinement stop X rounds after best match (must be >=1)
  const UInt uiSearchRange            = m_iSearchRange;
  const Int  uiSearchRangeInitial     = m_iSearchRange >> 2;
  const Int  uiSearchStep             = 4;
  const Int  iMVDistThresh            = 8;

  Int   iSrchRngHorLeft         = pcMvSrchRngLT->getHor();
  Int   iSrchRngHorRight        = pcMvSrchRngRB->getHor();
  Int   iSrchRngVerTop          = pcMvSrchRngLT->getVer();
  Int   iSrchRngVerBottom       = pcMvSrchRngRB->getVer();
  Int   iFirstSrchRngHorLeft    = 0;
  Int   iFirstSrchRngHorRight   = 0;
  Int   iFirstSrchRngVerTop     = 0;
  Int   iFirstSrchRngVerBottom  = 0;
  Int   iStartX                 = 0;
  Int   iStartY                 = 0;
  Int   iBestX                  = 0;
  Int   iBestY                  = 0;
  Int   iDist                   = 0;

  pcCU->clipMv( rcMv );
#if ME_ENABLE_ROUNDING_OF_MVS
  rcMv.divideByPowerOf2(2);
#else
  rcMv >>= 2;
#endif
  // init TZSearchStruct
  IntTZSearchStruct cStruct;
  cStruct.iYStride    = iRefStride;
  cStruct.piRefY      = piRefY;
  cStruct.uiBestSad   = MAX_UINT;
  cStruct.iBestX = 0;
  cStruct.iBestY = 0;


  // set rcMv (Median predictor) as start point and as best point
  xTZSearchHelp( pcPatternKey, cStruct, rcMv.getHor(), rcMv.getVer(), 0, 0 );

  // test whether one of PRED_A, PRED_B, PRED_C MV is better start point than Median predictor
  if ( bTestOtherPredictedMV )
  {
    for ( UInt index = 0; index < NUM_MV_PREDICTORS; index++ )
    {
      TComMv cMv = m_acMvPredictors[index];
      pcCU->clipMv( cMv );
#if ME_ENABLE_ROUNDING_OF_MVS
      cMv.divideByPowerOf2(2);
#else
      cMv >>= 2;
#endif
      xTZSearchHelp( pcPatternKey, cStruct, cMv.getHor(), cMv.getVer(), 0, 0 );
    }
  }

  // test whether zero Mv is better start point than Median predictor
  if ( bTestZeroVector )
  {
    xTZSearchHelp( pcPatternKey, cStruct, 0, 0, 0, 0 );
  }

  if ( pIntegerMv2Nx2NPred != 0 )
  {
    TComMv integerMv2Nx2NPred = *pIntegerMv2Nx2NPred;
    integerMv2Nx2NPred <<= 2;
    pcCU->clipMv( integerMv2Nx2NPred );
#if ME_ENABLE_ROUNDING_OF_MVS
    integerMv2Nx2NPred.divideByPowerOf2(2);
#else
    integerMv2Nx2NPred >>= 2;
#endif
    xTZSearchHelp(pcPatternKey, cStruct, integerMv2Nx2NPred.getHor(), integerMv2Nx2NPred.getVer(), 0, 0);

    // reset search range
    TComMv cMvSrchRngLT;
    TComMv cMvSrchRngRB;
    Int iSrchRng = m_iSearchRange;
    TComMv currBestMv(cStruct.iBestX, cStruct.iBestY );
    currBestMv <<= 2;
    xSetSearchRange( pcCU, currBestMv, iSrchRng, cMvSrchRngLT, cMvSrchRngRB );
    iSrchRngHorLeft   = cMvSrchRngLT.getHor();
    iSrchRngHorRight  = cMvSrchRngRB.getHor();
    iSrchRngVerTop    = cMvSrchRngLT.getVer();
    iSrchRngVerBottom = cMvSrchRngRB.getVer();
  }

  // Initial search
  iBestX = cStruct.iBestX;
  iBestY = cStruct.iBestY; 
  iFirstSrchRngHorLeft    = ((iBestX - uiSearchRangeInitial) > iSrchRngHorLeft)   ? (iBestX - uiSearchRangeInitial) : iSrchRngHorLeft;
  iFirstSrchRngVerTop     = ((iBestY - uiSearchRangeInitial) > iSrchRngVerTop)    ? (iBestY - uiSearchRangeInitial) : iSrchRngVerTop;
  iFirstSrchRngHorRight   = ((iBestX + uiSearchRangeInitial) < iSrchRngHorRight)  ? (iBestX + uiSearchRangeInitial) : iSrchRngHorRight;  
  iFirstSrchRngVerBottom  = ((iBestY + uiSearchRangeInitial) < iSrchRngVerBottom) ? (iBestY + uiSearchRangeInitial) : iSrchRngVerBottom;    

  for ( iStartY = iFirstSrchRngVerTop; iStartY <= iFirstSrchRngVerBottom; iStartY += uiSearchStep )
  {
    for ( iStartX = iFirstSrchRngHorLeft; iStartX <= iFirstSrchRngHorRight; iStartX += uiSearchStep )
    {
      xTZSearchHelp( pcPatternKey, cStruct, iStartX, iStartY, 0, 0 );
      xTZ8PointDiamondSearch ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, 1, false );
      xTZ8PointDiamondSearch ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, 2, false );
    }
  }

  Int iMaxMVDistToPred = (abs(cStruct.iBestX - iBestX) > iMVDistThresh || abs(cStruct.iBestY - iBestY) > iMVDistThresh);

  //full search with early exit if MV is distant from predictors
  if ( bEnableRasterSearch && (iMaxMVDistToPred || bAlwaysRasterSearch) )
  {
    for ( iStartY = iSrchRngVerTop; iStartY <= iSrchRngVerBottom; iStartY += 1 )
    {
      for ( iStartX = iSrchRngHorLeft; iStartX <= iSrchRngHorRight; iStartX += 1 )
      {
        xTZSearchHelp( pcPatternKey, cStruct, iStartX, iStartY, 0, 1 );
      }
    }
  }
  //Smaller MV, refine around predictor
  else if ( bStarRefinementEnable && cStruct.uiBestDistance > 0 )
  {
    // start refinement
    while ( cStruct.uiBestDistance > 0 )
    {
      iStartX = cStruct.iBestX;
      iStartY = cStruct.iBestY;
      cStruct.uiBestDistance = 0;
      cStruct.ucPointNr = 0;
      for ( iDist = 1; iDist < (Int)uiSearchRange + 1; iDist*=2 )
      {
        if ( bStarRefinementDiamond == 1 )
        {
          xTZ8PointDiamondSearch ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist, false );
        }
        else
        {
          xTZ8PointSquareSearch  ( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB, iStartX, iStartY, iDist );
        }
        if ( bStarRefinementStop && (cStruct.uiBestRound >= uiStarRefinementRounds) ) // stop criterion
        {
          break;
        }
      }

      // calculate only 2 missing points instead 8 points if cStrukt.uiBestDistance == 1
      if ( cStruct.uiBestDistance == 1 )
      {
        cStruct.uiBestDistance = 0;
        if ( cStruct.ucPointNr != 0 )
        {
          xTZ2PointSearch( pcPatternKey, cStruct, pcMvSrchRngLT, pcMvSrchRngRB );
        }
      }
    }
  }

  // write out best match
  rcMv.set( cStruct.iBestX, cStruct.iBestY );
  ruiSAD = cStruct.uiBestSad - m_pcRdCost->getCostOfVectorWithPredictor( cStruct.iBestX, cStruct.iBestY );

}


Void TEncSearch::xPatternSearchFracDIF(
                                       Bool         bIsLosslessCoded,
                                       TComPattern* pcPatternKey,
                                       Pel*         piRefY,
                                       Int          iRefStride,
                                       TComMv*      pcMvInt,
                                       TComMv&      rcMvHalf,
                                       TComMv&      rcMvQter,
                                       Distortion&  ruiCost
                                      )
{
  //  Reference pattern initialization (integer scale)
	
  TComPattern cPatternRoi;
  Int         iOffset    = pcMvInt->getHor() + pcMvInt->getVer() * iRefStride;
  cPatternRoi.initPattern(piRefY + iOffset,
                          pcPatternKey->getROIYWidth(),
                          pcPatternKey->getROIYHeight(),
                          iRefStride,
                          pcPatternKey->getBitDepthY());

  //  Half-pel refinement
  xExtDIFUpSamplingH ( &cPatternRoi );

  rcMvHalf = *pcMvInt;   rcMvHalf <<= 1;    // for mv-cost
  TComMv baseRefMv(0, 0);
  ruiCost = xPatternRefinement( pcPatternKey, baseRefMv, 2, rcMvHalf, !bIsLosslessCoded );

  m_pcRdCost->setCostScale( 0 );

  xExtDIFUpSamplingQ ( &cPatternRoi, rcMvHalf );
  baseRefMv = rcMvHalf;
  baseRefMv <<= 1;

  rcMvQter = *pcMvInt;   rcMvQter <<= 1;    // for mv-cost
  rcMvQter += rcMvHalf;  rcMvQter <<= 1;
  ruiCost = xPatternRefinement( pcPatternKey, baseRefMv, 1, rcMvQter, !bIsLosslessCoded );
}


//! encode residual and calculate rate-distortion for a CU block
Void TEncSearch::encodeResAndCalcRdInterCU( TComDataCU* pcCU, TComYuv* pcYuvOrg, TComYuv* pcYuvPred,
                                            TComYuv* pcYuvResi, TComYuv* pcYuvResiBest, TComYuv* pcYuvRec,
                                            Bool bSkipResidual DEBUG_STRING_FN_DECLARE(sDebug) )
{
  assert ( !pcCU->isIntra(0) );

  const UInt cuWidthPixels      = pcCU->getWidth ( 0 );
  const UInt cuHeightPixels     = pcCU->getHeight( 0 );
  const Int  numValidComponents = pcCU->getPic()->getNumberValidComponents();
  const TComSPS &sps=*(pcCU->getSlice()->getSPS());

  // The pcCU is not marked as skip-mode at this point, and its m_pcTrCoeff, m_pcArlCoeff, m_puhCbf, m_puhTrIdx will all be 0.
  // due to prior calls to TComDataCU::initEstData(  );

  if ( bSkipResidual ) //  No residual coding : SKIP mode
  {
    pcCU->setSkipFlagSubParts( true, 0, pcCU->getDepth(0) );

    pcYuvResi->clear();

    pcYuvPred->copyToPartYuv( pcYuvRec, 0 );
    Distortion distortion = 0;

    for (Int comp=0; comp < numValidComponents; comp++)
    {
      const ComponentID compID=ComponentID(comp);
      const UInt csx=pcYuvOrg->getComponentScaleX(compID);
      const UInt csy=pcYuvOrg->getComponentScaleY(compID);
      distortion += m_pcRdCost->getDistPart( sps.getBitDepth(toChannelType(compID)), pcYuvRec->getAddr(compID), pcYuvRec->getStride(compID), pcYuvOrg->getAddr(compID),
                                               pcYuvOrg->getStride(compID), cuWidthPixels >> csx, cuHeightPixels >> csy, compID);
    }

    m_pcRDGoOnSbacCoder->load(m_pppcRDSbacCoder[pcCU->getDepth(0)][CI_CURR_BEST]);
    m_pcEntropyCoder->resetBits();

    if (pcCU->getSlice()->getPPS()->getTransquantBypassEnableFlag())
    {
      m_pcEntropyCoder->encodeCUTransquantBypassFlag(pcCU, 0, true);
    }

    m_pcEntropyCoder->encodeSkipFlag(pcCU, 0, true);
    m_pcEntropyCoder->encodeMergeIndex( pcCU, 0, true );

    UInt uiBits = m_pcEntropyCoder->getNumberOfWrittenBits();
    pcCU->getTotalBits()       = uiBits;
    pcCU->getTotalDistortion() = distortion;
    pcCU->getTotalCost()       = m_pcRdCost->calcRdCost( uiBits, distortion );

    m_pcRDGoOnSbacCoder->store(m_pppcRDSbacCoder[pcCU->getDepth(0)][CI_TEMP_BEST]);

#if DEBUG_STRING
    pcYuvResiBest->clear(); // Clear the residual image, if we didn't code it.
    for(UInt i=0; i<MAX_NUM_COMPONENT+1; i++)
    {
      sDebug+=debug_reorder_data_inter_token[i];
    }
#endif

    return;
  }

  //  Residual coding.

   pcYuvResi->subtract( pcYuvOrg, pcYuvPred, 0, cuWidthPixels );

  TComTURecurse tuLevel0(pcCU, 0);

  Double     nonZeroCost       = 0;
  UInt       nonZeroBits       = 0;
  Distortion nonZeroDistortion = 0;
  Distortion zeroDistortion    = 0;

  m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ pcCU->getDepth( 0 ) ][ CI_CURR_BEST ] );

  xEstimateInterResidualQT( pcYuvResi,  nonZeroCost, nonZeroBits, nonZeroDistortion, &zeroDistortion, tuLevel0 DEBUG_STRING_PASS_INTO(sDebug) );

  // -------------------------------------------------------
  // set the coefficients in the pcCU, and also calculates the residual data.
  // If a block full of 0's is efficient, then just use 0's.
  // The costs at this point do not include header bits.

  m_pcEntropyCoder->resetBits();
  m_pcEntropyCoder->encodeQtRootCbfZero( );
  const UInt   zeroResiBits = m_pcEntropyCoder->getNumberOfWrittenBits();
  const Double zeroCost     = (pcCU->isLosslessCoded( 0 )) ? (nonZeroCost+1) : (m_pcRdCost->calcRdCost( zeroResiBits, zeroDistortion ));

  if ( zeroCost < nonZeroCost || !pcCU->getQtRootCbf(0) )
  {
    const UInt uiQPartNum = tuLevel0.GetAbsPartIdxNumParts();
    ::memset( pcCU->getTransformIdx()     , 0, uiQPartNum * sizeof(UChar) );
    for (Int comp=0; comp < numValidComponents; comp++)
    {
      const ComponentID component = ComponentID(comp);
      ::memset( pcCU->getCbf( component ) , 0, uiQPartNum * sizeof(UChar) );
      ::memset( pcCU->getCrossComponentPredictionAlpha(component), 0, ( uiQPartNum * sizeof(SChar) ) );
    }
    static const UInt useTS[MAX_NUM_COMPONENT]={0,0,0};
    pcCU->setTransformSkipSubParts ( useTS, 0, pcCU->getDepth(0) );
#if DEBUG_STRING
    sDebug.clear();
    for(UInt i=0; i<MAX_NUM_COMPONENT+1; i++)
    {
      sDebug+=debug_reorder_data_inter_token[i];
    }
#endif
  }
  else
  {
    xSetInterResidualQTData( NULL, false, tuLevel0); // Call first time to set coefficients.
  }

  // all decisions now made. Fully encode the CU, including the headers:
  m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[pcCU->getDepth(0)][CI_CURR_BEST] );

  UInt finalBits = 0;
  xAddSymbolBitsInter( pcCU, finalBits );
  // we've now encoded the pcCU, and so have a valid bit cost

  if ( !pcCU->getQtRootCbf( 0 ) )
  {
    pcYuvResiBest->clear(); // Clear the residual image, if we didn't code it.
  }
  else
  {
    xSetInterResidualQTData( pcYuvResiBest, true, tuLevel0 ); // else set the residual image data pcYUVResiBest from the various temp images.
  }
  m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ pcCU->getDepth( 0 ) ][ CI_TEMP_BEST ] );

  pcYuvRec->addClip ( pcYuvPred, pcYuvResiBest, 0, cuWidthPixels, sps.getBitDepths() );

  // update with clipped distortion and cost (previously unclipped reconstruction values were used)

  Distortion finalDistortion = 0;
  for(Int comp=0; comp<numValidComponents; comp++)
  {
    const ComponentID compID=ComponentID(comp);
    finalDistortion += m_pcRdCost->getDistPart( sps.getBitDepth(toChannelType(compID)), pcYuvRec->getAddr(compID ), pcYuvRec->getStride(compID ), pcYuvOrg->getAddr(compID ), pcYuvOrg->getStride(compID), cuWidthPixels >> pcYuvOrg->getComponentScaleX(compID), cuHeightPixels >> pcYuvOrg->getComponentScaleY(compID), compID);
  }

  pcCU->getTotalBits()       = finalBits;
  pcCU->getTotalDistortion() = finalDistortion;
  pcCU->getTotalCost()       = m_pcRdCost->calcRdCost( finalBits, finalDistortion );
}



Void TEncSearch::xEstimateInterResidualQT( TComYuv    *pcResi,
                                           Double     &rdCost,
                                           UInt       &ruiBits,
                                           Distortion &ruiDist,
                                           Distortion *puiZeroDist,
                                           TComTU     &rTu
                                           DEBUG_STRING_FN_DECLARE(sDebug) )
{
  TComDataCU *pcCU        = rTu.getCU();
  const UInt uiAbsPartIdx = rTu.GetAbsPartIdxTU();
  const UInt uiDepth      = rTu.GetTransformDepthTotal();
  const UInt uiTrMode     = rTu.GetTransformDepthRel();
  const UInt subTUDepth   = uiTrMode + 1;
  const UInt numValidComp = pcCU->getPic()->getNumberValidComponents();
  DEBUG_STRING_NEW(sSingleStringComp[MAX_NUM_COMPONENT])

  assert( pcCU->getDepth( 0 ) == pcCU->getDepth( uiAbsPartIdx ) );
  const UInt uiLog2TrSize = rTu.GetLog2LumaTrSize();

  UInt SplitFlag = ((pcCU->getSlice()->getSPS()->getQuadtreeTUMaxDepthInter() == 1) && pcCU->isInter(uiAbsPartIdx) && ( pcCU->getPartitionSize(uiAbsPartIdx) != SIZE_2Nx2N ));
#if DEBUG_STRING
  const Int debugPredModeMask = DebugStringGetPredModeMask(pcCU->getPredictionMode(uiAbsPartIdx));
#endif

  Bool bCheckFull;

  if ( SplitFlag && uiDepth == pcCU->getDepth(uiAbsPartIdx) && ( uiLog2TrSize >  pcCU->getQuadtreeTULog2MinSizeInCU(uiAbsPartIdx) ) )
  {
    bCheckFull = false;
  }
  else
  {
    bCheckFull =  ( uiLog2TrSize <= pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() );
  }

  const Bool bCheckSplit  = ( uiLog2TrSize >  pcCU->getQuadtreeTULog2MinSizeInCU(uiAbsPartIdx) );

  assert( bCheckFull || bCheckSplit );

  // code full block
  Double     dSingleCost = MAX_DOUBLE;
  UInt       uiSingleBits                                                                                                        = 0;
  Distortion uiSingleDistComp            [MAX_NUM_COMPONENT][2/*0 = top (or whole TU for non-4:2:2) sub-TU, 1 = bottom sub-TU*/] = {{0,0},{0,0},{0,0}};
  Distortion uiSingleDist                                                                                                        = 0;
  TCoeff     uiAbsSum                    [MAX_NUM_COMPONENT][2/*0 = top (or whole TU for non-4:2:2) sub-TU, 1 = bottom sub-TU*/] = {{0,0},{0,0},{0,0}};
  UInt       uiBestTransformMode         [MAX_NUM_COMPONENT][2/*0 = top (or whole TU for non-4:2:2) sub-TU, 1 = bottom sub-TU*/] = {{0,0},{0,0},{0,0}};
  //  Stores the best explicit RDPCM mode for a TU encoded without split
  UInt       bestExplicitRdpcmModeUnSplit[MAX_NUM_COMPONENT][2/*0 = top (or whole TU for non-4:2:2) sub-TU, 1 = bottom sub-TU*/] = {{3,3}, {3,3}, {3,3}};
  SChar      bestCrossCPredictionAlpha   [MAX_NUM_COMPONENT][2/*0 = top (or whole TU for non-4:2:2) sub-TU, 1 = bottom sub-TU*/] = {{0,0},{0,0},{0,0}};

  m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_ROOT ] );

  if( bCheckFull )
  {
    Double minCost[MAX_NUM_COMPONENT][2/*0 = top (or whole TU for non-4:2:2) sub-TU, 1 = bottom sub-TU*/];
    Bool checkTransformSkip[MAX_NUM_COMPONENT];
    pcCU->setTrIdxSubParts( uiTrMode, uiAbsPartIdx, uiDepth );

    m_pcEntropyCoder->resetBits();

    memset( m_pTempPel, 0, sizeof( Pel ) * rTu.getRect(COMPONENT_Y).width * rTu.getRect(COMPONENT_Y).height ); // not necessary needed for inside of recursion (only at the beginning)

    const UInt uiQTTempAccessLayer = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrSize;
    TCoeff *pcCoeffCurr[MAX_NUM_COMPONENT];
#if ADAPTIVE_QP_SELECTION
    TCoeff *pcArlCoeffCurr[MAX_NUM_COMPONENT];
#endif

    for(UInt i=0; i<numValidComp; i++)
    {
      minCost[i][0] = MAX_DOUBLE;
      minCost[i][1] = MAX_DOUBLE;
    }

    Pel crossCPredictedResidualBuffer[ MAX_TU_SIZE * MAX_TU_SIZE ];

    for(UInt i=0; i<numValidComp; i++)
    {
      checkTransformSkip[i]=false;
      const ComponentID compID=ComponentID(i);
      const Int channelBitDepth=pcCU->getSlice()->getSPS()->getBitDepth(toChannelType(compID));
      pcCoeffCurr[compID]    = m_ppcQTTempCoeff[compID][uiQTTempAccessLayer] + rTu.getCoefficientOffset(compID);
#if ADAPTIVE_QP_SELECTION
      pcArlCoeffCurr[compID] = m_ppcQTTempArlCoeff[compID ][uiQTTempAccessLayer] +  rTu.getCoefficientOffset(compID);
#endif

      if(rTu.ProcessComponentSection(compID))
      {
        const QpParam cQP(*pcCU, compID);

        checkTransformSkip[compID] = pcCU->getSlice()->getPPS()->getUseTransformSkip() &&
                                     TUCompRectHasAssociatedTransformSkipFlag(rTu.getRect(compID), pcCU->getSlice()->getPPS()->getPpsRangeExtension().getLog2MaxTransformSkipBlockSize()) &&
                                     (!pcCU->isLosslessCoded(0));

        const Bool splitIntoSubTUs = rTu.getRect(compID).width != rTu.getRect(compID).height;

        TComTURecurse TUIterator(rTu, false, (splitIntoSubTUs ? TComTU::VERTICAL_SPLIT : TComTU::DONT_SPLIT), true, compID);

        const UInt partIdxesPerSubTU = TUIterator.GetAbsPartIdxNumParts(compID);

        do
        {
          const UInt           subTUIndex             = TUIterator.GetSectionNumber();
          const UInt           subTUAbsPartIdx        = TUIterator.GetAbsPartIdxTU(compID);
          const TComRectangle &tuCompRect             = TUIterator.getRect(compID);
          const UInt           subTUBufferOffset      = tuCompRect.width * tuCompRect.height * subTUIndex;

                TCoeff        *currentCoefficients    = pcCoeffCurr[compID] + subTUBufferOffset;
#if ADAPTIVE_QP_SELECTION
                TCoeff        *currentARLCoefficients = pcArlCoeffCurr[compID] + subTUBufferOffset;
#endif
          const Bool isCrossCPredictionAvailable      =    isChroma(compID)
                                                         && pcCU->getSlice()->getPPS()->getPpsRangeExtension().getCrossComponentPredictionEnabledFlag()
                                                         && (pcCU->getCbf(subTUAbsPartIdx, COMPONENT_Y, uiTrMode) != 0);

          SChar preCalcAlpha = 0;
          const Pel *pLumaResi = m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix( COMPONENT_Y, rTu.getRect( COMPONENT_Y ).x0, rTu.getRect( COMPONENT_Y ).y0 );

          if (isCrossCPredictionAvailable)
          {
            const Bool bUseReconstructedResidualForEstimate = m_pcEncCfg->getUseReconBasedCrossCPredictionEstimate();
            const Pel  *const lumaResidualForEstimate       = bUseReconstructedResidualForEstimate ? pLumaResi                                                     : pcResi->getAddrPix(COMPONENT_Y, tuCompRect.x0, tuCompRect.y0);
            const UInt        lumaResidualStrideForEstimate = bUseReconstructedResidualForEstimate ? m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(COMPONENT_Y) : pcResi->getStride(COMPONENT_Y);

            preCalcAlpha = xCalcCrossComponentPredictionAlpha(TUIterator,
                                                              compID,
                                                              lumaResidualForEstimate,
                                                              pcResi->getAddrPix(compID, tuCompRect.x0, tuCompRect.y0),
                                                              tuCompRect.width,
                                                              tuCompRect.height,
                                                              lumaResidualStrideForEstimate,
                                                              pcResi->getStride(compID));
          }

          const Int transformSkipModesToTest    = checkTransformSkip[compID] ? 2 : 1;
          const Int crossCPredictionModesToTest = (preCalcAlpha != 0)        ? 2 : 1; // preCalcAlpha cannot be anything other than 0 if isCrossCPredictionAvailable is false

          const Bool isOneMode                  = (crossCPredictionModesToTest == 1) && (transformSkipModesToTest == 1);

          for (Int transformSkipModeId = 0; transformSkipModeId < transformSkipModesToTest; transformSkipModeId++)
          {
            pcCU->setTransformSkipPartRange(transformSkipModeId, compID, subTUAbsPartIdx, partIdxesPerSubTU);

            for (Int crossCPredictionModeId = 0; crossCPredictionModeId < crossCPredictionModesToTest; crossCPredictionModeId++)
            {
              const Bool isFirstMode          = (transformSkipModeId == 0) && (crossCPredictionModeId == 0);
              const Bool bUseCrossCPrediction = crossCPredictionModeId != 0;

              m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_ROOT ] );
              m_pcEntropyCoder->resetBits();

              pcCU->setTransformSkipPartRange(transformSkipModeId, compID, subTUAbsPartIdx, partIdxesPerSubTU);
              pcCU->setCrossComponentPredictionAlphaPartRange((bUseCrossCPrediction ? preCalcAlpha : 0), compID, subTUAbsPartIdx, partIdxesPerSubTU );

              if ((compID != COMPONENT_Cr) && ((transformSkipModeId == 1) ? m_pcEncCfg->getUseRDOQTS() : m_pcEncCfg->getUseRDOQ()))
              {
                m_pcEntropyCoder->estimateBit(m_pcTrQuant->m_pcEstBitsSbac, tuCompRect.width, tuCompRect.height, toChannelType(compID));
              }

#if RDOQ_CHROMA_LAMBDA
              m_pcTrQuant->selectLambda(compID);
#endif

              Pel *pcResiCurrComp = m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix(compID, tuCompRect.x0, tuCompRect.y0);
              UInt resiStride     = m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID);

              TCoeff bestCoeffComp   [MAX_TU_SIZE*MAX_TU_SIZE];
              Pel    bestResiComp    [MAX_TU_SIZE*MAX_TU_SIZE];

#if ADAPTIVE_QP_SELECTION
              TCoeff bestArlCoeffComp[MAX_TU_SIZE*MAX_TU_SIZE];
#endif
              TCoeff     currAbsSum   = 0;
              UInt       currCompBits = 0;
              Distortion currCompDist = 0;
              Double     currCompCost = 0;
              UInt       nonCoeffBits = 0;
              Distortion nonCoeffDist = 0;
              Double     nonCoeffCost = 0;

              if(!isOneMode && !isFirstMode)
              {
                memcpy(bestCoeffComp,    currentCoefficients,    (sizeof(TCoeff) * tuCompRect.width * tuCompRect.height));
#if ADAPTIVE_QP_SELECTION
                memcpy(bestArlCoeffComp, currentARLCoefficients, (sizeof(TCoeff) * tuCompRect.width * tuCompRect.height));
#endif
                for(Int y = 0; y < tuCompRect.height; y++)
                {
                  memcpy(&bestResiComp[y * tuCompRect.width], (pcResiCurrComp + (y * resiStride)), (sizeof(Pel) * tuCompRect.width));
                }
              }

              if (bUseCrossCPrediction)
              {
                TComTrQuant::crossComponentPrediction(TUIterator,
                                                      compID,
                                                      pLumaResi,
                                                      pcResi->getAddrPix(compID, tuCompRect.x0, tuCompRect.y0),
                                                      crossCPredictedResidualBuffer,
                                                      tuCompRect.width,
                                                      tuCompRect.height,
                                                      m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(COMPONENT_Y),
                                                      pcResi->getStride(compID),
                                                      tuCompRect.width,
                                                      false);

                m_pcTrQuant->transformNxN(TUIterator, compID, crossCPredictedResidualBuffer, tuCompRect.width, currentCoefficients,
#if ADAPTIVE_QP_SELECTION
                                          currentARLCoefficients,
#endif
                                          currAbsSum, cQP);
              }
              else
              {
                m_pcTrQuant->transformNxN(TUIterator, compID, pcResi->getAddrPix( compID, tuCompRect.x0, tuCompRect.y0 ), pcResi->getStride(compID), currentCoefficients,
#if ADAPTIVE_QP_SELECTION
                                          currentARLCoefficients,
#endif
                                          currAbsSum, cQP);
              }

              if(isFirstMode || (currAbsSum == 0))
              {
                if (bUseCrossCPrediction)
                {
                  TComTrQuant::crossComponentPrediction(TUIterator,
                                                        compID,
                                                        pLumaResi,
                                                        m_pTempPel,
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix(compID, tuCompRect.x0, tuCompRect.y0),
                                                        tuCompRect.width,
                                                        tuCompRect.height,
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(COMPONENT_Y),
                                                        tuCompRect.width,
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID),
                                                        true);

                  nonCoeffDist = m_pcRdCost->getDistPart( channelBitDepth, m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix( compID, tuCompRect.x0, tuCompRect.y0 ),
                                                          m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride( compID ), pcResi->getAddrPix( compID, tuCompRect.x0, tuCompRect.y0 ),
                                                          pcResi->getStride(compID), tuCompRect.width, tuCompRect.height, compID); // initialized with zero residual distortion
                }
                else
                {
                  nonCoeffDist = m_pcRdCost->getDistPart( channelBitDepth, m_pTempPel, tuCompRect.width, pcResi->getAddrPix( compID, tuCompRect.x0, tuCompRect.y0 ),
                                                          pcResi->getStride(compID), tuCompRect.width, tuCompRect.height, compID); // initialized with zero residual distortion
                }

                m_pcEntropyCoder->encodeQtCbfZero( TUIterator, toChannelType(compID) );

                if ( isCrossCPredictionAvailable )
                {
                  m_pcEntropyCoder->encodeCrossComponentPrediction( TUIterator, compID );
                }

                nonCoeffBits = m_pcEntropyCoder->getNumberOfWrittenBits();
                nonCoeffCost = m_pcRdCost->calcRdCost( nonCoeffBits, nonCoeffDist );
              }

              if((puiZeroDist != NULL) && isFirstMode)
              {
                *puiZeroDist += nonCoeffDist; // initialized with zero residual distortion
              }

              DEBUG_STRING_NEW(sSingleStringTest)

              if( currAbsSum > 0 ) //if non-zero coefficients are present, a residual needs to be derived for further prediction
              {
                if (isFirstMode)
                {
                  m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_ROOT ] );
                  m_pcEntropyCoder->resetBits();
                }

                m_pcEntropyCoder->encodeQtCbf( TUIterator, compID, true );

                if (isCrossCPredictionAvailable)
                {
                  m_pcEntropyCoder->encodeCrossComponentPrediction( TUIterator, compID );
                }

                m_pcEntropyCoder->encodeCoeffNxN( TUIterator, currentCoefficients, compID );
                currCompBits = m_pcEntropyCoder->getNumberOfWrittenBits();

                pcResiCurrComp = m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix( compID, tuCompRect.x0, tuCompRect.y0 );

                m_pcTrQuant->invTransformNxN( TUIterator, compID, pcResiCurrComp, m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID), currentCoefficients, cQP DEBUG_STRING_PASS_INTO_OPTIONAL(&sSingleStringTest, (DebugOptionList::DebugString_InvTran.getInt()&debugPredModeMask)) );

                if (bUseCrossCPrediction)
                {
                  TComTrQuant::crossComponentPrediction(TUIterator,
                                                        compID,
                                                        pLumaResi,
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix(compID, tuCompRect.x0, tuCompRect.y0),
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix(compID, tuCompRect.x0, tuCompRect.y0),
                                                        tuCompRect.width,
                                                        tuCompRect.height,
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(COMPONENT_Y),
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID     ),
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID     ),
                                                        true);
                }

                currCompDist = m_pcRdCost->getDistPart( channelBitDepth, m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix( compID, tuCompRect.x0, tuCompRect.y0 ),
                                                        m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID),
                                                        pcResi->getAddrPix( compID, tuCompRect.x0, tuCompRect.y0 ),
                                                        pcResi->getStride(compID),
                                                        tuCompRect.width, tuCompRect.height, compID);

                currCompCost = m_pcRdCost->calcRdCost(currCompBits, currCompDist);
                  
                if (pcCU->isLosslessCoded(0))
                {
                  nonCoeffCost = MAX_DOUBLE;
                }
              }
              else if ((transformSkipModeId == 1) && !bUseCrossCPrediction)
              {
                currCompCost = MAX_DOUBLE;
              }
              else
              {
                currCompBits = nonCoeffBits;
                currCompDist = nonCoeffDist;
                currCompCost = nonCoeffCost;
              }

              // evaluate
              if ((currCompCost < minCost[compID][subTUIndex]) || ((transformSkipModeId == 1) && (currCompCost == minCost[compID][subTUIndex])))
              {
                bestExplicitRdpcmModeUnSplit[compID][subTUIndex] = pcCU->getExplicitRdpcmMode(compID, subTUAbsPartIdx);

                if(isFirstMode) //check for forced null
                {
                  if((nonCoeffCost < currCompCost) || (currAbsSum == 0))
                  {
                    memset(currentCoefficients, 0, (sizeof(TCoeff) * tuCompRect.width * tuCompRect.height));

                    currAbsSum   = 0;
                    currCompBits = nonCoeffBits;
                    currCompDist = nonCoeffDist;
                    currCompCost = nonCoeffCost;
                  }
                }

#if DEBUG_STRING
                if (currAbsSum > 0)
                {
                  DEBUG_STRING_SWAP(sSingleStringComp[compID], sSingleStringTest)
                }
                else
                {
                  sSingleStringComp[compID].clear();
                }
#endif

                uiAbsSum                 [compID][subTUIndex] = currAbsSum;
                uiSingleDistComp         [compID][subTUIndex] = currCompDist;
                minCost                  [compID][subTUIndex] = currCompCost;
                uiBestTransformMode      [compID][subTUIndex] = transformSkipModeId;
                bestCrossCPredictionAlpha[compID][subTUIndex] = (crossCPredictionModeId == 1) ? pcCU->getCrossComponentPredictionAlpha(subTUAbsPartIdx, compID) : 0;

                if (uiAbsSum[compID][subTUIndex] == 0)
                {
                  if (bUseCrossCPrediction)
                  {
                    TComTrQuant::crossComponentPrediction(TUIterator,
                                                          compID,
                                                          pLumaResi,
                                                          m_pTempPel,
                                                          m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix(compID, tuCompRect.x0, tuCompRect.y0),
                                                          tuCompRect.width,
                                                          tuCompRect.height,
                                                          m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(COMPONENT_Y),
                                                          tuCompRect.width,
                                                          m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID),
                                                          true);
                  }
                  else
                  {
                    pcResiCurrComp = m_pcQTTempTComYuv[uiQTTempAccessLayer].getAddrPix(compID, tuCompRect.x0, tuCompRect.y0);
                    const UInt uiStride = m_pcQTTempTComYuv[uiQTTempAccessLayer].getStride(compID);
                    for(UInt uiY = 0; uiY < tuCompRect.height; uiY++)
                    {
                      memset(pcResiCurrComp, 0, (sizeof(Pel) * tuCompRect.width));
                      pcResiCurrComp += uiStride;
                    }
                  }
                }
              }
              else
              {
                // reset
                memcpy(currentCoefficients,    bestCoeffComp,    (sizeof(TCoeff) * tuCompRect.width * tuCompRect.height));
#if ADAPTIVE_QP_SELECTION
                memcpy(currentARLCoefficients, bestArlCoeffComp, (sizeof(TCoeff) * tuCompRect.width * tuCompRect.height));
#endif
                for (Int y = 0; y < tuCompRect.height; y++)
                {
                  memcpy((pcResiCurrComp + (y * resiStride)), &bestResiComp[y * tuCompRect.width], (sizeof(Pel) * tuCompRect.width));
                }
              }
            }
          }

          pcCU->setExplicitRdpcmModePartRange            (   bestExplicitRdpcmModeUnSplit[compID][subTUIndex],                            compID, subTUAbsPartIdx, partIdxesPerSubTU);
          pcCU->setTransformSkipPartRange                (   uiBestTransformMode         [compID][subTUIndex],                            compID, subTUAbsPartIdx, partIdxesPerSubTU );
          pcCU->setCbfPartRange                          ((((uiAbsSum                    [compID][subTUIndex] > 0) ? 1 : 0) << uiTrMode), compID, subTUAbsPartIdx, partIdxesPerSubTU );
          pcCU->setCrossComponentPredictionAlphaPartRange(   bestCrossCPredictionAlpha   [compID][subTUIndex],                            compID, subTUAbsPartIdx, partIdxesPerSubTU );
        } while (TUIterator.nextSection(rTu)); //end of sub-TU loop
      } // processing section
    } // component loop

    for(UInt ch = 0; ch < numValidComp; ch++)
    {
      const ComponentID compID = ComponentID(ch);
      if (rTu.ProcessComponentSection(compID) && (rTu.getRect(compID).width != rTu.getRect(compID).height))
      {
        offsetSubTUCBFs(rTu, compID); //the CBFs up to now have been defined for two sub-TUs - shift them down a level and replace with the parent level CBF
      }
    }

    m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_ROOT ] );
    m_pcEntropyCoder->resetBits();

    if( uiLog2TrSize > pcCU->getQuadtreeTULog2MinSizeInCU(uiAbsPartIdx) )
    {
      m_pcEntropyCoder->encodeTransformSubdivFlag( 0, 5 - uiLog2TrSize );
    }

    for(UInt ch = 0; ch < numValidComp; ch++)
    {
      const UInt chOrderChange = ((ch + 1) == numValidComp) ? 0 : (ch + 1);
      const ComponentID compID=ComponentID(chOrderChange);
      if( rTu.ProcessComponentSection(compID) )
      {
        m_pcEntropyCoder->encodeQtCbf( rTu, compID, true );
      }
    }

    for(UInt ch = 0; ch < numValidComp; ch++)
    {
      const ComponentID compID=ComponentID(ch);
      if (rTu.ProcessComponentSection(compID))
      {
        if(isChroma(compID) && (uiAbsSum[COMPONENT_Y][0] != 0))
        {
          m_pcEntropyCoder->encodeCrossComponentPrediction( rTu, compID );
        }

        m_pcEntropyCoder->encodeCoeffNxN( rTu, pcCoeffCurr[compID], compID );
        for (UInt subTUIndex = 0; subTUIndex < 2; subTUIndex++)
        {
          uiSingleDist += uiSingleDistComp[compID][subTUIndex];
        }
      }
    }

    uiSingleBits = m_pcEntropyCoder->getNumberOfWrittenBits();

    dSingleCost = m_pcRdCost->calcRdCost( uiSingleBits, uiSingleDist );
  } // check full

  // code sub-blocks
  if( bCheckSplit )
  {
    if( bCheckFull )
    {
      m_pcRDGoOnSbacCoder->store( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_TEST ] );
      m_pcRDGoOnSbacCoder->load ( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_ROOT ] );
    }
    Distortion uiSubdivDist = 0;
    UInt       uiSubdivBits = 0;
    Double     dSubdivCost = 0.0;

    //save the non-split CBFs in case we need to restore them later

    UInt bestCBF     [MAX_NUM_COMPONENT];
    UInt bestsubTUCBF[MAX_NUM_COMPONENT][2];
    for(UInt ch = 0; ch < numValidComp; ch++)
    {
      const ComponentID compID=ComponentID(ch);

      if (rTu.ProcessComponentSection(compID))
      {
        bestCBF[compID] = pcCU->getCbf(uiAbsPartIdx, compID, uiTrMode);

        const TComRectangle &tuCompRect = rTu.getRect(compID);
        if (tuCompRect.width != tuCompRect.height)
        {
          const UInt partIdxesPerSubTU = rTu.GetAbsPartIdxNumParts(compID) >> 1;

          for (UInt subTU = 0; subTU < 2; subTU++)
          {
            bestsubTUCBF[compID][subTU] = pcCU->getCbf ((uiAbsPartIdx + (subTU * partIdxesPerSubTU)), compID, subTUDepth);
          }
        }
      }
    }


    TComTURecurse tuRecurseChild(rTu, false);
    const UInt uiQPartNumSubdiv = tuRecurseChild.GetAbsPartIdxNumParts();

    DEBUG_STRING_NEW(sSplitString[MAX_NUM_COMPONENT])

    do
    {
      DEBUG_STRING_NEW(childString)
      xEstimateInterResidualQT( pcResi, dSubdivCost, uiSubdivBits, uiSubdivDist, bCheckFull ? NULL : puiZeroDist,  tuRecurseChild DEBUG_STRING_PASS_INTO(childString));
#if DEBUG_STRING
      // split the string by component and append to the relevant output (because decoder decodes in channel order, whereas this search searches by TU-order)
      std::size_t lastPos=0;
      const std::size_t endStrng=childString.find(debug_reorder_data_inter_token[MAX_NUM_COMPONENT], lastPos);
      for(UInt ch = 0; ch < numValidComp; ch++)
      {
        if (lastPos!=std::string::npos && childString.find(debug_reorder_data_inter_token[ch], lastPos)==lastPos)
        {
          lastPos+=strlen(debug_reorder_data_inter_token[ch]); // skip leading string
        }
        std::size_t pos=childString.find(debug_reorder_data_inter_token[ch+1], lastPos);
        if (pos!=std::string::npos && pos>endStrng)
        {
          lastPos=endStrng;
        }
        sSplitString[ch]+=childString.substr(lastPos, (pos==std::string::npos)? std::string::npos : (pos-lastPos) );
        lastPos=pos;
      }
#endif
    } while ( tuRecurseChild.nextSection(rTu) ) ;

    UInt uiCbfAny=0;
    for(UInt ch = 0; ch < numValidComp; ch++)
    {
      UInt uiYUVCbf = 0;
      for( UInt ui = 0; ui < 4; ++ui )
      {
        uiYUVCbf |= pcCU->getCbf( uiAbsPartIdx + ui * uiQPartNumSubdiv, ComponentID(ch),  uiTrMode + 1 );
      }
      UChar *pBase=pcCU->getCbf( ComponentID(ch) );
      const UInt flags=uiYUVCbf << uiTrMode;
      for( UInt ui = 0; ui < 4 * uiQPartNumSubdiv; ++ui )
      {
        pBase[uiAbsPartIdx + ui] |= flags;
      }
      uiCbfAny|=uiYUVCbf;
    }

    m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_ROOT ] );
    m_pcEntropyCoder->resetBits();

    // when compID isn't a channel, code Cbfs:
    xEncodeInterResidualQT( MAX_NUM_COMPONENT, rTu );
    for(UInt ch = 0; ch < numValidComp; ch++)
    {
      xEncodeInterResidualQT( ComponentID(ch), rTu );
    }

    uiSubdivBits = m_pcEntropyCoder->getNumberOfWrittenBits();
    dSubdivCost  = m_pcRdCost->calcRdCost( uiSubdivBits, uiSubdivDist );

    if (!bCheckFull || (uiCbfAny && (dSubdivCost < dSingleCost)))
    {
      rdCost += dSubdivCost;
      ruiBits += uiSubdivBits;
      ruiDist += uiSubdivDist;
#if DEBUG_STRING
      for(UInt ch = 0; ch < numValidComp; ch++)
      {
        DEBUG_STRING_APPEND(sDebug, debug_reorder_data_inter_token[ch])
        DEBUG_STRING_APPEND(sDebug, sSplitString[ch])
      }
#endif
    }
    else
    {
      rdCost  += dSingleCost;
      ruiBits += uiSingleBits;
      ruiDist += uiSingleDist;

      //restore state to unsplit

      pcCU->setTrIdxSubParts( uiTrMode, uiAbsPartIdx, uiDepth );

      for(UInt ch = 0; ch < numValidComp; ch++)
      {
        const ComponentID compID=ComponentID(ch);

        DEBUG_STRING_APPEND(sDebug, debug_reorder_data_inter_token[ch])
        if (rTu.ProcessComponentSection(compID))
        {
          DEBUG_STRING_APPEND(sDebug, sSingleStringComp[compID])

          const Bool splitIntoSubTUs   = rTu.getRect(compID).width != rTu.getRect(compID).height;
          const UInt numberOfSections  = splitIntoSubTUs ? 2 : 1;
          const UInt partIdxesPerSubTU = rTu.GetAbsPartIdxNumParts(compID) >> (splitIntoSubTUs ? 1 : 0);

          for (UInt subTUIndex = 0; subTUIndex < numberOfSections; subTUIndex++)
          {
            const UInt  uisubTUPartIdx = uiAbsPartIdx + (subTUIndex * partIdxesPerSubTU);

            if (splitIntoSubTUs)
            {
              const UChar combinedCBF = (bestsubTUCBF[compID][subTUIndex] << subTUDepth) | (bestCBF[compID] << uiTrMode);
              pcCU->setCbfPartRange(combinedCBF, compID, uisubTUPartIdx, partIdxesPerSubTU);
            }
            else
            {
              pcCU->setCbfPartRange((bestCBF[compID] << uiTrMode), compID, uisubTUPartIdx, partIdxesPerSubTU);
            }

            pcCU->setCrossComponentPredictionAlphaPartRange(bestCrossCPredictionAlpha[compID][subTUIndex], compID, uisubTUPartIdx, partIdxesPerSubTU);
            pcCU->setTransformSkipPartRange(uiBestTransformMode[compID][subTUIndex], compID, uisubTUPartIdx, partIdxesPerSubTU);
            pcCU->setExplicitRdpcmModePartRange(bestExplicitRdpcmModeUnSplit[compID][subTUIndex], compID, uisubTUPartIdx, partIdxesPerSubTU);
          }
        }
      }

      m_pcRDGoOnSbacCoder->load( m_pppcRDSbacCoder[ uiDepth ][ CI_QT_TRAFO_TEST ] );
    }
  }
  else
  {
    rdCost  += dSingleCost;
    ruiBits += uiSingleBits;
    ruiDist += uiSingleDist;
#if DEBUG_STRING
    for(UInt ch = 0; ch < numValidComp; ch++)
    {
      const ComponentID compID=ComponentID(ch);
      DEBUG_STRING_APPEND(sDebug, debug_reorder_data_inter_token[compID])

      if (rTu.ProcessComponentSection(compID))
      {
        DEBUG_STRING_APPEND(sDebug, sSingleStringComp[compID])
      }
    }
#endif
  }
  DEBUG_STRING_APPEND(sDebug, debug_reorder_data_inter_token[MAX_NUM_COMPONENT])
}



Void TEncSearch::xEncodeInterResidualQT( const ComponentID compID, TComTU &rTu )
{
  TComDataCU* pcCU=rTu.getCU();
  const UInt uiAbsPartIdx=rTu.GetAbsPartIdxTU();
  const UInt uiCurrTrMode = rTu.GetTransformDepthRel();
  assert( pcCU->getDepth( 0 ) == pcCU->getDepth( uiAbsPartIdx ) );
  const UInt uiTrMode = pcCU->getTransformIdx( uiAbsPartIdx );

  const Bool bSubdiv = uiCurrTrMode != uiTrMode;

  const UInt uiLog2TrSize = rTu.GetLog2LumaTrSize();

  if (compID==MAX_NUM_COMPONENT)  // we are not processing a channel, instead we always recurse and code the CBFs
  {
    if( uiLog2TrSize <= pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() && uiLog2TrSize > pcCU->getQuadtreeTULog2MinSizeInCU(uiAbsPartIdx) )
    {
      if((pcCU->getSlice()->getSPS()->getQuadtreeTUMaxDepthInter() == 1) && (pcCU->getPartitionSize(uiAbsPartIdx) != SIZE_2Nx2N))
      {
        assert(bSubdiv); // Inferred splitting rule - see derivation and use of interSplitFlag in the specification.
      }
      else
      {
        m_pcEntropyCoder->encodeTransformSubdivFlag( bSubdiv, 5 - uiLog2TrSize );
      }
    }

    assert( !pcCU->isIntra(uiAbsPartIdx) );

    const Bool bFirstCbfOfCU = uiCurrTrMode == 0;

    for (UInt ch=COMPONENT_Cb; ch<pcCU->getPic()->getNumberValidComponents(); ch++)
    {
      const ComponentID compIdInner=ComponentID(ch);
      if( bFirstCbfOfCU || rTu.ProcessingAllQuadrants(compIdInner) )
      {
        if( bFirstCbfOfCU || pcCU->getCbf( uiAbsPartIdx, compIdInner, uiCurrTrMode - 1 ) )
        {
          m_pcEntropyCoder->encodeQtCbf( rTu, compIdInner, !bSubdiv );
        }
      }
      else
      {
        assert( pcCU->getCbf( uiAbsPartIdx, compIdInner, uiCurrTrMode ) == pcCU->getCbf( uiAbsPartIdx, compIdInner, uiCurrTrMode - 1 ) );
      }
    }

    if (!bSubdiv)
    {
      m_pcEntropyCoder->encodeQtCbf( rTu, COMPONENT_Y, true );
    }
  }

  if( !bSubdiv )
  {
    if (compID != MAX_NUM_COMPONENT) // we have already coded the CBFs, so now we code coefficients
    {
      if (rTu.ProcessComponentSection(compID))
      {
        if (isChroma(compID) && (pcCU->getCbf(uiAbsPartIdx, COMPONENT_Y, uiTrMode) != 0))
        {
          m_pcEntropyCoder->encodeCrossComponentPrediction(rTu, compID);
        }

        if (pcCU->getCbf(uiAbsPartIdx, compID, uiTrMode) != 0)
        {
          const UInt uiQTTempAccessLayer = pcCU->getSlice()->getSPS()->getQuadtreeTULog2MaxSize() - uiLog2TrSize;
          TCoeff *pcCoeffCurr = m_ppcQTTempCoeff[compID][uiQTTempAccessLayer] + rTu.getCoefficientOffset(compID);
          m_pcEntropyCoder->encodeCoeffNxN( rTu, pcCoeffCurr, compID );
        }
      }
    }
  }
  else
  {
    if( compID==MAX_NUM_COMPONENT || pcCU->getCbf( uiAbsPartIdx, compID, uiCurrTrMode ) )
    {
      TComTURecurse tuRecurseChild(rTu, false);
      do
      {
        xEncodeInterResidualQT( compID, tuRecurseChild );
      } while (tuRecurseChild.nextSection(rTu));
    }
  }
}




Void TEncSearch::xSetInterResidualQTData( TComYuv* pcResi, Bool bSpatial, TComTU &rTu ) // TODO: turn this into two functions for bSpatial=true and false.
{
  TComDataCU* pcCU=rTu.getCU();
  const UInt uiCurrTrMode=rTu.GetTransformDepthRel();
  const UInt uiAbsPartIdx=rTu.GetAbsPartIdxTU();
  assert( pcCU->getDepth( 0 ) == pcCU->getDepth( uiAbsPartIdx ) );
  const UInt uiTrMode = pcCU->getTransformIdx( uiAbsPartIdx );
  const TComSPS *sps=pcCU->getSlice()->getSPS();

  if( uiCurrTrMode == uiTrMode )
  {
    const UInt uiLog2TrSize = rTu.GetLog2LumaTrSize();
    const UInt uiQTTempAccessLayer = sps->getQuadtreeTULog2MaxSize() - uiLog2TrSize;

    if( bSpatial )
    {
      // Data to be copied is in the spatial domain, i.e., inverse-transformed.

      for(UInt i=0; i<pcResi->getNumberValidComponents(); i++)
      {
        const ComponentID compID=ComponentID(i);
        if (rTu.ProcessComponentSection(compID))
        {
          const TComRectangle &rectCompTU(rTu.getRect(compID));
          m_pcQTTempTComYuv[uiQTTempAccessLayer].copyPartToPartComponentMxN    ( compID, pcResi, rectCompTU );
        }
      }
    }
    else
    {
      for (UInt ch=0; ch < getNumberValidComponents(sps->getChromaFormatIdc()); ch++)
      {
        const ComponentID compID   = ComponentID(ch);
        if (rTu.ProcessComponentSection(compID))
        {
          const TComRectangle &rectCompTU(rTu.getRect(compID));
          const UInt numCoeffInBlock    = rectCompTU.width * rectCompTU.height;
          const UInt offset             = rTu.getCoefficientOffset(compID);
          TCoeff* dest                  = pcCU->getCoeff(compID)                        + offset;
          const TCoeff* src             = m_ppcQTTempCoeff[compID][uiQTTempAccessLayer] + offset;
          ::memcpy( dest, src, sizeof(TCoeff)*numCoeffInBlock );

#if ADAPTIVE_QP_SELECTION
          TCoeff* pcArlCoeffSrc            = m_ppcQTTempArlCoeff[compID][uiQTTempAccessLayer] + offset;
          TCoeff* pcArlCoeffDst            = pcCU->getArlCoeff(compID)                        + offset;
          ::memcpy( pcArlCoeffDst, pcArlCoeffSrc, sizeof( TCoeff ) * numCoeffInBlock );
#endif
        }
      }
    }
  }
  else
  {

    TComTURecurse tuRecurseChild(rTu, false);
    do
    {
      xSetInterResidualQTData( pcResi, bSpatial, tuRecurseChild );
    } while (tuRecurseChild.nextSection(rTu));
  }
}




UInt TEncSearch::xModeBitsIntra( TComDataCU* pcCU, UInt uiMode, UInt uiPartOffset, UInt uiDepth, const ChannelType chType )
{
  // Reload only contexts required for coding intra mode information
  m_pcRDGoOnSbacCoder->loadIntraDirMode( m_pppcRDSbacCoder[uiDepth][CI_CURR_BEST], chType );

  // Temporarily set the intra dir being tested, and only
  // for absPartIdx, since encodeIntraDirModeLuma/Chroma only use
  // the entry at absPartIdx.

  UChar &rIntraDirVal=pcCU->getIntraDir( chType )[uiPartOffset];
  UChar origVal=rIntraDirVal;
  rIntraDirVal = uiMode;
  //pcCU->setIntraDirSubParts ( chType, uiMode, uiPartOffset, uiDepth + uiInitTrDepth );

  m_pcEntropyCoder->resetBits();
  if (isLuma(chType))
  {
    m_pcEntropyCoder->encodeIntraDirModeLuma ( pcCU, uiPartOffset);
  }
  else
  {
    m_pcEntropyCoder->encodeIntraDirModeChroma ( pcCU, uiPartOffset);
  }

  rIntraDirVal = origVal; // restore

  return m_pcEntropyCoder->getNumberOfWrittenBits();
}




UInt TEncSearch::xUpdateCandList( UInt uiMode, Double uiCost, UInt uiFastCandNum, UInt * CandModeList, Double * CandCostList )
{
  UInt i;
  UInt shift=0;

  while ( shift<uiFastCandNum && uiCost<CandCostList[ uiFastCandNum-1-shift ] )
  {
    shift++;
  }

  if( shift!=0 )
  {
    for(i=1; i<shift; i++)
    {
      CandModeList[ uiFastCandNum-i ] = CandModeList[ uiFastCandNum-1-i ];
      CandCostList[ uiFastCandNum-i ] = CandCostList[ uiFastCandNum-1-i ];
    }
    CandModeList[ uiFastCandNum-shift ] = uiMode;
    CandCostList[ uiFastCandNum-shift ] = uiCost;
    return 1;
  }

  return 0;
}





/** add inter-prediction syntax elements for a CU block
 * \param pcCU
 * \param uiQp
 * \param uiTrMode
 * \param ruiBits
 * \returns Void
 */
Void  TEncSearch::xAddSymbolBitsInter( TComDataCU* pcCU, UInt& ruiBits )
{
  if(pcCU->getMergeFlag( 0 ) && pcCU->getPartitionSize( 0 ) == SIZE_2Nx2N && !pcCU->getQtRootCbf( 0 ))
  {
    pcCU->setSkipFlagSubParts( true, 0, pcCU->getDepth(0) );

    m_pcEntropyCoder->resetBits();
    if(pcCU->getSlice()->getPPS()->getTransquantBypassEnableFlag())
    {
      m_pcEntropyCoder->encodeCUTransquantBypassFlag(pcCU, 0, true);
    }
    m_pcEntropyCoder->encodeSkipFlag(pcCU, 0, true);
    m_pcEntropyCoder->encodeMergeIndex(pcCU, 0, true);

    ruiBits += m_pcEntropyCoder->getNumberOfWrittenBits();
  }
  else
  {
    m_pcEntropyCoder->resetBits();

    if(pcCU->getSlice()->getPPS()->getTransquantBypassEnableFlag())
    {
      m_pcEntropyCoder->encodeCUTransquantBypassFlag(pcCU, 0, true);
    }

    m_pcEntropyCoder->encodeSkipFlag ( pcCU, 0, true );
    m_pcEntropyCoder->encodePredMode( pcCU, 0, true );
    m_pcEntropyCoder->encodePartSize( pcCU, 0, pcCU->getDepth(0), true );
    m_pcEntropyCoder->encodePredInfo( pcCU, 0 );

    Bool codeDeltaQp = false;
    Bool codeChromaQpAdj = false;
    m_pcEntropyCoder->encodeCoeff   ( pcCU, 0, pcCU->getDepth(0), codeDeltaQp, codeChromaQpAdj );

    ruiBits += m_pcEntropyCoder->getNumberOfWrittenBits();
  }
}





/**
 * \brief Generate half-sample interpolated block
 *
 * \param pattern Reference picture ROI
 * \param biPred    Flag indicating whether block is for biprediction
 */
Void TEncSearch::xExtDIFUpSamplingH( TComPattern* pattern )
{
  Int width      = pattern->getROIYWidth();
  Int height     = pattern->getROIYHeight();
  Int srcStride  = pattern->getPatternLStride();

  Int intStride = m_filteredBlockTmp[0].getStride(COMPONENT_Y);
  Int dstStride = m_filteredBlock[0][0].getStride(COMPONENT_Y);
  Pel *intPtr;
  Pel *dstPtr;
  Int filterSize = NTAPS_LUMA;
  Int halfFilterSize = (filterSize>>1);
  Pel *srcPtr = pattern->getROIY() - halfFilterSize*srcStride - 1;

  const ChromaFormat chFmt = m_filteredBlock[0][0].getChromaFormat();

  m_if.filterHor(COMPONENT_Y, srcPtr, srcStride, m_filteredBlockTmp[0].getAddr(COMPONENT_Y), intStride, width+1, height+filterSize, 0, false, chFmt, pattern->getBitDepthY());
  m_if.filterHor(COMPONENT_Y, srcPtr, srcStride, m_filteredBlockTmp[2].getAddr(COMPONENT_Y), intStride, width+1, height+filterSize, 2, false, chFmt, pattern->getBitDepthY());

  intPtr = m_filteredBlockTmp[0].getAddr(COMPONENT_Y) + halfFilterSize * intStride + 1;
  dstPtr = m_filteredBlock[0][0].getAddr(COMPONENT_Y);
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width+0, height+0, 0, false, true, chFmt, pattern->getBitDepthY());

  intPtr = m_filteredBlockTmp[0].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride + 1;
  dstPtr = m_filteredBlock[2][0].getAddr(COMPONENT_Y);
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width+0, height+1, 2, false, true, chFmt, pattern->getBitDepthY());

  intPtr = m_filteredBlockTmp[2].getAddr(COMPONENT_Y) + halfFilterSize * intStride;
  dstPtr = m_filteredBlock[0][2].getAddr(COMPONENT_Y);
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width+1, height+0, 0, false, true, chFmt, pattern->getBitDepthY());

  intPtr = m_filteredBlockTmp[2].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
  dstPtr = m_filteredBlock[2][2].getAddr(COMPONENT_Y);
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width+1, height+1, 2, false, true, chFmt, pattern->getBitDepthY());
}





/**
 * \brief Generate quarter-sample interpolated blocks
 *
 * \param pattern    Reference picture ROI
 * \param halfPelRef Half-pel mv
 * \param biPred     Flag indicating whether block is for biprediction
 */
Void TEncSearch::xExtDIFUpSamplingQ( TComPattern* pattern, TComMv halfPelRef )
{
  Int width      = pattern->getROIYWidth();
  Int height     = pattern->getROIYHeight();
  Int srcStride  = pattern->getPatternLStride();

  Pel *srcPtr;
  Int intStride = m_filteredBlockTmp[0].getStride(COMPONENT_Y);
  Int dstStride = m_filteredBlock[0][0].getStride(COMPONENT_Y);
  Pel *intPtr;
  Pel *dstPtr;
  Int filterSize = NTAPS_LUMA;

  Int halfFilterSize = (filterSize>>1);

  Int extHeight = (halfPelRef.getVer() == 0) ? height + filterSize : height + filterSize-1;

  const ChromaFormat chFmt = m_filteredBlock[0][0].getChromaFormat();

  // Horizontal filter 1/4
  srcPtr = pattern->getROIY() - halfFilterSize * srcStride - 1;
  intPtr = m_filteredBlockTmp[1].getAddr(COMPONENT_Y);
  if (halfPelRef.getVer() > 0)
  {
    srcPtr += srcStride;
  }
  if (halfPelRef.getHor() >= 0)
  {
    srcPtr += 1;
  }
  m_if.filterHor(COMPONENT_Y, srcPtr, srcStride, intPtr, intStride, width, extHeight, 1, false, chFmt, pattern->getBitDepthY());

  // Horizontal filter 3/4
  srcPtr = pattern->getROIY() - halfFilterSize*srcStride - 1;
  intPtr = m_filteredBlockTmp[3].getAddr(COMPONENT_Y);
  if (halfPelRef.getVer() > 0)
  {
    srcPtr += srcStride;
  }
  if (halfPelRef.getHor() > 0)
  {
    srcPtr += 1;
  }
  m_if.filterHor(COMPONENT_Y, srcPtr, srcStride, intPtr, intStride, width, extHeight, 3, false, chFmt, pattern->getBitDepthY());

  // Generate @ 1,1
  intPtr = m_filteredBlockTmp[1].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
  dstPtr = m_filteredBlock[1][1].getAddr(COMPONENT_Y);
  if (halfPelRef.getVer() == 0)
  {
    intPtr += intStride;
  }
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 1, false, true, chFmt, pattern->getBitDepthY());

  // Generate @ 3,1
  intPtr = m_filteredBlockTmp[1].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
  dstPtr = m_filteredBlock[3][1].getAddr(COMPONENT_Y);
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 3, false, true, chFmt, pattern->getBitDepthY());

  if (halfPelRef.getVer() != 0)
  {
    // Generate @ 2,1
    intPtr = m_filteredBlockTmp[1].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
    dstPtr = m_filteredBlock[2][1].getAddr(COMPONENT_Y);
    if (halfPelRef.getVer() == 0)
    {
      intPtr += intStride;
    }
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 2, false, true, chFmt, pattern->getBitDepthY());

    // Generate @ 2,3
    intPtr = m_filteredBlockTmp[3].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
    dstPtr = m_filteredBlock[2][3].getAddr(COMPONENT_Y);
    if (halfPelRef.getVer() == 0)
    {
      intPtr += intStride;
    }
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 2, false, true, chFmt, pattern->getBitDepthY());
  }
  else
  {
    // Generate @ 0,1
    intPtr = m_filteredBlockTmp[1].getAddr(COMPONENT_Y) + halfFilterSize * intStride;
    dstPtr = m_filteredBlock[0][1].getAddr(COMPONENT_Y);
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 0, false, true, chFmt, pattern->getBitDepthY());

    // Generate @ 0,3
    intPtr = m_filteredBlockTmp[3].getAddr(COMPONENT_Y) + halfFilterSize * intStride;
    dstPtr = m_filteredBlock[0][3].getAddr(COMPONENT_Y);
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 0, false, true, chFmt, pattern->getBitDepthY());
  }

  if (halfPelRef.getHor() != 0)
  {
    // Generate @ 1,2
    intPtr = m_filteredBlockTmp[2].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
    dstPtr = m_filteredBlock[1][2].getAddr(COMPONENT_Y);
    if (halfPelRef.getHor() > 0)
    {
      intPtr += 1;
    }
    if (halfPelRef.getVer() >= 0)
    {
      intPtr += intStride;
    }
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 1, false, true, chFmt, pattern->getBitDepthY());

    // Generate @ 3,2
    intPtr = m_filteredBlockTmp[2].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
    dstPtr = m_filteredBlock[3][2].getAddr(COMPONENT_Y);
    if (halfPelRef.getHor() > 0)
    {
      intPtr += 1;
    }
    if (halfPelRef.getVer() > 0)
    {
      intPtr += intStride;
    }
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 3, false, true, chFmt, pattern->getBitDepthY());
  }
  else
  {
    // Generate @ 1,0
    intPtr = m_filteredBlockTmp[0].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride + 1;
    dstPtr = m_filteredBlock[1][0].getAddr(COMPONENT_Y);
    if (halfPelRef.getVer() >= 0)
    {
      intPtr += intStride;
    }
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 1, false, true, chFmt, pattern->getBitDepthY());

    // Generate @ 3,0
    intPtr = m_filteredBlockTmp[0].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride + 1;
    dstPtr = m_filteredBlock[3][0].getAddr(COMPONENT_Y);
    if (halfPelRef.getVer() > 0)
    {
      intPtr += intStride;
    }
    m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 3, false, true, chFmt, pattern->getBitDepthY());
  }

  // Generate @ 1,3
  intPtr = m_filteredBlockTmp[3].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
  dstPtr = m_filteredBlock[1][3].getAddr(COMPONENT_Y);
  if (halfPelRef.getVer() == 0)
  {
    intPtr += intStride;
  }
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 1, false, true, chFmt, pattern->getBitDepthY());

  // Generate @ 3,3
  intPtr = m_filteredBlockTmp[3].getAddr(COMPONENT_Y) + (halfFilterSize-1) * intStride;
  dstPtr = m_filteredBlock[3][3].getAddr(COMPONENT_Y);
  m_if.filterVer(COMPONENT_Y, intPtr, intStride, dstPtr, dstStride, width, height, 3, false, true, chFmt, pattern->getBitDepthY());
}





//! set wp tables
Void  TEncSearch::setWpScalingDistParam( TComDataCU* pcCU, Int iRefIdx, RefPicList eRefPicListCur )
{
  if ( iRefIdx<0 )
  {
    m_cDistParam.bApplyWeight = false;
    return;
  }

  TComSlice       *pcSlice  = pcCU->getSlice();
  WPScalingParam  *wp0 , *wp1;

  m_cDistParam.bApplyWeight = ( pcSlice->getSliceType()==P_SLICE && pcSlice->testWeightPred() ) || ( pcSlice->getSliceType()==B_SLICE && pcSlice->testWeightBiPred() ) ;

  if ( !m_cDistParam.bApplyWeight )
  {
    return;
  }

  Int iRefIdx0 = ( eRefPicListCur == REF_PIC_LIST_0 ) ? iRefIdx : (-1);
  Int iRefIdx1 = ( eRefPicListCur == REF_PIC_LIST_1 ) ? iRefIdx : (-1);

  getWpScaling( pcCU, iRefIdx0, iRefIdx1, wp0 , wp1 );

  if ( iRefIdx0 < 0 )
  {
    wp0 = NULL;
  }
  if ( iRefIdx1 < 0 )
  {
    wp1 = NULL;
  }

  m_cDistParam.wpCur  = NULL;

  if ( eRefPicListCur == REF_PIC_LIST_0 )
  {
    m_cDistParam.wpCur = wp0;
  }
  else
  {
    m_cDistParam.wpCur = wp1;
  }
}



//! \}
